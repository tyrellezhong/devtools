<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>AcoContext::ThreadEntry_TBusppDriver (2,797,101,329 samples, 22.89%)</title><rect x="733.7" y="725" width="270.1" height="15.0" fill="rgb(218,69,44)" rx="2" ry="2" />
<text  x="736.68" y="735.5" >AcoContext::ThreadEntry_TBusppDriver</text>
</g>
<g >
<title>std::string::_M_copy (28,985,506 samples, 0.24%)</title><rect x="1111.6" y="693" width="2.8" height="15.0" fill="rgb(254,64,13)" rx="2" ry="2" />
<text  x="1114.61" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="473.3" y="517" width="1.4" height="15.0" fill="rgb(231,201,29)" rx="2" ry="2" />
<text  x="476.32" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::PrintMaybeWithMarker (14,492,753 samples, 0.12%)</title><rect x="124.8" y="485" width="1.4" height="15.0" fill="rgb(246,162,39)" rx="2" ry="2" />
<text  x="127.78" y="495.5" ></text>
</g>
<g >
<title>Log::WriteLog (14,492,753 samples, 0.12%)</title><rect x="179.4" y="581" width="1.4" height="15.0" fill="rgb(239,19,33)" rx="2" ry="2" />
<text  x="182.37" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::size (14,492,753 samples, 0.12%)</title><rect x="194.8" y="485" width="1.4" height="15.0" fill="rgb(236,24,49)" rx="2" ry="2" />
<text  x="197.77" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;opentelemetry::proto::common::v1::KeyValue&gt;::New (14,492,753 samples, 0.12%)</title><rect x="884.9" y="261" width="1.4" height="15.0" fill="rgb(236,115,52)" rx="2" ry="2" />
<text  x="887.85" y="271.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (57,971,012 samples, 0.47%)</title><rect x="842.9" y="661" width="5.6" height="15.0" fill="rgb(243,211,7)" rx="2" ry="2" />
<text  x="845.86" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="169.6" y="405" width="1.4" height="15.0" fill="rgb(211,112,41)" rx="2" ry="2" />
<text  x="172.57" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (86,956,518 samples, 0.71%)</title><rect x="938.0" y="533" width="8.4" height="15.0" fill="rgb(234,167,30)" rx="2" ry="2" />
<text  x="941.04" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::SpanContext::GetInvalid (14,492,753 samples, 0.12%)</title><rect x="512.5" y="453" width="1.4" height="15.0" fill="rgb(233,192,49)" rx="2" ry="2" />
<text  x="515.51" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="99.6" y="501" width="1.4" height="15.0" fill="rgb(233,153,16)" rx="2" ry="2" />
<text  x="102.58" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (14,492,753 samples, 0.12%)</title><rect x="1173.2" y="757" width="1.4" height="15.0" fill="rgb(231,217,9)" rx="2" ry="2" />
<text  x="1176.20" y="767.5" ></text>
</g>
<g >
<title>std::string::capacity (14,492,753 samples, 0.12%)</title><rect x="1097.6" y="645" width="1.4" height="15.0" fill="rgb(222,228,26)" rx="2" ry="2" />
<text  x="1100.62" y="655.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::~Span (14,492,753 samples, 0.12%)</title><rect x="436.9" y="325" width="1.4" height="15.0" fill="rgb(249,194,5)" rx="2" ry="2" />
<text  x="439.93" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="429.9" y="469" width="1.4" height="15.0" fill="rgb(219,219,54)" rx="2" ry="2" />
<text  x="432.93" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="42.2" y="565" width="1.4" height="15.0" fill="rgb(245,226,28)" rx="2" ry="2" />
<text  x="45.19" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::_M_reset_impl&lt;0ul, 1ul&gt; (14,492,753 samples, 0.12%)</title><rect x="390.7" y="469" width="1.4" height="15.0" fill="rgb(246,107,41)" rx="2" ry="2" />
<text  x="393.74" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::InRealOneof (14,492,753 samples, 0.12%)</title><rect x="952.0" y="501" width="1.4" height="15.0" fill="rgb(247,103,3)" rx="2" ry="2" />
<text  x="955.04" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="462.1" y="469" width="1.4" height="15.0" fill="rgb(253,61,3)" rx="2" ry="2" />
<text  x="465.12" y="479.5" ></text>
</g>
<g >
<title>msg::DBTdrBatchGetReq::IsInitialized (14,492,753 samples, 0.12%)</title><rect x="331.9" y="533" width="1.4" height="15.0" fill="rgb(239,202,50)" rx="2" ry="2" />
<text  x="334.95" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRepeatedMessage (57,971,012 samples, 0.47%)</title><rect x="206.0" y="485" width="5.6" height="15.0" fill="rgb(242,46,11)" rx="2" ry="2" />
<text  x="208.97" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::index (14,492,753 samples, 0.12%)</title><rect x="36.6" y="533" width="1.4" height="15.0" fill="rgb(227,57,43)" rx="2" ry="2" />
<text  x="39.60" y="543.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="453.7" y="485" width="2.8" height="15.0" fill="rgb(231,228,22)" rx="2" ry="2" />
<text  x="456.72" y="495.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="618.9" y="277" width="1.4" height="15.0" fill="rgb(230,191,35)" rx="2" ry="2" />
<text  x="621.90" y="287.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::~InstrumentationScope (14,492,753 samples, 0.12%)</title><rect x="386.5" y="357" width="1.4" height="15.0" fill="rgb(237,106,27)" rx="2" ry="2" />
<text  x="389.54" y="367.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (28,985,506 samples, 0.24%)</title><rect x="150.0" y="517" width="2.8" height="15.0" fill="rgb(250,214,51)" rx="2" ry="2" />
<text  x="152.98" y="527.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="561.5" y="213" width="1.4" height="15.0" fill="rgb(215,60,0)" rx="2" ry="2" />
<text  x="564.51" y="223.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="122.0" y="453" width="1.4" height="15.0" fill="rgb(207,126,6)" rx="2" ry="2" />
<text  x="124.98" y="463.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="199.0" y="405" width="1.4" height="15.0" fill="rgb(212,205,47)" rx="2" ry="2" />
<text  x="201.97" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="467.7" y="501" width="1.4" height="15.0" fill="rgb(251,48,33)" rx="2" ry="2" />
<text  x="470.72" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="973.0" y="533" width="1.4" height="15.0" fill="rgb(206,17,27)" rx="2" ry="2" />
<text  x="976.04" y="543.5" ></text>
</g>
<g >
<title>usleep (57,971,012 samples, 0.47%)</title><rect x="823.3" y="661" width="5.6" height="15.0" fill="rgb(247,114,24)" rx="2" ry="2" />
<text  x="826.26" y="671.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;NS_ACO::AcoEventManager::OnThreadExitList&gt;::_M_manager (14,492,753 samples, 0.12%)</title><rect x="12.8" y="677" width="1.4" height="15.0" fill="rgb(223,168,23)" rx="2" ry="2" />
<text  x="15.80" y="687.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (86,956,518 samples, 0.71%)</title><rect x="603.5" y="533" width="8.4" height="15.0" fill="rgb(238,154,19)" rx="2" ry="2" />
<text  x="606.50" y="543.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (14,492,753 samples, 0.12%)</title><rect x="520.9" y="533" width="1.4" height="15.0" fill="rgb(249,139,54)" rx="2" ry="2" />
<text  x="523.91" y="543.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="414.5" y="437" width="1.4" height="15.0" fill="rgb(220,164,27)" rx="2" ry="2" />
<text  x="417.53" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (43,478,259 samples, 0.36%)</title><rect x="439.7" y="517" width="4.2" height="15.0" fill="rgb(234,184,24)" rx="2" ry="2" />
<text  x="442.73" y="527.5" ></text>
</g>
<g >
<title>prometheus::Gauge::Change (14,492,753 samples, 0.12%)</title><rect x="78.6" y="421" width="1.4" height="15.0" fill="rgb(243,61,54)" rx="2" ry="2" />
<text  x="81.59" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="599.3" y="341" width="1.4" height="15.0" fill="rgb(242,203,0)" rx="2" ry="2" />
<text  x="602.30" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,492,753 samples, 0.12%)</title><rect x="380.9" y="597" width="1.4" height="15.0" fill="rgb(246,24,13)" rx="2" ry="2" />
<text  x="383.94" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="681.9" y="501" width="1.4" height="15.0" fill="rgb(220,14,12)" rx="2" ry="2" />
<text  x="684.89" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="901.6" y="549" width="1.4" height="15.0" fill="rgb(211,27,13)" rx="2" ry="2" />
<text  x="904.65" y="559.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (14,492,753 samples, 0.12%)</title><rect x="865.3" y="469" width="1.4" height="15.0" fill="rgb(228,114,3)" rx="2" ry="2" />
<text  x="868.26" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::string const, std::string&gt;, true&gt; &gt; &gt;::_M_deallocate_node (14,492,753 samples, 0.12%)</title><rect x="635.7" y="485" width="1.4" height="15.0" fill="rgb(210,195,53)" rx="2" ry="2" />
<text  x="638.69" y="495.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (14,492,753 samples, 0.12%)</title><rect x="586.7" y="501" width="1.4" height="15.0" fill="rgb(223,195,35)" rx="2" ry="2" />
<text  x="589.70" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="502.7" y="341" width="1.4" height="15.0" fill="rgb(246,59,38)" rx="2" ry="2" />
<text  x="505.72" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (28,985,506 samples, 0.24%)</title><rect x="298.4" y="437" width="2.8" height="15.0" fill="rgb(249,80,1)" rx="2" ry="2" />
<text  x="301.35" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetInt32 (14,492,753 samples, 0.12%)</title><rect x="469.1" y="517" width="1.4" height="15.0" fill="rgb(247,201,25)" rx="2" ry="2" />
<text  x="472.12" y="527.5" ></text>
</g>
<g >
<title>RPC::Request (420,289,837 samples, 3.44%)</title><rect x="137.4" y="613" width="40.6" height="15.0" fill="rgb(219,170,9)" rx="2" ry="2" />
<text  x="140.38" y="623.5" >RPC..</text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (14,492,753 samples, 0.12%)</title><rect x="67.4" y="325" width="1.4" height="15.0" fill="rgb(205,210,29)" rx="2" ry="2" />
<text  x="70.39" y="335.5" ></text>
</g>
<g >
<title>std::string::resize (28,985,506 samples, 0.24%)</title><rect x="954.8" y="469" width="2.8" height="15.0" fill="rgb(242,227,30)" rx="2" ry="2" />
<text  x="957.84" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="596.5" y="389" width="1.4" height="15.0" fill="rgb(206,110,45)" rx="2" ry="2" />
<text  x="599.50" y="399.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (28,985,506 samples, 0.24%)</title><rect x="305.3" y="357" width="2.8" height="15.0" fill="rgb(212,191,11)" rx="2" ry="2" />
<text  x="308.35" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::emplace_back&lt;google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="115.0" y="453" width="1.4" height="15.0" fill="rgb(212,165,18)" rx="2" ry="2" />
<text  x="117.98" y="463.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="529.3" y="341" width="1.4" height="15.0" fill="rgb(218,133,38)" rx="2" ry="2" />
<text  x="532.31" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (115,942,024 samples, 0.95%)</title><rect x="19.8" y="677" width="11.2" height="15.0" fill="rgb(224,78,24)" rx="2" ry="2" />
<text  x="22.80" y="687.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (289,855,060 samples, 2.37%)</title><rect x="61.8" y="549" width="28.0" height="15.0" fill="rgb(251,8,15)" rx="2" ry="2" />
<text  x="64.79" y="559.5" >o..</text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="277.4" y="229" width="1.4" height="15.0" fill="rgb(225,113,48)" rx="2" ry="2" />
<text  x="280.35" y="239.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (43,478,259 samples, 0.36%)</title><rect x="551.7" y="469" width="4.2" height="15.0" fill="rgb(212,146,43)" rx="2" ry="2" />
<text  x="554.71" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (57,971,012 samples, 0.47%)</title><rect x="406.1" y="533" width="5.6" height="15.0" fill="rgb(225,210,43)" rx="2" ry="2" />
<text  x="409.13" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::OffsetValue (14,492,753 samples, 0.12%)</title><rect x="950.6" y="485" width="1.4" height="15.0" fill="rgb(236,182,41)" rx="2" ry="2" />
<text  x="953.64" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (28,985,506 samples, 0.24%)</title><rect x="879.3" y="421" width="2.8" height="15.0" fill="rgb(230,30,12)" rx="2" ry="2" />
<text  x="882.25" y="431.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="467.7" y="453" width="1.4" height="15.0" fill="rgb(242,50,1)" rx="2" ry="2" />
<text  x="470.72" y="463.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="38.0" y="581" width="1.4" height="15.0" fill="rgb(247,196,11)" rx="2" ry="2" />
<text  x="41.00" y="591.5" ></text>
</g>
<g >
<title>__memmove_ssse3 (14,492,753 samples, 0.12%)</title><rect x="334.7" y="485" width="1.4" height="15.0" fill="rgb(219,61,21)" rx="2" ry="2" />
<text  x="337.74" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::GeneratedMessageFactory::GetPrototype (14,492,753 samples, 0.12%)</title><rect x="630.1" y="437" width="1.4" height="15.0" fill="rgb(219,181,22)" rx="2" ry="2" />
<text  x="633.09" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (28,985,506 samples, 0.24%)</title><rect x="547.5" y="501" width="2.8" height="15.0" fill="rgb(251,190,10)" rx="2" ry="2" />
<text  x="550.51" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (43,478,259 samples, 0.36%)</title><rect x="604.9" y="437" width="4.2" height="15.0" fill="rgb(225,40,48)" rx="2" ry="2" />
<text  x="607.90" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="578.3" y="341" width="1.4" height="15.0" fill="rgb(217,123,41)" rx="2" ry="2" />
<text  x="581.30" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::FastFieldValuePrinterUtf8Escaping::PrintBytes (86,956,518 samples, 0.71%)</title><rect x="320.7" y="501" width="8.4" height="15.0" fill="rgb(213,145,42)" rx="2" ry="2" />
<text  x="323.75" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="562.9" y="405" width="1.4" height="15.0" fill="rgb(245,143,31)" rx="2" ry="2" />
<text  x="565.91" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a&lt;true, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="421" width="1.4" height="15.0" fill="rgb(241,180,29)" rx="2" ry="2" />
<text  x="344.74" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;unsigned long&gt; (43,478,259 samples, 0.36%)</title><rect x="949.2" y="549" width="4.2" height="15.0" fill="rgb(209,0,51)" rx="2" ry="2" />
<text  x="952.24" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (43,478,259 samples, 0.36%)</title><rect x="494.3" y="437" width="4.2" height="15.0" fill="rgb(218,110,2)" rx="2" ry="2" />
<text  x="497.32" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRepeatedInt32 (14,492,753 samples, 0.12%)</title><rect x="548.9" y="421" width="1.4" height="15.0" fill="rgb(246,102,22)" rx="2" ry="2" />
<text  x="551.91" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;opentelemetry::v1::context::RuntimeContextStorage,  (14,492,753 samples, 0.12%)</title><rect x="162.6" y="469" width="1.4" height="15.0" fill="rgb(221,227,14)" rx="2" ry="2" />
<text  x="165.57" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="463.5" y="437" width="1.4" height="15.0" fill="rgb(242,126,40)" rx="2" ry="2" />
<text  x="466.52" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="877.9" y="197" width="1.4" height="15.0" fill="rgb(205,206,1)" rx="2" ry="2" />
<text  x="880.85" y="207.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::field (14,492,753 samples, 0.12%)</title><rect x="910.0" y="565" width="1.4" height="15.0" fill="rgb(235,46,6)" rx="2" ry="2" />
<text  x="913.05" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::~InternalMetadata (14,492,753 samples, 0.12%)</title><rect x="669.3" y="453" width="1.4" height="15.0" fill="rgb(240,35,10)" rx="2" ry="2" />
<text  x="672.29" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="490.1" y="485" width="1.4" height="15.0" fill="rgb(248,41,35)" rx="2" ry="2" />
<text  x="493.12" y="495.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="533.5" y="293" width="1.4" height="15.0" fill="rgb(233,149,31)" rx="2" ry="2" />
<text  x="536.51" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::RepeatedPtrFieldBase&gt; (28,985,506 samples, 0.24%)</title><rect x="208.8" y="469" width="2.8" height="15.0" fill="rgb(235,98,26)" rx="2" ry="2" />
<text  x="211.77" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="155.6" y="389" width="1.4" height="15.0" fill="rgb(236,106,29)" rx="2" ry="2" />
<text  x="158.58" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="596.5" y="325" width="1.4" height="15.0" fill="rgb(247,145,22)" rx="2" ry="2" />
<text  x="599.50" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::operator= (14,492,753 samples, 0.12%)</title><rect x="389.3" y="533" width="1.4" height="15.0" fill="rgb(239,165,37)" rx="2" ry="2" />
<text  x="392.34" y="543.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="610.5" y="437" width="1.4" height="15.0" fill="rgb(221,83,42)" rx="2" ry="2" />
<text  x="613.50" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Printer (14,492,753 samples, 0.12%)</title><rect x="550.3" y="501" width="1.4" height="15.0" fill="rgb(217,188,22)" rx="2" ry="2" />
<text  x="553.31" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (28,985,506 samples, 0.24%)</title><rect x="1093.4" y="725" width="2.8" height="15.0" fill="rgb(249,225,54)" rx="2" ry="2" />
<text  x="1096.42" y="735.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (43,478,259 samples, 0.36%)</title><rect x="698.7" y="549" width="4.2" height="15.0" fill="rgb(228,82,39)" rx="2" ry="2" />
<text  x="701.68" y="559.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_refdata (14,492,753 samples, 0.12%)</title><rect x="420.1" y="613" width="1.4" height="15.0" fill="rgb(240,90,21)" rx="2" ry="2" />
<text  x="423.13" y="623.5" ></text>
</g>
<g >
<title>TalentData::LoadTalent (14,492,753 samples, 0.12%)</title><rect x="376.7" y="613" width="1.4" height="15.0" fill="rgb(243,97,40)" rx="2" ry="2" />
<text  x="379.74" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="210.2" y="437" width="1.4" height="15.0" fill="rgb(240,138,48)" rx="2" ry="2" />
<text  x="213.17" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::SpanContext::~SpanContext (14,492,753 samples, 0.12%)</title><rect x="519.5" y="389" width="1.4" height="15.0" fill="rgb(254,181,10)" rx="2" ry="2" />
<text  x="522.51" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (28,985,506 samples, 0.24%)</title><rect x="949.2" y="501" width="2.8" height="15.0" fill="rgb(222,12,14)" rx="2" ry="2" />
<text  x="952.24" y="511.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (72,463,765 samples, 0.59%)</title><rect x="757.5" y="629" width="7.0" height="15.0" fill="rgb(219,10,17)" rx="2" ry="2" />
<text  x="760.47" y="639.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::~Span (14,492,753 samples, 0.12%)</title><rect x="494.3" y="245" width="1.4" height="15.0" fill="rgb(218,143,47)" rx="2" ry="2" />
<text  x="497.32" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::internal::AssignDescriptors (14,492,753 samples, 0.12%)</title><rect x="134.6" y="533" width="1.4" height="15.0" fill="rgb(239,14,44)" rx="2" ry="2" />
<text  x="137.58" y="543.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="639.9" y="197" width="1.4" height="15.0" fill="rgb(233,31,24)" rx="2" ry="2" />
<text  x="642.89" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned long, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="904.4" y="581" width="1.4" height="15.0" fill="rgb(236,154,4)" rx="2" ry="2" />
<text  x="907.45" y="591.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_replacement_field&lt;char, void fmt::v8::detail::vformat_to&lt;char&gt; (14,492,753 samples, 0.12%)</title><rect x="476.1" y="629" width="1.4" height="15.0" fill="rgb(205,132,38)" rx="2" ry="2" />
<text  x="479.12" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="613" width="1.4" height="15.0" fill="rgb(237,4,10)" rx="2" ry="2" />
<text  x="1097.82" y="623.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="491.5" y="261" width="1.4" height="15.0" fill="rgb(232,152,44)" rx="2" ry="2" />
<text  x="494.52" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::FieldSize (14,492,753 samples, 0.12%)</title><rect x="40.8" y="613" width="1.4" height="15.0" fill="rgb(236,55,34)" rx="2" ry="2" />
<text  x="43.79" y="623.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="618.9" y="293" width="1.4" height="15.0" fill="rgb(206,97,19)" rx="2" ry="2" />
<text  x="621.90" y="303.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::SteadyTimestamp::operator== (14,492,753 samples, 0.12%)</title><rect x="91.2" y="469" width="1.4" height="15.0" fill="rgb(230,99,38)" rx="2" ry="2" />
<text  x="94.19" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="171.0" y="421" width="1.4" height="15.0" fill="rgb(212,38,21)" rx="2" ry="2" />
<text  x="173.97" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="886.3" y="341" width="1.4" height="15.0" fill="rgb(218,35,24)" rx="2" ry="2" />
<text  x="889.25" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="263.4" y="389" width="1.4" height="15.0" fill="rgb(236,141,52)" rx="2" ry="2" />
<text  x="266.36" y="399.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="29.6" y="533" width="1.4" height="15.0" fill="rgb(219,140,15)" rx="2" ry="2" />
<text  x="32.60" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (202,898,542 samples, 1.66%)</title><rect x="947.8" y="581" width="19.6" height="15.0" fill="rgb(227,56,45)" rx="2" ry="2" />
<text  x="950.84" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="147.2" y="469" width="2.8" height="15.0" fill="rgb(245,149,27)" rx="2" ry="2" />
<text  x="150.18" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (43,478,259 samples, 0.36%)</title><rect x="861.1" y="453" width="4.2" height="15.0" fill="rgb(223,32,24)" rx="2" ry="2" />
<text  x="864.06" y="463.5" ></text>
</g>
<g >
<title>CStringUtils::Hex2Deci (14,492,753 samples, 0.12%)</title><rect x="684.7" y="565" width="1.4" height="15.0" fill="rgb(212,87,43)" rx="2" ry="2" />
<text  x="687.69" y="575.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (28,985,506 samples, 0.24%)</title><rect x="541.9" y="549" width="2.8" height="15.0" fill="rgb(249,156,36)" rx="2" ry="2" />
<text  x="544.91" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::reserve (14,492,753 samples, 0.12%)</title><rect x="459.3" y="517" width="1.4" height="15.0" fill="rgb(241,181,41)" rx="2" ry="2" />
<text  x="462.32" y="527.5" ></text>
</g>
<g >
<title>snprintf (28,985,506 samples, 0.24%)</title><rect x="1103.2" y="773" width="2.8" height="15.0" fill="rgb(211,193,40)" rx="2" ry="2" />
<text  x="1106.21" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="595.1" y="325" width="1.4" height="15.0" fill="rgb(229,198,31)" rx="2" ry="2" />
<text  x="598.10" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (43,478,259 samples, 0.36%)</title><rect x="560.1" y="421" width="4.2" height="15.0" fill="rgb(213,160,13)" rx="2" ry="2" />
<text  x="563.11" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="662.3" y="309" width="1.4" height="15.0" fill="rgb(209,39,38)" rx="2" ry="2" />
<text  x="665.29" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (14,492,753 samples, 0.12%)</title><rect x="386.5" y="469" width="1.4" height="15.0" fill="rgb(254,198,10)" rx="2" ry="2" />
<text  x="389.54" y="479.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="150.0" y="501" width="2.8" height="15.0" fill="rgb(205,163,44)" rx="2" ry="2" />
<text  x="152.98" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum (14,492,753 samples, 0.12%)</title><rect x="537.7" y="437" width="1.4" height="15.0" fill="rgb(214,99,18)" rx="2" ry="2" />
<text  x="540.71" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="646.9" y="437" width="1.4" height="15.0" fill="rgb(251,201,46)" rx="2" ry="2" />
<text  x="649.89" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (28,985,506 samples, 0.24%)</title><rect x="593.7" y="405" width="2.8" height="15.0" fill="rgb(246,150,12)" rx="2" ry="2" />
<text  x="596.70" y="415.5" ></text>
</g>
<g >
<title>NS_ACO::EPP::BeforeUse (478,260,849 samples, 3.91%)</title><rect x="855.5" y="597" width="46.1" height="15.0" fill="rgb(211,112,44)" rx="2" ry="2" />
<text  x="858.46" y="607.5" >NS_A..</text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (14,492,753 samples, 0.12%)</title><rect x="557.3" y="405" width="1.4" height="15.0" fill="rgb(217,39,23)" rx="2" ry="2" />
<text  x="560.31" y="415.5" ></text>
</g>
<g >
<title>std::string::operator[] (14,492,753 samples, 0.12%)</title><rect x="175.2" y="565" width="1.4" height="15.0" fill="rgb(251,24,2)" rx="2" ry="2" />
<text  x="178.17" y="575.5" ></text>
</g>
<g >
<title>gettimeofday (43,478,259 samples, 0.36%)</title><rect x="817.7" y="645" width="4.2" height="15.0" fill="rgb(231,142,15)" rx="2" ry="2" />
<text  x="820.66" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;google::protobuf::Descriptor const*, std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, std::__detail::_Select1st, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="630.1" y="341" width="1.4" height="15.0" fill="rgb(228,9,0)" rx="2" ry="2" />
<text  x="633.09" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span_Link&gt;::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="389.3" y="501" width="1.4" height="15.0" fill="rgb(213,215,17)" rx="2" ry="2" />
<text  x="392.34" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="436.9" y="421" width="1.4" height="15.0" fill="rgb(227,36,51)" rx="2" ry="2" />
<text  x="439.93" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="357.1" y="421" width="1.4" height="15.0" fill="rgb(226,26,30)" rx="2" ry="2" />
<text  x="360.14" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (231,884,048 samples, 1.90%)</title><rect x="861.1" y="501" width="22.4" height="15.0" fill="rgb(254,2,47)" rx="2" ry="2" />
<text  x="864.06" y="511.5" >o..</text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum (28,985,506 samples, 0.24%)</title><rect x="295.6" y="437" width="2.8" height="15.0" fill="rgb(240,89,49)" rx="2" ry="2" />
<text  x="298.55" y="447.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (57,971,012 samples, 0.47%)</title><rect x="590.9" y="469" width="5.6" height="15.0" fill="rgb(233,48,44)" rx="2" ry="2" />
<text  x="593.90" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (28,985,506 samples, 0.24%)</title><rect x="621.7" y="405" width="2.8" height="15.0" fill="rgb(253,64,38)" rx="2" ry="2" />
<text  x="624.70" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;NS_ACO::ThreadID, int, std::hash&lt;NS_ACO::ThreadID&gt;, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="677.7" y="581" width="1.4" height="15.0" fill="rgb(232,35,37)" rx="2" ry="2" />
<text  x="680.69" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFromString (28,985,506 samples, 0.24%)</title><rect x="331.9" y="597" width="2.8" height="15.0" fill="rgb(239,33,4)" rx="2" ry="2" />
<text  x="334.95" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::FindHelper&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="1152.2" y="757" width="1.4" height="15.0" fill="rgb(219,62,54)" rx="2" ry="2" />
<text  x="1155.21" y="767.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1069.6" y="757" width="1.4" height="15.0" fill="rgb(253,58,18)" rx="2" ry="2" />
<text  x="1072.62" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (43,478,259 samples, 0.36%)</title><rect x="494.3" y="405" width="4.2" height="15.0" fill="rgb(242,88,4)" rx="2" ry="2" />
<text  x="497.32" y="415.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="557.3" y="373" width="1.4" height="15.0" fill="rgb(209,17,1)" rx="2" ry="2" />
<text  x="560.31" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::operator= (14,492,753 samples, 0.12%)</title><rect x="499.9" y="453" width="1.4" height="15.0" fill="rgb(214,156,41)" rx="2" ry="2" />
<text  x="502.92" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (14,492,753 samples, 0.12%)</title><rect x="474.7" y="533" width="1.4" height="15.0" fill="rgb(222,100,46)" rx="2" ry="2" />
<text  x="477.72" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (43,478,259 samples, 0.36%)</title><rect x="36.6" y="613" width="4.2" height="15.0" fill="rgb(205,25,41)" rx="2" ry="2" />
<text  x="39.60" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum (43,478,259 samples, 0.36%)</title><rect x="954.8" y="565" width="4.2" height="15.0" fill="rgb(245,93,18)" rx="2" ry="2" />
<text  x="957.84" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (28,985,506 samples, 0.24%)</title><rect x="666.5" y="453" width="2.8" height="15.0" fill="rgb(235,203,23)" rx="2" ry="2" />
<text  x="669.49" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::LengthDelimitedSize (14,492,753 samples, 0.12%)</title><rect x="434.1" y="501" width="1.4" height="15.0" fill="rgb(206,189,18)" rx="2" ry="2" />
<text  x="437.13" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="401.9" y="517" width="1.4" height="15.0" fill="rgb(217,211,24)" rx="2" ry="2" />
<text  x="404.93" y="527.5" ></text>
</g>
<g >
<title>TBusppDriver::StartTBusppLoop (2,768,115,823 samples, 22.66%)</title><rect x="735.1" y="709" width="267.3" height="15.0" fill="rgb(208,118,16)" rx="2" ry="2" />
<text  x="738.08" y="719.5" >TBusppDriver::StartTBusppLoop</text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (28,985,506 samples, 0.24%)</title><rect x="876.5" y="309" width="2.8" height="15.0" fill="rgb(220,142,40)" rx="2" ry="2" />
<text  x="879.45" y="319.5" ></text>
</g>
<g >
<title>RPC::DB::GetRecord&lt;msg::DBExternalTalentInfo&gt; (1,101,449,228 samples, 9.02%)</title><rect x="478.9" y="645" width="106.4" height="15.0" fill="rgb(222,135,27)" rx="2" ry="2" />
<text  x="481.92" y="655.5" >RPC::DB::GetR..</text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::~Span (14,492,753 samples, 0.12%)</title><rect x="519.5" y="453" width="1.4" height="15.0" fill="rgb(216,195,44)" rx="2" ry="2" />
<text  x="522.51" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (289,855,060 samples, 2.37%)</title><rect x="106.6" y="565" width="28.0" height="15.0" fill="rgb(224,208,15)" rx="2" ry="2" />
<text  x="109.58" y="575.5" >g..</text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="715.5" y="581" width="1.4" height="15.0" fill="rgb(209,209,4)" rx="2" ry="2" />
<text  x="718.48" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::~AnyValue (14,492,753 samples, 0.12%)</title><rect x="438.3" y="309" width="1.4" height="15.0" fill="rgb(243,170,17)" rx="2" ry="2" />
<text  x="441.33" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (43,478,259 samples, 0.36%)</title><rect x="337.5" y="517" width="4.2" height="15.0" fill="rgb(227,214,20)" rx="2" ry="2" />
<text  x="340.54" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="179.4" y="501" width="1.4" height="15.0" fill="rgb(210,152,38)" rx="2" ry="2" />
<text  x="182.37" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__erased_dtor&lt;std::__detail::__variant::_Variant_storage&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; const&amp;, 0ul&gt; (14,492,753 samples, 0.12%)</title><rect x="390.7" y="453" width="1.4" height="15.0" fill="rgb(214,60,8)" rx="2" ry="2" />
<text  x="393.74" y="463.5" ></text>
</g>
<g >
<title>tbus2::client::EndpointMsg::~EndpointMsg (57,971,012 samples, 0.47%)</title><rect x="1127.0" y="773" width="5.6" height="15.0" fill="rgb(213,36,32)" rx="2" ry="2" />
<text  x="1130.01" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="884.9" y="245" width="1.4" height="15.0" fill="rgb(232,52,21)" rx="2" ry="2" />
<text  x="887.85" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::clear (14,492,753 samples, 0.12%)</title><rect x="1169.0" y="789" width="1.4" height="15.0" fill="rgb(210,33,52)" rx="2" ry="2" />
<text  x="1172.00" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::Span&gt; (14,492,753 samples, 0.12%)</title><rect x="690.3" y="421" width="1.4" height="15.0" fill="rgb(209,47,32)" rx="2" ry="2" />
<text  x="693.28" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (28,985,506 samples, 0.24%)</title><rect x="171.0" y="517" width="2.8" height="15.0" fill="rgb(206,108,32)" rx="2" ry="2" />
<text  x="173.97" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, PBInterpreter::MessageDesc&gt;, std::_Select1st&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::_S_key (14,492,753 samples, 0.12%)</title><rect x="31.0" y="629" width="1.4" height="15.0" fill="rgb(210,102,47)" rx="2" ry="2" />
<text  x="34.00" y="639.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (159,420,283 samples, 1.30%)</title><rect x="19.8" y="693" width="15.4" height="15.0" fill="rgb(229,153,43)" rx="2" ry="2" />
<text  x="22.80" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="473.3" y="469" width="1.4" height="15.0" fill="rgb(214,132,38)" rx="2" ry="2" />
<text  x="476.32" y="479.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="533.5" y="325" width="1.4" height="15.0" fill="rgb(235,178,27)" rx="2" ry="2" />
<text  x="536.51" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetPointerAtOffset&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="975.8" y="517" width="1.4" height="15.0" fill="rgb(232,160,20)" rx="2" ry="2" />
<text  x="978.84" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (57,971,012 samples, 0.47%)</title><rect x="350.1" y="533" width="5.6" height="15.0" fill="rgb(225,32,37)" rx="2" ry="2" />
<text  x="353.14" y="543.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="29.6" y="501" width="1.4" height="15.0" fill="rgb(247,160,40)" rx="2" ry="2" />
<text  x="32.60" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (28,985,506 samples, 0.24%)</title><rect x="560.1" y="373" width="2.8" height="15.0" fill="rgb(247,125,54)" rx="2" ry="2" />
<text  x="563.11" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;opentelemetry::v1::trace::SpanContext&gt;::_M_addr (14,492,753 samples, 0.12%)</title><rect x="390.7" y="389" width="1.4" height="15.0" fill="rgb(254,147,48)" rx="2" ry="2" />
<text  x="393.74" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::InstrumentationScope&gt; (14,492,753 samples, 0.12%)</title><rect x="863.9" y="341" width="1.4" height="15.0" fill="rgb(253,170,12)" rx="2" ry="2" />
<text  x="866.86" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::Span,  (14,492,753 samples, 0.12%)</title><rect x="701.5" y="501" width="1.4" height="15.0" fill="rgb(219,225,18)" rx="2" ry="2" />
<text  x="704.48" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;google::protobuf::Message const*&gt; &gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="372.5" y="485" width="1.4" height="15.0" fill="rgb(237,136,20)" rx="2" ry="2" />
<text  x="375.54" y="495.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="431.3" y="533" width="2.8" height="15.0" fill="rgb(224,229,15)" rx="2" ry="2" />
<text  x="434.33" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt32ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="410.3" y="453" width="1.4" height="15.0" fill="rgb(229,218,15)" rx="2" ry="2" />
<text  x="413.33" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindEnumValueByNumber (14,492,753 samples, 0.12%)</title><rect x="947.8" y="549" width="1.4" height="15.0" fill="rgb(248,69,22)" rx="2" ry="2" />
<text  x="950.84" y="559.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="723.9" y="661" width="1.4" height="15.0" fill="rgb(226,135,53)" rx="2" ry="2" />
<text  x="726.88" y="671.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="866.7" y="405" width="2.8" height="15.0" fill="rgb(212,116,27)" rx="2" ry="2" />
<text  x="869.65" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::construct&lt;google::protobuf::FieldDescriptor const*, google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="457.9" y="501" width="1.4" height="15.0" fill="rgb(213,113,25)" rx="2" ry="2" />
<text  x="460.92" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="693.1" y="517" width="1.4" height="15.0" fill="rgb(225,193,27)" rx="2" ry="2" />
<text  x="696.08" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="547.5" y="325" width="1.4" height="15.0" fill="rgb(229,132,33)" rx="2" ry="2" />
<text  x="550.51" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;int, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="572.7" y="437" width="1.4" height="15.0" fill="rgb(210,100,3)" rx="2" ry="2" />
<text  x="575.70" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (159,420,283 samples, 1.30%)</title><rect x="400.5" y="549" width="15.4" height="15.0" fill="rgb(252,22,9)" rx="2" ry="2" />
<text  x="403.53" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::IsDefault (14,492,753 samples, 0.12%)</title><rect x="84.2" y="421" width="1.4" height="15.0" fill="rgb(223,229,34)" rx="2" ry="2" />
<text  x="87.19" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (28,985,506 samples, 0.24%)</title><rect x="164.0" y="517" width="2.8" height="15.0" fill="rgb(232,72,8)" rx="2" ry="2" />
<text  x="166.97" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="869.5" y="325" width="1.4" height="15.0" fill="rgb(233,109,47)" rx="2" ry="2" />
<text  x="872.45" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="847.1" y="597" width="1.4" height="15.0" fill="rgb(230,117,7)" rx="2" ry="2" />
<text  x="850.06" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="345.9" y="517" width="1.4" height="15.0" fill="rgb(251,182,51)" rx="2" ry="2" />
<text  x="348.94" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, opentelemetry::v1::sdk::trace::Recordable*, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::_Tuple_impl (14,492,753 samples, 0.12%)</title><rect x="673.5" y="437" width="1.4" height="15.0" fill="rgb(235,31,47)" rx="2" ry="2" />
<text  x="676.49" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::_M_range_initialize&lt;std::string const*&gt; (28,985,506 samples, 0.24%)</title><rect x="994.0" y="645" width="2.8" height="15.0" fill="rgb(230,98,0)" rx="2" ry="2" />
<text  x="997.03" y="655.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="112.2" y="453" width="1.4" height="15.0" fill="rgb(206,221,52)" rx="2" ry="2" />
<text  x="115.18" y="463.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::OnExitSchedule (173,913,036 samples, 1.42%)</title><rect x="764.5" y="661" width="16.8" height="15.0" fill="rgb(210,71,54)" rx="2" ry="2" />
<text  x="767.47" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (43,478,259 samples, 0.36%)</title><rect x="949.2" y="533" width="4.2" height="15.0" fill="rgb(253,81,1)" rx="2" ry="2" />
<text  x="952.24" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="676.3" y="549" width="1.4" height="15.0" fill="rgb(215,114,29)" rx="2" ry="2" />
<text  x="679.29" y="559.5" ></text>
</g>
<g >
<title>QueueLockMsgBuf (14,492,753 samples, 0.12%)</title><rect x="697.3" y="501" width="1.4" height="15.0" fill="rgb(252,220,4)" rx="2" ry="2" />
<text  x="700.28" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::~unique_ptr (14,492,753 samples, 0.12%)</title><rect x="173.8" y="549" width="1.4" height="15.0" fill="rgb(237,86,5)" rx="2" ry="2" />
<text  x="176.77" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::variant&lt;bool, int, unsigned int, long, double, std::string, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::string const, std::variant&lt;bool, int, unsigned int, long, double, std::string, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (14,492,753 samples, 0.12%)</title><rect x="882.1" y="405" width="1.4" height="15.0" fill="rgb(215,195,38)" rx="2" ry="2" />
<text  x="885.05" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="36.6" y="581" width="1.4" height="15.0" fill="rgb(206,31,17)" rx="2" ry="2" />
<text  x="39.60" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::~InstrumentationScope (14,492,753 samples, 0.12%)</title><rect x="386.5" y="341" width="1.4" height="15.0" fill="rgb(206,209,42)" rx="2" ry="2" />
<text  x="389.54" y="351.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="645" width="1.4" height="15.0" fill="rgb(244,182,14)" rx="2" ry="2" />
<text  x="1082.42" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::IsInlined (14,492,753 samples, 0.12%)</title><rect x="702.9" y="469" width="1.4" height="15.0" fill="rgb(211,20,32)" rx="2" ry="2" />
<text  x="705.88" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="569.9" y="389" width="2.8" height="15.0" fill="rgb(210,79,5)" rx="2" ry="2" />
<text  x="572.91" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::SetIdentity (14,492,753 samples, 0.12%)</title><rect x="94.0" y="469" width="1.4" height="15.0" fill="rgb(253,59,6)" rx="2" ry="2" />
<text  x="96.99" y="479.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, prometheus::Histogram::Observe (14,492,753 samples, 0.12%)</title><rect x="11.4" y="597" width="1.4" height="15.0" fill="rgb(234,75,40)" rx="2" ry="2" />
<text  x="14.40" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (28,985,506 samples, 0.24%)</title><rect x="637.1" y="421" width="2.8" height="15.0" fill="rgb(213,164,38)" rx="2" ry="2" />
<text  x="640.09" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="586.7" y="421" width="1.4" height="15.0" fill="rgb(209,10,45)" rx="2" ry="2" />
<text  x="589.70" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WrappedMutex::Lock (14,492,753 samples, 0.12%)</title><rect x="50.6" y="565" width="1.4" height="15.0" fill="rgb(250,23,50)" rx="2" ry="2" />
<text  x="53.59" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="264.8" y="405" width="1.4" height="15.0" fill="rgb(222,123,48)" rx="2" ry="2" />
<text  x="267.76" y="415.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (130,434,777 samples, 1.07%)</title><rect x="235.4" y="405" width="12.6" height="15.0" fill="rgb(246,36,18)" rx="2" ry="2" />
<text  x="238.36" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="618.9" y="245" width="1.4" height="15.0" fill="rgb(247,106,34)" rx="2" ry="2" />
<text  x="621.90" y="255.5" ></text>
</g>
<g >
<title>std::string::assign (14,492,753 samples, 0.12%)</title><rect x="1022.0" y="709" width="1.4" height="15.0" fill="rgb(238,122,25)" rx="2" ry="2" />
<text  x="1025.03" y="719.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="639.9" y="245" width="1.4" height="15.0" fill="rgb(214,163,31)" rx="2" ry="2" />
<text  x="642.89" y="255.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (28,985,506 samples, 0.24%)</title><rect x="387.9" y="549" width="2.8" height="15.0" fill="rgb(230,204,34)" rx="2" ry="2" />
<text  x="390.94" y="559.5" ></text>
</g>
<g >
<title>QueueMap::IsQueuing (14,492,753 samples, 0.12%)</title><rect x="904.4" y="597" width="1.4" height="15.0" fill="rgb(228,102,2)" rx="2" ry="2" />
<text  x="907.45" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="36.6" y="565" width="1.4" height="15.0" fill="rgb(242,68,37)" rx="2" ry="2" />
<text  x="39.60" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="410.3" y="469" width="1.4" height="15.0" fill="rgb(244,112,31)" rx="2" ry="2" />
<text  x="413.33" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::CopyValue (14,492,753 samples, 0.12%)</title><rect x="711.3" y="485" width="1.4" height="15.0" fill="rgb(218,209,48)" rx="2" ry="2" />
<text  x="714.28" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (188,405,789 samples, 1.54%)</title><rect x="644.1" y="533" width="18.2" height="15.0" fill="rgb(254,7,33)" rx="2" ry="2" />
<text  x="647.09" y="543.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="334.7" y="549" width="1.4" height="15.0" fill="rgb(248,137,40)" rx="2" ry="2" />
<text  x="337.74" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (1,202,898,499 samples, 9.85%)</title><rect x="203.2" y="501" width="116.1" height="15.0" fill="rgb(227,74,31)" rx="2" ry="2" />
<text  x="206.17" y="511.5" >google::protob..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="609.1" y="437" width="1.4" height="15.0" fill="rgb(246,157,17)" rx="2" ry="2" />
<text  x="612.10" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Message::MaybeComputeUnknownFieldsSize (14,492,753 samples, 0.12%)</title><rect x="590.9" y="277" width="1.4" height="15.0" fill="rgb(224,156,34)" rx="2" ry="2" />
<text  x="593.90" y="287.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="145.8" y="437" width="1.4" height="15.0" fill="rgb(243,213,42)" rx="2" ry="2" />
<text  x="148.78" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::IsFieldInlined (14,492,753 samples, 0.12%)</title><rect x="702.9" y="453" width="1.4" height="15.0" fill="rgb(221,24,4)" rx="2" ry="2" />
<text  x="705.88" y="463.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_aux&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="574.1" y="357" width="1.4" height="15.0" fill="rgb(217,154,33)" rx="2" ry="2" />
<text  x="577.10" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="655.3" y="405" width="1.4" height="15.0" fill="rgb(229,69,54)" rx="2" ry="2" />
<text  x="658.29" y="415.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="917.0" y="533" width="1.4" height="15.0" fill="rgb(216,119,48)" rx="2" ry="2" />
<text  x="920.05" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (1,449,275,300 samples, 11.86%)</title><rect x="192.0" y="565" width="139.9" height="15.0" fill="rgb(243,38,44)" rx="2" ry="2" />
<text  x="194.97" y="575.5" >google::protobuf:..</text>
</g>
<g >
<title>operator&lt;&lt; (318,840,566 samples, 2.61%)</title><rect x="445.3" y="629" width="30.8" height="15.0" fill="rgb(232,90,10)" rx="2" ry="2" />
<text  x="448.33" y="639.5" >op..</text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="386.5" y="517" width="1.4" height="15.0" fill="rgb(233,46,18)" rx="2" ry="2" />
<text  x="389.54" y="527.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Suspend (14,492,753 samples, 0.12%)</title><rect x="190.6" y="613" width="1.4" height="15.0" fill="rgb(212,134,21)" rx="2" ry="2" />
<text  x="193.57" y="623.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_stack] (28,985,506 samples, 0.24%)</title><rect x="1022.0" y="773" width="2.8" height="15.0" fill="rgb(248,66,9)" rx="2" ry="2" />
<text  x="1025.03" y="783.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;::base (14,492,753 samples, 0.12%)</title><rect x="649.7" y="293" width="1.4" height="15.0" fill="rgb(206,126,13)" rx="2" ry="2" />
<text  x="652.69" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14,492,753 samples, 0.12%)</title><rect x="519.5" y="501" width="1.4" height="15.0" fill="rgb(221,132,52)" rx="2" ry="2" />
<text  x="522.51" y="511.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="31.0" y="613" width="1.4" height="15.0" fill="rgb(252,119,48)" rx="2" ry="2" />
<text  x="34.00" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::GetArenaForAllocation (14,492,753 samples, 0.12%)</title><rect x="693.1" y="277" width="1.4" height="15.0" fill="rgb(249,96,32)" rx="2" ry="2" />
<text  x="696.08" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::PrintMaybeWithMarker (14,492,753 samples, 0.12%)</title><rect x="310.9" y="453" width="1.4" height="15.0" fill="rgb(253,122,28)" rx="2" ry="2" />
<text  x="313.95" y="463.5" ></text>
</g>
<g >
<title>std::string::_Alloc_hider::_Alloc_hider (14,492,753 samples, 0.12%)</title><rect x="973.0" y="485" width="1.4" height="15.0" fill="rgb(253,32,35)" rx="2" ry="2" />
<text  x="976.04" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="723.9" y="597" width="1.4" height="15.0" fill="rgb(253,200,13)" rx="2" ry="2" />
<text  x="726.88" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="110.8" y="453" width="1.4" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="113.78" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::~variant (14,492,753 samples, 0.12%)</title><rect x="513.9" y="453" width="1.4" height="15.0" fill="rgb(216,49,45)" rx="2" ry="2" />
<text  x="516.91" y="463.5" ></text>
</g>
<g >
<title>vtable for std::exception (43,478,259 samples, 0.36%)</title><rect x="1152.2" y="773" width="4.2" height="15.0" fill="rgb(245,131,45)" rx="2" ry="2" />
<text  x="1155.21" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::stringpiece_internal::StringPiece::StringPiece&lt;std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="333.3" y="565" width="1.4" height="15.0" fill="rgb(224,1,44)" rx="2" ry="2" />
<text  x="336.35" y="575.5" ></text>
</g>
<g >
<title>RPC::Request (840,579,674 samples, 6.88%)</title><rect x="56.2" y="597" width="81.2" height="15.0" fill="rgb(240,37,43)" rx="2" ry="2" />
<text  x="59.19" y="607.5" >RPC::Requ..</text>
</g>
<g >
<title>__gnu_cxx::__ops::__val_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="241.0" y="373" width="1.4" height="15.0" fill="rgb(210,205,27)" rx="2" ry="2" />
<text  x="243.96" y="383.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="487.3" y="421" width="1.4" height="15.0" fill="rgb(227,71,23)" rx="2" ry="2" />
<text  x="490.32" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="869.5" y="357" width="1.4" height="15.0" fill="rgb(253,28,46)" rx="2" ry="2" />
<text  x="872.45" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="575.5" y="405" width="2.8" height="15.0" fill="rgb(212,42,30)" rx="2" ry="2" />
<text  x="578.50" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;google::protobuf::FieldDescriptor const*&gt;::construct&lt;google::protobuf::FieldDescriptor const*, google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="457.9" y="485" width="1.4" height="15.0" fill="rgb(240,58,0)" rx="2" ry="2" />
<text  x="460.92" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="302.6" y="357" width="1.4" height="15.0" fill="rgb(218,34,48)" rx="2" ry="2" />
<text  x="305.55" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, opentelemetry::v1::sdk::trace::Recordable*, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::_M_head (14,492,753 samples, 0.12%)</title><rect x="98.2" y="405" width="1.4" height="15.0" fill="rgb(217,205,40)" rx="2" ry="2" />
<text  x="101.19" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (14,492,753 samples, 0.12%)</title><rect x="99.6" y="453" width="1.4" height="15.0" fill="rgb(221,37,11)" rx="2" ry="2" />
<text  x="102.58" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (43,478,259 samples, 0.36%)</title><rect x="64.6" y="469" width="4.2" height="15.0" fill="rgb(248,70,2)" rx="2" ry="2" />
<text  x="67.59" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="693.1" y="485" width="1.4" height="15.0" fill="rgb(241,55,42)" rx="2" ry="2" />
<text  x="696.08" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="347.3" y="501" width="1.4" height="15.0" fill="rgb(211,202,45)" rx="2" ry="2" />
<text  x="350.34" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="557.3" y="437" width="1.4" height="15.0" fill="rgb(222,6,30)" rx="2" ry="2" />
<text  x="560.31" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="358.5" y="501" width="1.4" height="15.0" fill="rgb(247,100,27)" rx="2" ry="2" />
<text  x="361.54" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="358.5" y="485" width="1.4" height="15.0" fill="rgb(251,137,36)" rx="2" ry="2" />
<text  x="361.54" y="495.5" ></text>
</g>
<g >
<title>NS_ACO::ScopeClock::GetCPUDiff (14,492,753 samples, 0.12%)</title><rect x="190.6" y="581" width="1.4" height="15.0" fill="rgb(247,20,42)" rx="2" ry="2" />
<text  x="193.57" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const**, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="517" width="1.4" height="15.0" fill="rgb(249,60,10)" rx="2" ry="2" />
<text  x="935.44" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (289,855,060 samples, 2.37%)</title><rect x="448.1" y="565" width="28.0" height="15.0" fill="rgb(230,165,51)" rx="2" ry="2" />
<text  x="451.13" y="575.5" >g..</text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (43,478,259 samples, 0.36%)</title><rect x="494.3" y="421" width="4.2" height="15.0" fill="rgb(217,191,49)" rx="2" ry="2" />
<text  x="497.32" y="431.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="487.3" y="485" width="1.4" height="15.0" fill="rgb(236,74,28)" rx="2" ry="2" />
<text  x="490.32" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="435.5" y="453" width="1.4" height="15.0" fill="rgb(243,227,32)" rx="2" ry="2" />
<text  x="438.53" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="956.2" y="373" width="1.4" height="15.0" fill="rgb(207,161,36)" rx="2" ry="2" />
<text  x="959.24" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (14,492,753 samples, 0.12%)</title><rect x="365.5" y="485" width="1.4" height="15.0" fill="rgb(224,219,1)" rx="2" ry="2" />
<text  x="368.54" y="495.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="327.7" y="373" width="1.4" height="15.0" fill="rgb(210,32,31)" rx="2" ry="2" />
<text  x="330.75" y="383.5" ></text>
</g>
<g >
<title>TBusppUtil::ReceiveTBusppMsg (1,710,144,854 samples, 14.00%)</title><rect x="837.3" y="693" width="165.1" height="15.0" fill="rgb(225,114,5)" rx="2" ry="2" />
<text  x="840.26" y="703.5" >TBusppUtil::ReceiveTB..</text>
</g>
<g >
<title>std::unordered_map&lt;NS_ACO::ThreadID, int, std::hash&lt;NS_ACO::ThreadID&gt;, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="585.3" y="597" width="1.4" height="15.0" fill="rgb(228,3,1)" rx="2" ry="2" />
<text  x="588.30" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="532.1" y="437" width="2.8" height="15.0" fill="rgb(245,204,4)" rx="2" ry="2" />
<text  x="535.11" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="46.4" y="581" width="1.4" height="15.0" fill="rgb(230,221,39)" rx="2" ry="2" />
<text  x="49.39" y="591.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="1022.0" y="693" width="1.4" height="15.0" fill="rgb(214,86,22)" rx="2" ry="2" />
<text  x="1025.03" y="703.5" ></text>
</g>
<g >
<title>std::string::operator[] (14,492,753 samples, 0.12%)</title><rect x="165.4" y="357" width="1.4" height="15.0" fill="rgb(253,142,22)" rx="2" ry="2" />
<text  x="168.37" y="367.5" ></text>
</g>
<g >
<title>Log::WriteLog (14,492,753 samples, 0.12%)</title><rect x="840.1" y="613" width="1.4" height="15.0" fill="rgb(223,0,21)" rx="2" ry="2" />
<text  x="843.06" y="623.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="557.3" y="389" width="1.4" height="15.0" fill="rgb(215,72,12)" rx="2" ry="2" />
<text  x="560.31" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="691.7" y="389" width="1.4" height="15.0" fill="rgb(238,154,23)" rx="2" ry="2" />
<text  x="694.68" y="399.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="642.7" y="501" width="1.4" height="15.0" fill="rgb(209,216,42)" rx="2" ry="2" />
<text  x="645.69" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="403.3" y="501" width="1.4" height="15.0" fill="rgb(228,184,7)" rx="2" ry="2" />
<text  x="406.33" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (14,492,753 samples, 0.12%)</title><rect x="446.7" y="597" width="1.4" height="15.0" fill="rgb(220,191,54)" rx="2" ry="2" />
<text  x="449.73" y="607.5" ></text>
</g>
<g >
<title>pthread_self@plt (14,492,753 samples, 0.12%)</title><rect x="872.3" y="309" width="1.4" height="15.0" fill="rgb(210,0,5)" rx="2" ry="2" />
<text  x="875.25" y="319.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="863.9" y="293" width="1.4" height="15.0" fill="rgb(252,130,14)" rx="2" ry="2" />
<text  x="866.86" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="36.6" y="597" width="1.4" height="15.0" fill="rgb(235,156,43)" rx="2" ry="2" />
<text  x="39.60" y="607.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="838.7" y="677" width="1.4" height="15.0" fill="rgb(227,68,6)" rx="2" ry="2" />
<text  x="841.66" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="491.5" y="389" width="1.4" height="15.0" fill="rgb(220,20,12)" rx="2" ry="2" />
<text  x="494.52" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetUInt64 (57,971,012 samples, 0.47%)</title><rect x="949.2" y="565" width="5.6" height="15.0" fill="rgb(212,100,53)" rx="2" ry="2" />
<text  x="952.24" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::get&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; (14,492,753 samples, 0.12%)</title><rect x="392.1" y="549" width="1.4" height="15.0" fill="rgb(207,44,12)" rx="2" ry="2" />
<text  x="395.14" y="559.5" ></text>
</g>
<g >
<title>tbus2::Endpoint::Dispatch (28,985,506 samples, 0.24%)</title><rect x="1132.6" y="741" width="2.8" height="15.0" fill="rgb(216,51,15)" rx="2" ry="2" />
<text  x="1135.61" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="890.5" y="453" width="1.4" height="15.0" fill="rgb(221,200,21)" rx="2" ry="2" />
<text  x="893.45" y="463.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::~ServerPkgHead (130,434,777 samples, 1.07%)</title><rect x="1089.2" y="773" width="12.6" height="15.0" fill="rgb(224,45,48)" rx="2" ry="2" />
<text  x="1092.22" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::allocator&lt;google::protobuf::Symbol&gt;, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="357.1" y="453" width="1.4" height="15.0" fill="rgb(235,198,34)" rx="2" ry="2" />
<text  x="360.14" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::have_unknown_fields (14,492,753 samples, 0.12%)</title><rect x="861.1" y="293" width="1.4" height="15.0" fill="rgb(241,147,41)" rx="2" ry="2" />
<text  x="864.06" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="389.3" y="485" width="1.4" height="15.0" fill="rgb(236,74,32)" rx="2" ry="2" />
<text  x="392.34" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::CheckFieldPresence (14,492,753 samples, 0.12%)</title><rect x="331.9" y="549" width="1.4" height="15.0" fill="rgb(240,180,10)" rx="2" ry="2" />
<text  x="334.95" y="559.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="302.6" y="325" width="1.4" height="15.0" fill="rgb(247,49,14)" rx="2" ry="2" />
<text  x="305.55" y="335.5" ></text>
</g>
<g >
<title>RPC::Request (521,739,108 samples, 4.27%)</title><rect x="586.7" y="565" width="50.4" height="15.0" fill="rgb(254,148,6)" rx="2" ry="2" />
<text  x="589.70" y="575.5" >RPC::..</text>
</g>
<g >
<title>std::get_temporary_buffer&lt;google::protobuf::Message const*&gt; (43,478,259 samples, 0.36%)</title><rect x="978.6" y="517" width="4.2" height="15.0" fill="rgb(214,50,29)" rx="2" ry="2" />
<text  x="981.64" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (28,985,506 samples, 0.24%)</title><rect x="1010.8" y="741" width="2.8" height="15.0" fill="rgb(235,85,47)" rx="2" ry="2" />
<text  x="1013.83" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (57,971,012 samples, 0.47%)</title><rect x="884.9" y="437" width="5.6" height="15.0" fill="rgb(229,111,45)" rx="2" ry="2" />
<text  x="887.85" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="996.8" y="613" width="1.4" height="15.0" fill="rgb(214,153,17)" rx="2" ry="2" />
<text  x="999.83" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="441.1" y="469" width="1.4" height="15.0" fill="rgb(238,48,29)" rx="2" ry="2" />
<text  x="444.13" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="164.0" y="485" width="1.4" height="15.0" fill="rgb(222,38,24)" rx="2" ry="2" />
<text  x="166.97" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (43,478,259 samples, 0.36%)</title><rect x="106.6" y="501" width="4.2" height="15.0" fill="rgb(205,190,35)" rx="2" ry="2" />
<text  x="109.58" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="366.9" y="437" width="1.4" height="15.0" fill="rgb(219,57,54)" rx="2" ry="2" />
<text  x="369.94" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::SpanContext::~SpanContext (14,492,753 samples, 0.12%)</title><rect x="701.5" y="405" width="1.4" height="15.0" fill="rgb(243,134,2)" rx="2" ry="2" />
<text  x="704.48" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (28,985,506 samples, 0.24%)</title><rect x="28.2" y="597" width="2.8" height="15.0" fill="rgb(233,40,49)" rx="2" ry="2" />
<text  x="31.20" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (14,492,753 samples, 0.12%)</title><rect x="693.1" y="437" width="1.4" height="15.0" fill="rgb(214,11,27)" rx="2" ry="2" />
<text  x="696.08" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="438.3" y="197" width="1.4" height="15.0" fill="rgb(207,43,49)" rx="2" ry="2" />
<text  x="441.33" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;long&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="981.4" y="501" width="1.4" height="15.0" fill="rgb(242,190,51)" rx="2" ry="2" />
<text  x="984.44" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="386.5" y="421" width="1.4" height="15.0" fill="rgb(239,116,10)" rx="2" ry="2" />
<text  x="389.54" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="651.1" y="453" width="1.4" height="15.0" fill="rgb(244,22,4)" rx="2" ry="2" />
<text  x="654.09" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (231,884,048 samples, 1.90%)</title><rect x="611.9" y="517" width="22.4" height="15.0" fill="rgb(243,21,1)" rx="2" ry="2" />
<text  x="614.90" y="527.5" >g..</text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="586.7" y="261" width="1.4" height="15.0" fill="rgb(212,33,39)" rx="2" ry="2" />
<text  x="589.70" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="491.5" y="293" width="1.4" height="15.0" fill="rgb(231,125,1)" rx="2" ry="2" />
<text  x="494.52" y="303.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="680.5" y="549" width="2.8" height="15.0" fill="rgb(248,148,38)" rx="2" ry="2" />
<text  x="683.49" y="559.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="38.0" y="597" width="1.4" height="15.0" fill="rgb(249,152,20)" rx="2" ry="2" />
<text  x="41.00" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="410.3" y="517" width="1.4" height="15.0" fill="rgb(220,31,10)" rx="2" ry="2" />
<text  x="413.33" y="527.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="295.6" y="389" width="1.4" height="15.0" fill="rgb(206,182,45)" rx="2" ry="2" />
<text  x="298.55" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;AcoLog::ELogPriority, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="840.1" y="581" width="1.4" height="15.0" fill="rgb(245,22,24)" rx="2" ry="2" />
<text  x="843.06" y="591.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (28,985,506 samples, 0.24%)</title><rect x="301.2" y="405" width="2.8" height="15.0" fill="rgb(245,14,20)" rx="2" ry="2" />
<text  x="304.15" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="716.9" y="549" width="1.4" height="15.0" fill="rgb(226,187,52)" rx="2" ry="2" />
<text  x="719.88" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="148.6" y="405" width="1.4" height="15.0" fill="rgb(239,137,48)" rx="2" ry="2" />
<text  x="151.58" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (14,492,753 samples, 0.12%)</title><rect x="607.7" y="373" width="1.4" height="15.0" fill="rgb(211,119,47)" rx="2" ry="2" />
<text  x="610.70" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~_Variant_base (14,492,753 samples, 0.12%)</title><rect x="390.7" y="581" width="1.4" height="15.0" fill="rgb(224,155,31)" rx="2" ry="2" />
<text  x="393.74" y="591.5" ></text>
</g>
<g >
<title>Log::WriteLog (14,492,753 samples, 0.12%)</title><rect x="15.6" y="661" width="1.4" height="15.0" fill="rgb(233,188,38)" rx="2" ry="2" />
<text  x="18.60" y="671.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="581" width="1.4" height="15.0" fill="rgb(205,155,30)" rx="2" ry="2" />
<text  x="1097.82" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::reserve (14,492,753 samples, 0.12%)</title><rect x="199.0" y="501" width="1.4" height="15.0" fill="rgb(240,176,1)" rx="2" ry="2" />
<text  x="201.97" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (28,985,506 samples, 0.24%)</title><rect x="47.8" y="613" width="2.8" height="15.0" fill="rgb(254,8,31)" rx="2" ry="2" />
<text  x="50.79" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Message (14,492,753 samples, 0.12%)</title><rect x="597.9" y="437" width="1.4" height="15.0" fill="rgb(232,146,21)" rx="2" ry="2" />
<text  x="600.90" y="447.5" ></text>
</g>
<g >
<title>RPC::DB::Set (942,028,945 samples, 7.71%)</title><rect x="585.3" y="629" width="91.0" height="15.0" fill="rgb(213,193,53)" rx="2" ry="2" />
<text  x="588.30" y="639.5" >RPC::DB::Set</text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (43,478,259 samples, 0.36%)</title><rect x="672.1" y="565" width="4.2" height="15.0" fill="rgb(208,61,33)" rx="2" ry="2" />
<text  x="675.09" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="574.1" y="405" width="1.4" height="15.0" fill="rgb(230,171,40)" rx="2" ry="2" />
<text  x="577.10" y="415.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="957.6" y="533" width="1.4" height="15.0" fill="rgb(211,44,4)" rx="2" ry="2" />
<text  x="960.64" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::GetCurrentSpan (14,492,753 samples, 0.12%)</title><rect x="162.6" y="517" width="1.4" height="15.0" fill="rgb(210,99,0)" rx="2" ry="2" />
<text  x="165.57" y="527.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="77.2" y="453" width="1.4" height="15.0" fill="rgb(237,100,3)" rx="2" ry="2" />
<text  x="80.19" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="863.9" y="373" width="1.4" height="15.0" fill="rgb(205,211,31)" rx="2" ry="2" />
<text  x="866.86" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (159,420,283 samples, 1.30%)</title><rect x="145.8" y="549" width="15.4" height="15.0" fill="rgb(249,164,45)" rx="2" ry="2" />
<text  x="148.78" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (57,971,012 samples, 0.47%)</title><rect x="22.6" y="581" width="5.6" height="15.0" fill="rgb(226,64,9)" rx="2" ry="2" />
<text  x="25.60" y="591.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="610.5" y="469" width="1.4" height="15.0" fill="rgb(231,141,40)" rx="2" ry="2" />
<text  x="613.50" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (115,942,024 samples, 0.95%)</title><rect x="555.9" y="469" width="11.2" height="15.0" fill="rgb(241,72,37)" rx="2" ry="2" />
<text  x="558.91" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (43,478,259 samples, 0.36%)</title><rect x="386.5" y="597" width="4.2" height="15.0" fill="rgb(220,128,26)" rx="2" ry="2" />
<text  x="389.54" y="607.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="364.1" y="453" width="1.4" height="15.0" fill="rgb(222,87,53)" rx="2" ry="2" />
<text  x="367.14" y="463.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="561.5" y="341" width="1.4" height="15.0" fill="rgb(222,125,45)" rx="2" ry="2" />
<text  x="564.51" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::trace::DefaultSpan*,  (14,492,753 samples, 0.12%)</title><rect x="515.3" y="405" width="1.4" height="15.0" fill="rgb(236,170,45)" rx="2" ry="2" />
<text  x="518.31" y="415.5" ></text>
</g>
<g >
<title>__memmove_ssse3 (14,492,753 samples, 0.12%)</title><rect x="341.7" y="405" width="1.4" height="15.0" fill="rgb(250,83,50)" rx="2" ry="2" />
<text  x="344.74" y="415.5" ></text>
</g>
<g >
<title>AcoLog::CodeLocation::CodeLocation (14,492,753 samples, 0.12%)</title><rect x="137.4" y="597" width="1.4" height="15.0" fill="rgb(245,127,25)" rx="2" ry="2" />
<text  x="140.38" y="607.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="105.2" y="549" width="1.4" height="15.0" fill="rgb(212,162,8)" rx="2" ry="2" />
<text  x="108.18" y="559.5" ></text>
</g>
<g >
<title>tbus2::MQBillboard::AddItem (28,985,506 samples, 0.24%)</title><rect x="1006.6" y="757" width="2.8" height="15.0" fill="rgb(247,97,16)" rx="2" ry="2" />
<text  x="1009.63" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="922.6" y="533" width="1.4" height="15.0" fill="rgb(225,205,9)" rx="2" ry="2" />
<text  x="925.65" y="543.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (72,463,765 samples, 0.59%)</title><rect x="637.1" y="533" width="7.0" height="15.0" fill="rgb(215,46,12)" rx="2" ry="2" />
<text  x="640.09" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_internal_add_resource_spans (14,492,753 samples, 0.12%)</title><rect x="154.2" y="501" width="1.4" height="15.0" fill="rgb(223,62,21)" rx="2" ry="2" />
<text  x="157.18" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="408.9" y="453" width="1.4" height="15.0" fill="rgb(208,159,26)" rx="2" ry="2" />
<text  x="411.93" y="463.5" ></text>
</g>
<g >
<title>vtable for std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (144,927,530 samples, 1.19%)</title><rect x="1106.0" y="757" width="14.0" height="15.0" fill="rgb(231,74,44)" rx="2" ry="2" />
<text  x="1109.01" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::IsMapFieldInApi (14,492,753 samples, 0.12%)</title><rect x="970.2" y="549" width="1.4" height="15.0" fill="rgb(250,98,1)" rx="2" ry="2" />
<text  x="973.24" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="344.5" y="501" width="1.4" height="15.0" fill="rgb(228,138,17)" rx="2" ry="2" />
<text  x="347.54" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::~Span (14,492,753 samples, 0.12%)</title><rect x="494.3" y="229" width="1.4" height="15.0" fill="rgb(253,117,36)" rx="2" ry="2" />
<text  x="497.32" y="239.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="366.9" y="453" width="1.4" height="15.0" fill="rgb(251,190,32)" rx="2" ry="2" />
<text  x="369.94" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFromArray (14,492,753 samples, 0.12%)</title><rect x="988.4" y="661" width="1.4" height="15.0" fill="rgb(207,192,3)" rx="2" ry="2" />
<text  x="991.43" y="671.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::MergeImpl (43,478,259 samples, 0.36%)</title><rect x="1092.0" y="741" width="4.2" height="15.0" fill="rgb(227,137,26)" rx="2" ry="2" />
<text  x="1095.02" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (28,985,506 samples, 0.24%)</title><rect x="164.0" y="533" width="2.8" height="15.0" fill="rgb(221,50,48)" rx="2" ry="2" />
<text  x="166.97" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (72,463,765 samples, 0.59%)</title><rect x="603.5" y="517" width="7.0" height="15.0" fill="rgb(244,179,28)" rx="2" ry="2" />
<text  x="606.50" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="536.3" y="405" width="1.4" height="15.0" fill="rgb(213,42,40)" rx="2" ry="2" />
<text  x="539.31" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="667.9" y="293" width="1.4" height="15.0" fill="rgb(207,145,34)" rx="2" ry="2" />
<text  x="670.89" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::options (14,492,753 samples, 0.12%)</title><rect x="19.8" y="517" width="1.4" height="15.0" fill="rgb(243,158,51)" rx="2" ry="2" />
<text  x="22.80" y="527.5" ></text>
</g>
<g >
<title>std::string::_Alloc_hider::_Alloc_hider (14,492,753 samples, 0.12%)</title><rect x="105.2" y="517" width="1.4" height="15.0" fill="rgb(237,208,49)" rx="2" ry="2" />
<text  x="108.18" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="707.1" y="453" width="1.4" height="15.0" fill="rgb(236,48,8)" rx="2" ry="2" />
<text  x="710.08" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="1029.0" y="741" width="1.4" height="15.0" fill="rgb(229,116,21)" rx="2" ry="2" />
<text  x="1032.03" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (28,985,506 samples, 0.24%)</title><rect x="155.6" y="485" width="2.8" height="15.0" fill="rgb(226,154,20)" rx="2" ry="2" />
<text  x="158.58" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="841.5" y="645" width="1.4" height="15.0" fill="rgb(225,115,15)" rx="2" ry="2" />
<text  x="844.46" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="693.1" y="469" width="1.4" height="15.0" fill="rgb(238,192,0)" rx="2" ry="2" />
<text  x="696.08" y="479.5" ></text>
</g>
<g >
<title>tbuspp_logging_get_level (14,492,753 samples, 0.12%)</title><rect x="159.8" y="501" width="1.4" height="15.0" fill="rgb(234,229,53)" rx="2" ry="2" />
<text  x="162.77" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="690.3" y="453" width="1.4" height="15.0" fill="rgb(220,163,44)" rx="2" ry="2" />
<text  x="693.28" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="855.5" y="533" width="1.4" height="15.0" fill="rgb(249,96,45)" rx="2" ry="2" />
<text  x="858.46" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::OtlpRecordable (14,492,753 samples, 0.12%)</title><rect x="893.3" y="405" width="1.4" height="15.0" fill="rgb(230,75,38)" rx="2" ry="2" />
<text  x="896.25" y="415.5" ></text>
</g>
<g >
<title>std::string::data (14,492,753 samples, 0.12%)</title><rect x="297.0" y="405" width="1.4" height="15.0" fill="rgb(224,153,51)" rx="2" ry="2" />
<text  x="299.95" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="956.2" y="405" width="1.4" height="15.0" fill="rgb(254,0,2)" rx="2" ry="2" />
<text  x="959.24" y="415.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="144.4" y="565" width="1.4" height="15.0" fill="rgb(219,167,46)" rx="2" ry="2" />
<text  x="147.38" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (86,956,518 samples, 0.71%)</title><rect x="870.9" y="437" width="8.4" height="15.0" fill="rgb(247,112,7)" rx="2" ry="2" />
<text  x="873.85" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (72,463,765 samples, 0.59%)</title><rect x="337.5" y="533" width="7.0" height="15.0" fill="rgb(230,187,22)" rx="2" ry="2" />
<text  x="340.54" y="543.5" ></text>
</g>
<g >
<title>tbuspp_queue_write (14,492,753 samples, 0.12%)</title><rect x="697.3" y="517" width="1.4" height="15.0" fill="rgb(229,107,12)" rx="2" ry="2" />
<text  x="700.28" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="152.8" y="453" width="1.4" height="15.0" fill="rgb(239,167,36)" rx="2" ry="2" />
<text  x="155.78" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::AddOutOfLineHelper (14,492,753 samples, 0.12%)</title><rect x="694.5" y="437" width="1.4" height="15.0" fill="rgb(223,50,32)" rx="2" ry="2" />
<text  x="697.48" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="879.3" y="357" width="1.4" height="15.0" fill="rgb(244,19,18)" rx="2" ry="2" />
<text  x="882.25" y="367.5" ></text>
</g>
<g >
<title>std::string::data (14,492,753 samples, 0.12%)</title><rect x="333.3" y="549" width="1.4" height="15.0" fill="rgb(232,209,44)" rx="2" ry="2" />
<text  x="336.35" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="165.4" y="405" width="1.4" height="15.0" fill="rgb(237,119,7)" rx="2" ry="2" />
<text  x="168.37" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="536.3" y="389" width="1.4" height="15.0" fill="rgb(230,185,8)" rx="2" ry="2" />
<text  x="539.31" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (14,492,753 samples, 0.12%)</title><rect x="57.6" y="533" width="1.4" height="15.0" fill="rgb(253,112,54)" rx="2" ry="2" />
<text  x="60.59" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="401.9" y="485" width="1.4" height="15.0" fill="rgb(213,35,36)" rx="2" ry="2" />
<text  x="404.93" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::StringSize (14,492,753 samples, 0.12%)</title><rect x="70.2" y="357" width="1.4" height="15.0" fill="rgb(246,174,46)" rx="2" ry="2" />
<text  x="73.19" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (14,492,753 samples, 0.12%)</title><rect x="711.3" y="501" width="1.4" height="15.0" fill="rgb(223,129,54)" rx="2" ry="2" />
<text  x="714.28" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="200.4" y="517" width="1.4" height="15.0" fill="rgb(215,201,12)" rx="2" ry="2" />
<text  x="203.37" y="527.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_heap] (14,492,753 samples, 0.12%)</title><rect x="1089.2" y="725" width="1.4" height="15.0" fill="rgb(229,158,4)" rx="2" ry="2" />
<text  x="1092.22" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;long, PBInterpreter::MessageDesc, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="641.3" y="517" width="1.4" height="15.0" fill="rgb(240,226,33)" rx="2" ry="2" />
<text  x="644.29" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (72,463,765 samples, 0.59%)</title><rect x="872.3" y="405" width="7.0" height="15.0" fill="rgb(222,12,0)" rx="2" ry="2" />
<text  x="875.25" y="415.5" ></text>
</g>
<g >
<title>_IO_vfprintf (115,942,024 samples, 0.95%)</title><rect x="1041.6" y="757" width="11.2" height="15.0" fill="rgb(254,34,21)" rx="2" ry="2" />
<text  x="1044.63" y="767.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="109.4" y="453" width="1.4" height="15.0" fill="rgb(233,208,48)" rx="2" ry="2" />
<text  x="112.38" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (14,492,753 samples, 0.12%)</title><rect x="270.4" y="405" width="1.4" height="15.0" fill="rgb(232,51,15)" rx="2" ry="2" />
<text  x="273.36" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::__uniq_ptr_impl (14,492,753 samples, 0.12%)</title><rect x="673.5" y="453" width="1.4" height="15.0" fill="rgb(224,5,10)" rx="2" ry="2" />
<text  x="676.49" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;opentelemetry::v1::trace::SpanContext&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="519.5" y="405" width="1.4" height="15.0" fill="rgb(215,70,47)" rx="2" ry="2" />
<text  x="522.51" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (115,942,024 samples, 0.95%)</title><rect x="271.8" y="453" width="11.2" height="15.0" fill="rgb(215,126,6)" rx="2" ry="2" />
<text  x="274.76" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="438.3" y="325" width="1.4" height="15.0" fill="rgb(248,64,34)" rx="2" ry="2" />
<text  x="441.33" y="335.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="1078.0" y="709" width="1.4" height="15.0" fill="rgb(240,3,47)" rx="2" ry="2" />
<text  x="1081.02" y="719.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="939.4" y="501" width="1.4" height="15.0" fill="rgb(206,94,3)" rx="2" ry="2" />
<text  x="942.44" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (28,985,506 samples, 0.24%)</title><rect x="547.5" y="485" width="2.8" height="15.0" fill="rgb(221,101,50)" rx="2" ry="2" />
<text  x="550.51" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="446.7" y="549" width="1.4" height="15.0" fill="rgb(222,123,1)" rx="2" ry="2" />
<text  x="449.73" y="559.5" ></text>
</g>
<g >
<title>RPC::Respond (594,202,873 samples, 4.86%)</title><rect x="418.7" y="645" width="57.4" height="15.0" fill="rgb(232,179,47)" rx="2" ry="2" />
<text  x="421.73" y="655.5" >RPC::R..</text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="327.7" y="405" width="1.4" height="15.0" fill="rgb(216,191,16)" rx="2" ry="2" />
<text  x="330.75" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::CheckInvalidAccess (14,492,753 samples, 0.12%)</title><rect x="918.4" y="581" width="1.4" height="15.0" fill="rgb(228,158,5)" rx="2" ry="2" />
<text  x="921.45" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="49.2" y="581" width="1.4" height="15.0" fill="rgb(250,114,43)" rx="2" ry="2" />
<text  x="52.19" y="591.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="517" width="1.4" height="15.0" fill="rgb(230,194,19)" rx="2" ry="2" />
<text  x="344.74" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="652.5" y="373" width="1.4" height="15.0" fill="rgb(224,106,14)" rx="2" ry="2" />
<text  x="655.49" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::~Span (14,492,753 samples, 0.12%)</title><rect x="436.9" y="309" width="1.4" height="15.0" fill="rgb(216,131,16)" rx="2" ry="2" />
<text  x="439.93" y="319.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (28,985,506 samples, 0.24%)</title><rect x="915.6" y="565" width="2.8" height="15.0" fill="rgb(226,134,37)" rx="2" ry="2" />
<text  x="918.65" y="575.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (14,492,753 samples, 0.12%)</title><rect x="698.7" y="485" width="1.4" height="15.0" fill="rgb(236,45,26)" rx="2" ry="2" />
<text  x="701.68" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (28,985,506 samples, 0.24%)</title><rect x="351.5" y="453" width="2.8" height="15.0" fill="rgb(234,208,6)" rx="2" ry="2" />
<text  x="354.54" y="463.5" ></text>
</g>
<g >
<title>std::string::length (14,492,753 samples, 0.12%)</title><rect x="695.9" y="405" width="1.4" height="15.0" fill="rgb(227,160,37)" rx="2" ry="2" />
<text  x="698.88" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="901.6" y="581" width="1.4" height="15.0" fill="rgb(225,105,52)" rx="2" ry="2" />
<text  x="904.65" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (28,985,506 samples, 0.24%)</title><rect x="462.1" y="517" width="2.8" height="15.0" fill="rgb(246,204,53)" rx="2" ry="2" />
<text  x="465.12" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~vector (14,492,753 samples, 0.12%)</title><rect x="987.0" y="581" width="1.4" height="15.0" fill="rgb(251,29,37)" rx="2" ry="2" />
<text  x="990.03" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="502.7" y="405" width="1.4" height="15.0" fill="rgb(215,39,33)" rx="2" ry="2" />
<text  x="505.72" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="609.1" y="357" width="1.4" height="15.0" fill="rgb(251,81,14)" rx="2" ry="2" />
<text  x="612.10" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="611.9" y="421" width="1.4" height="15.0" fill="rgb(248,56,51)" rx="2" ry="2" />
<text  x="614.90" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (115,942,024 samples, 0.95%)</title><rect x="687.5" y="549" width="11.2" height="15.0" fill="rgb(253,165,33)" rx="2" ry="2" />
<text  x="690.49" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (101,449,271 samples, 0.83%)</title><rect x="702.9" y="549" width="9.8" height="15.0" fill="rgb(237,223,25)" rx="2" ry="2" />
<text  x="705.88" y="559.5" ></text>
</g>
<g >
<title>AcoContext::TryBlock (14,492,753 samples, 0.12%)</title><rect x="904.4" y="629" width="1.4" height="15.0" fill="rgb(227,8,26)" rx="2" ry="2" />
<text  x="907.45" y="639.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="429.9" y="437" width="1.4" height="15.0" fill="rgb(241,90,52)" rx="2" ry="2" />
<text  x="432.93" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (57,971,012 samples, 0.47%)</title><rect x="273.2" y="389" width="5.6" height="15.0" fill="rgb(239,12,20)" rx="2" ry="2" />
<text  x="276.16" y="399.5" ></text>
</g>
<g >
<title>clock_gettime (86,956,518 samples, 0.71%)</title><rect x="756.1" y="645" width="8.4" height="15.0" fill="rgb(211,191,19)" rx="2" ry="2" />
<text  x="759.07" y="655.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="495.7" y="325" width="2.8" height="15.0" fill="rgb(240,50,11)" rx="2" ry="2" />
<text  x="498.72" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="861.1" y="309" width="1.4" height="15.0" fill="rgb(225,186,49)" rx="2" ry="2" />
<text  x="864.06" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="310.9" y="437" width="1.4" height="15.0" fill="rgb(237,25,50)" rx="2" ry="2" />
<text  x="313.95" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintLiteral&lt;2ul&gt; (14,492,753 samples, 0.12%)</title><rect x="260.6" y="453" width="1.4" height="15.0" fill="rgb(215,189,38)" rx="2" ry="2" />
<text  x="263.56" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="64.6" y="293" width="1.4" height="15.0" fill="rgb(228,2,23)" rx="2" ry="2" />
<text  x="67.59" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="96.8" y="437" width="1.4" height="15.0" fill="rgb(213,72,2)" rx="2" ry="2" />
<text  x="99.79" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="469" width="1.4" height="15.0" fill="rgb(226,183,0)" rx="2" ry="2" />
<text  x="935.44" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::reserve (14,492,753 samples, 0.12%)</title><rect x="704.3" y="485" width="1.4" height="15.0" fill="rgb(231,8,22)" rx="2" ry="2" />
<text  x="707.28" y="495.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="386.5" y="293" width="1.4" height="15.0" fill="rgb(232,151,28)" rx="2" ry="2" />
<text  x="389.54" y="303.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="492.9" y="453" width="1.4" height="15.0" fill="rgb(254,228,16)" rx="2" ry="2" />
<text  x="495.92" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::SizedDelete (14,492,753 samples, 0.12%)</title><rect x="872.3" y="325" width="1.4" height="15.0" fill="rgb(244,39,6)" rx="2" ry="2" />
<text  x="875.25" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (14,492,753 samples, 0.12%)</title><rect x="919.8" y="581" width="1.4" height="15.0" fill="rgb(235,197,27)" rx="2" ry="2" />
<text  x="922.85" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="368.3" y="437" width="1.4" height="15.0" fill="rgb(229,114,30)" rx="2" ry="2" />
<text  x="371.34" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::TracerProvider,  (14,492,753 samples, 0.12%)</title><rect x="141.6" y="565" width="1.4" height="15.0" fill="rgb(251,110,5)" rx="2" ry="2" />
<text  x="144.58" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="362.7" y="501" width="1.4" height="15.0" fill="rgb(219,30,32)" rx="2" ry="2" />
<text  x="365.74" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="152.8" y="517" width="1.4" height="15.0" fill="rgb(252,22,3)" rx="2" ry="2" />
<text  x="155.78" y="527.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender, unsigned long long, 0&gt; (14,492,753 samples, 0.12%)</title><rect x="476.1" y="597" width="1.4" height="15.0" fill="rgb(251,159,40)" rx="2" ry="2" />
<text  x="479.12" y="607.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (333,333,319 samples, 2.73%)</title><rect x="603.5" y="549" width="32.2" height="15.0" fill="rgb(216,42,29)" rx="2" ry="2" />
<text  x="606.50" y="559.5" >op..</text>
</g>
<g >
<title>std::string::assign (28,985,506 samples, 0.24%)</title><rect x="1096.2" y="693" width="2.8" height="15.0" fill="rgb(213,19,18)" rx="2" ry="2" />
<text  x="1099.22" y="703.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::_internal_dropped_events_count (14,492,753 samples, 0.12%)</title><rect x="571.3" y="341" width="1.4" height="15.0" fill="rgb(254,167,28)" rx="2" ry="2" />
<text  x="574.30" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::emplace_back&lt;google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="985.6" y="549" width="1.4" height="15.0" fill="rgb(230,190,40)" rx="2" ry="2" />
<text  x="988.63" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="494.3" y="325" width="1.4" height="15.0" fill="rgb(234,152,47)" rx="2" ry="2" />
<text  x="497.32" y="335.5" ></text>
</g>
<g >
<title>__tz_convert (14,492,753 samples, 0.12%)</title><rect x="1036.0" y="773" width="1.4" height="15.0" fill="rgb(211,69,47)" rx="2" ry="2" />
<text  x="1039.03" y="783.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (14,492,753 samples, 0.12%)</title><rect x="56.2" y="565" width="1.4" height="15.0" fill="rgb(238,27,28)" rx="2" ry="2" />
<text  x="59.19" y="575.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (28,985,506 samples, 0.24%)</title><rect x="662.3" y="501" width="2.8" height="15.0" fill="rgb(225,147,34)" rx="2" ry="2" />
<text  x="665.29" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="152.8" y="389" width="1.4" height="15.0" fill="rgb(247,197,22)" rx="2" ry="2" />
<text  x="155.78" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::ForEachKeyValue (14,492,753 samples, 0.12%)</title><rect x="672.1" y="485" width="1.4" height="15.0" fill="rgb(217,229,30)" rx="2" ry="2" />
<text  x="675.09" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="138.8" y="533" width="1.4" height="15.0" fill="rgb(246,12,4)" rx="2" ry="2" />
<text  x="141.78" y="543.5" ></text>
</g>
<g >
<title>[unknown] (130,434,777 samples, 1.07%)</title><rect x="1089.2" y="757" width="12.6" height="15.0" fill="rgb(226,38,27)" rx="2" ry="2" />
<text  x="1092.22" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (43,478,259 samples, 0.36%)</title><rect x="672.1" y="533" width="4.2" height="15.0" fill="rgb(218,140,17)" rx="2" ry="2" />
<text  x="675.09" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::~AnyValue (14,492,753 samples, 0.12%)</title><rect x="495.7" y="213" width="1.4" height="15.0" fill="rgb(237,121,51)" rx="2" ry="2" />
<text  x="498.72" y="223.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (130,434,777 samples, 1.07%)</title><rect x="235.4" y="389" width="12.6" height="15.0" fill="rgb(217,153,7)" rx="2" ry="2" />
<text  x="238.36" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (28,985,506 samples, 0.24%)</title><rect x="74.4" y="437" width="2.8" height="15.0" fill="rgb(210,166,0)" rx="2" ry="2" />
<text  x="77.39" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="690.3" y="501" width="1.4" height="15.0" fill="rgb(212,194,50)" rx="2" ry="2" />
<text  x="693.28" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (28,985,506 samples, 0.24%)</title><rect x="1010.8" y="757" width="2.8" height="15.0" fill="rgb(218,129,47)" rx="2" ry="2" />
<text  x="1013.83" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Add&lt;google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::TypeHandler&gt; (14,492,753 samples, 0.12%)</title><rect x="884.9" y="293" width="1.4" height="15.0" fill="rgb(218,121,22)" rx="2" ry="2" />
<text  x="887.85" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (14,492,753 samples, 0.12%)</title><rect x="263.4" y="421" width="1.4" height="15.0" fill="rgb(232,119,30)" rx="2" ry="2" />
<text  x="266.36" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (159,420,283 samples, 1.30%)</title><rect x="145.8" y="581" width="15.4" height="15.0" fill="rgb(221,106,53)" rx="2" ry="2" />
<text  x="148.78" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Printer (14,492,753 samples, 0.12%)</title><rect x="660.9" y="517" width="1.4" height="15.0" fill="rgb(244,94,50)" rx="2" ry="2" />
<text  x="663.89" y="527.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="1066.8" y="661" width="1.4" height="15.0" fill="rgb(227,67,6)" rx="2" ry="2" />
<text  x="1069.82" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14,492,753 samples, 0.12%)</title><rect x="99.6" y="469" width="1.4" height="15.0" fill="rgb(244,179,0)" rx="2" ry="2" />
<text  x="102.58" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::DefaultSpan::~DefaultSpan (14,492,753 samples, 0.12%)</title><rect x="99.6" y="437" width="1.4" height="15.0" fill="rgb(244,58,50)" rx="2" ry="2" />
<text  x="102.58" y="447.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (260,869,554 samples, 2.14%)</title><rect x="637.1" y="549" width="25.2" height="15.0" fill="rgb(228,39,46)" rx="2" ry="2" />
<text  x="640.09" y="559.5" >o..</text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, PBInterpreter::MessageDesc&gt;, std::_Select1st&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="31.0" y="661" width="1.4" height="15.0" fill="rgb(217,109,18)" rx="2" ry="2" />
<text  x="34.00" y="671.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="26.8" y="453" width="1.4" height="15.0" fill="rgb(220,132,19)" rx="2" ry="2" />
<text  x="29.80" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="495.7" y="101" width="1.4" height="15.0" fill="rgb(221,125,28)" rx="2" ry="2" />
<text  x="498.72" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="187.8" y="533" width="1.4" height="15.0" fill="rgb(207,78,15)" rx="2" ry="2" />
<text  x="190.77" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="22.6" y="549" width="1.4" height="15.0" fill="rgb(224,59,7)" rx="2" ry="2" />
<text  x="25.60" y="559.5" ></text>
</g>
<g >
<title>tbus2::Endpoint::Dispatch (14,492,753 samples, 0.12%)</title><rect x="728.1" y="677" width="1.4" height="15.0" fill="rgb(243,187,52)" rx="2" ry="2" />
<text  x="731.08" y="687.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (333,333,319 samples, 2.73%)</title><rect x="103.8" y="581" width="32.2" height="15.0" fill="rgb(210,51,52)" rx="2" ry="2" />
<text  x="106.78" y="591.5" >op..</text>
</g>
<g >
<title>tbuspp_logging_vlog (14,492,753 samples, 0.12%)</title><rect x="1125.6" y="757" width="1.4" height="15.0" fill="rgb(219,123,52)" rx="2" ry="2" />
<text  x="1128.61" y="767.5" ></text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="982.8" y="517" width="1.4" height="15.0" fill="rgb(216,60,25)" rx="2" ry="2" />
<text  x="985.84" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="917.0" y="517" width="1.4" height="15.0" fill="rgb(209,134,54)" rx="2" ry="2" />
<text  x="920.05" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;google::protobuf::Message const*&gt;::~allocator (14,492,753 samples, 0.12%)</title><rect x="329.1" y="469" width="1.4" height="15.0" fill="rgb(246,67,20)" rx="2" ry="2" />
<text  x="332.15" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="436.9" y="405" width="1.4" height="15.0" fill="rgb(252,88,10)" rx="2" ry="2" />
<text  x="439.93" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (28,985,506 samples, 0.24%)</title><rect x="532.1" y="405" width="2.8" height="15.0" fill="rgb(218,228,43)" rx="2" ry="2" />
<text  x="535.11" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="415.9" y="629" width="1.4" height="15.0" fill="rgb(222,41,8)" rx="2" ry="2" />
<text  x="418.93" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (43,478,259 samples, 0.36%)</title><rect x="656.7" y="453" width="4.2" height="15.0" fill="rgb(210,48,36)" rx="2" ry="2" />
<text  x="659.69" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="901.6" y="565" width="1.4" height="15.0" fill="rgb(245,136,6)" rx="2" ry="2" />
<text  x="904.65" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::BucketNumber&lt;std::string&gt; (28,985,506 samples, 0.24%)</title><rect x="1066.8" y="741" width="2.8" height="15.0" fill="rgb(254,143,53)" rx="2" ry="2" />
<text  x="1069.82" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="467.7" y="517" width="1.4" height="15.0" fill="rgb(233,193,19)" rx="2" ry="2" />
<text  x="470.72" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (43,478,259 samples, 0.36%)</title><rect x="70.2" y="389" width="4.2" height="15.0" fill="rgb(205,158,20)" rx="2" ry="2" />
<text  x="73.19" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::io::mutable_string_data (14,492,753 samples, 0.12%)</title><rect x="165.4" y="373" width="1.4" height="15.0" fill="rgb(210,96,19)" rx="2" ry="2" />
<text  x="168.37" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::vector (14,492,753 samples, 0.12%)</title><rect x="865.3" y="453" width="1.4" height="15.0" fill="rgb(235,139,54)" rx="2" ry="2" />
<text  x="868.26" y="463.5" ></text>
</g>
<g >
<title>std::list&lt;std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="851.3" y="581" width="1.4" height="15.0" fill="rgb(232,25,12)" rx="2" ry="2" />
<text  x="854.26" y="591.5" ></text>
</g>
<g >
<title>TracerUtil::SpiltTraceParent (14,492,753 samples, 0.12%)</title><rect x="588.1" y="533" width="1.4" height="15.0" fill="rgb(207,178,54)" rx="2" ry="2" />
<text  x="591.10" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::have_unknown_fields (14,492,753 samples, 0.12%)</title><rect x="127.6" y="421" width="1.4" height="15.0" fill="rgb(233,77,47)" rx="2" ry="2" />
<text  x="130.58" y="431.5" ></text>
</g>
<g >
<title>std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="691.7" y="373" width="1.4" height="15.0" fill="rgb(225,9,0)" rx="2" ry="2" />
<text  x="694.68" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (14,492,753 samples, 0.12%)</title><rect x="364.1" y="517" width="1.4" height="15.0" fill="rgb(252,96,44)" rx="2" ry="2" />
<text  x="367.14" y="527.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (14,492,753 samples, 0.12%)</title><rect x="1150.8" y="725" width="1.4" height="15.0" fill="rgb(252,136,50)" rx="2" ry="2" />
<text  x="1153.81" y="735.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="599.3" y="373" width="1.4" height="15.0" fill="rgb(214,148,24)" rx="2" ry="2" />
<text  x="602.30" y="383.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (14,492,753 samples, 0.12%)</title><rect x="582.5" y="453" width="1.4" height="15.0" fill="rgb(236,174,15)" rx="2" ry="2" />
<text  x="585.50" y="463.5" ></text>
</g>
<g >
<title>std::string::empty (14,492,753 samples, 0.12%)</title><rect x="73.0" y="373" width="1.4" height="15.0" fill="rgb(249,216,46)" rx="2" ry="2" />
<text  x="75.99" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (28,985,506 samples, 0.24%)</title><rect x="495.7" y="293" width="2.8" height="15.0" fill="rgb(240,130,28)" rx="2" ry="2" />
<text  x="498.72" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="343.1" y="485" width="1.4" height="15.0" fill="rgb(237,115,43)" rx="2" ry="2" />
<text  x="346.14" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="491.5" y="277" width="1.4" height="15.0" fill="rgb(237,118,10)" rx="2" ry="2" />
<text  x="494.52" y="287.5" ></text>
</g>
<g >
<title>std::holds_alternative&lt;std::string, bool, int, unsigned int, long, double, std::string, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="87.0" y="421" width="1.4" height="15.0" fill="rgb(247,135,47)" rx="2" ry="2" />
<text  x="89.99" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (43,478,259 samples, 0.36%)</title><rect x="84.2" y="453" width="4.2" height="15.0" fill="rgb(219,33,4)" rx="2" ry="2" />
<text  x="87.19" y="463.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="515.3" y="373" width="1.4" height="15.0" fill="rgb(216,197,38)" rx="2" ry="2" />
<text  x="518.31" y="383.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="661" width="1.4" height="15.0" fill="rgb(231,140,11)" rx="2" ry="2" />
<text  x="1097.82" y="671.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="330.5" y="517" width="1.4" height="15.0" fill="rgb(235,105,46)" rx="2" ry="2" />
<text  x="333.55" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="634.3" y="485" width="1.4" height="15.0" fill="rgb(237,122,28)" rx="2" ry="2" />
<text  x="637.29" y="495.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Exit (14,492,753 samples, 0.12%)</title><rect x="10.0" y="741" width="1.4" height="15.0" fill="rgb(217,93,48)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::InRealOneof (14,492,753 samples, 0.12%)</title><rect x="929.6" y="565" width="1.4" height="15.0" fill="rgb(253,191,33)" rx="2" ry="2" />
<text  x="932.64" y="575.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (28,985,506 samples, 0.24%)</title><rect x="621.7" y="373" width="2.8" height="15.0" fill="rgb(206,1,14)" rx="2" ry="2" />
<text  x="624.70" y="383.5" ></text>
</g>
<g >
<title>std::string::substr (14,492,753 samples, 0.12%)</title><rect x="568.5" y="549" width="1.4" height="15.0" fill="rgb(247,127,2)" rx="2" ry="2" />
<text  x="571.51" y="559.5" ></text>
</g>
<g >
<title>LogRecorder::Record (14,492,753 samples, 0.12%)</title><rect x="179.4" y="565" width="1.4" height="15.0" fill="rgb(235,34,7)" rx="2" ry="2" />
<text  x="182.37" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (28,985,506 samples, 0.24%)</title><rect x="954.8" y="533" width="2.8" height="15.0" fill="rgb(241,51,54)" rx="2" ry="2" />
<text  x="957.84" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (28,985,506 samples, 0.24%)</title><rect x="526.5" y="453" width="2.8" height="15.0" fill="rgb(237,45,53)" rx="2" ry="2" />
<text  x="529.51" y="463.5" ></text>
</g>
<g >
<title>std::_List_base&lt;std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="12.8" y="613" width="1.4" height="15.0" fill="rgb(251,103,17)" rx="2" ry="2" />
<text  x="15.80" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="637.1" y="469" width="4.2" height="15.0" fill="rgb(252,148,25)" rx="2" ry="2" />
<text  x="640.09" y="479.5" ></text>
</g>
<g >
<title>std::list&lt;std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="12.8" y="629" width="1.4" height="15.0" fill="rgb(233,100,41)" rx="2" ry="2" />
<text  x="15.80" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="152.8" y="501" width="1.4" height="15.0" fill="rgb(248,192,37)" rx="2" ry="2" />
<text  x="155.78" y="511.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="606.3" y="277" width="1.4" height="15.0" fill="rgb(247,164,44)" rx="2" ry="2" />
<text  x="609.30" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="46.4" y="597" width="1.4" height="15.0" fill="rgb(246,192,20)" rx="2" ry="2" />
<text  x="49.39" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="434.1" y="549" width="2.8" height="15.0" fill="rgb(234,217,38)" rx="2" ry="2" />
<text  x="437.13" y="559.5" ></text>
</g>
<g >
<title>prometheus::Counter::Increment (14,492,753 samples, 0.12%)</title><rect x="78.6" y="453" width="1.4" height="15.0" fill="rgb(236,190,47)" rx="2" ry="2" />
<text  x="81.59" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::FieldNumberSorter::operator (14,492,753 samples, 0.12%)</title><rect x="455.1" y="421" width="1.4" height="15.0" fill="rgb(252,71,47)" rx="2" ry="2" />
<text  x="458.12" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (14,492,753 samples, 0.12%)</title><rect x="443.9" y="549" width="1.4" height="15.0" fill="rgb(248,154,27)" rx="2" ry="2" />
<text  x="446.93" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="28.2" y="565" width="1.4" height="15.0" fill="rgb(245,69,45)" rx="2" ry="2" />
<text  x="31.20" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="491.5" y="357" width="1.4" height="15.0" fill="rgb(254,36,29)" rx="2" ry="2" />
<text  x="494.52" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (43,478,259 samples, 0.36%)</title><rect x="925.4" y="565" width="4.2" height="15.0" fill="rgb(238,63,39)" rx="2" ry="2" />
<text  x="928.44" y="575.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (188,405,789 samples, 1.54%)</title><rect x="684.7" y="597" width="18.2" height="15.0" fill="rgb(225,154,54)" rx="2" ry="2" />
<text  x="687.69" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="64.6" y="437" width="2.8" height="15.0" fill="rgb(229,136,49)" rx="2" ry="2" />
<text  x="67.59" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::SetBit (14,492,753 samples, 0.12%)</title><rect x="711.3" y="437" width="1.4" height="15.0" fill="rgb(243,132,53)" rx="2" ry="2" />
<text  x="714.28" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="492.9" y="357" width="1.4" height="15.0" fill="rgb(208,76,51)" rx="2" ry="2" />
<text  x="495.92" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::emplace_back&lt;google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="348.7" y="501" width="1.4" height="15.0" fill="rgb(225,118,41)" rx="2" ry="2" />
<text  x="351.74" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="77.2" y="389" width="1.4" height="15.0" fill="rgb(243,8,9)" rx="2" ry="2" />
<text  x="80.19" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="123.4" y="453" width="1.4" height="15.0" fill="rgb(228,106,39)" rx="2" ry="2" />
<text  x="126.38" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="405" width="1.4" height="15.0" fill="rgb(211,33,17)" rx="2" ry="2" />
<text  x="652.69" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (173,913,036 samples, 1.42%)</title><rect x="35.2" y="677" width="16.8" height="15.0" fill="rgb(223,129,33)" rx="2" ry="2" />
<text  x="38.20" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="29.6" y="517" width="1.4" height="15.0" fill="rgb(216,36,11)" rx="2" ry="2" />
<text  x="32.60" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="639.9" y="325" width="1.4" height="15.0" fill="rgb(231,132,23)" rx="2" ry="2" />
<text  x="642.89" y="335.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="613.3" y="405" width="1.4" height="15.0" fill="rgb(218,11,7)" rx="2" ry="2" />
<text  x="616.30" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::vector (28,985,506 samples, 0.24%)</title><rect x="994.0" y="661" width="2.8" height="15.0" fill="rgb(214,69,53)" rx="2" ry="2" />
<text  x="997.03" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::~unique_ptr (14,492,753 samples, 0.12%)</title><rect x="634.3" y="501" width="1.4" height="15.0" fill="rgb(207,76,52)" rx="2" ry="2" />
<text  x="637.29" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (28,985,506 samples, 0.24%)</title><rect x="1024.8" y="757" width="2.8" height="15.0" fill="rgb(221,155,54)" rx="2" ry="2" />
<text  x="1027.83" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_Internal::scope (14,492,753 samples, 0.12%)</title><rect x="569.9" y="373" width="1.4" height="15.0" fill="rgb(234,186,49)" rx="2" ry="2" />
<text  x="572.91" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (115,942,024 samples, 0.95%)</title><rect x="569.9" y="549" width="11.2" height="15.0" fill="rgb(246,17,14)" rx="2" ry="2" />
<text  x="572.91" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (115,942,024 samples, 0.95%)</title><rect x="222.8" y="437" width="11.2" height="15.0" fill="rgb(217,160,17)" rx="2" ry="2" />
<text  x="225.76" y="447.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (14,492,753 samples, 0.12%)</title><rect x="676.3" y="613" width="1.4" height="15.0" fill="rgb(208,27,14)" rx="2" ry="2" />
<text  x="679.29" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (14,492,753 samples, 0.12%)</title><rect x="716.9" y="341" width="1.4" height="15.0" fill="rgb(252,75,53)" rx="2" ry="2" />
<text  x="719.88" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (43,478,259 samples, 0.36%)</title><rect x="439.7" y="533" width="4.2" height="15.0" fill="rgb(235,55,25)" rx="2" ry="2" />
<text  x="442.73" y="543.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="277.4" y="197" width="1.4" height="15.0" fill="rgb(241,110,44)" rx="2" ry="2" />
<text  x="280.35" y="207.5" ></text>
</g>
<g >
<title>CStringUtils::Hex2Deci (14,492,753 samples, 0.12%)</title><rect x="59.0" y="549" width="1.4" height="15.0" fill="rgb(219,30,45)" rx="2" ry="2" />
<text  x="61.99" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (57,971,012 samples, 0.47%)</title><rect x="194.8" y="533" width="5.6" height="15.0" fill="rgb(207,88,28)" rx="2" ry="2" />
<text  x="197.77" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (14,492,753 samples, 0.12%)</title><rect x="478.9" y="485" width="1.4" height="15.0" fill="rgb(225,27,37)" rx="2" ry="2" />
<text  x="481.92" y="495.5" ></text>
</g>
<g >
<title>tbus2::MQ::PeekMsgWithCheck (57,971,012 samples, 0.47%)</title><rect x="1136.8" y="725" width="5.6" height="15.0" fill="rgb(254,135,50)" rx="2" ry="2" />
<text  x="1139.81" y="735.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::Message const**&gt; (14,492,753 samples, 0.12%)</title><rect x="984.2" y="501" width="1.4" height="15.0" fill="rgb(208,35,33)" rx="2" ry="2" />
<text  x="987.23" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (43,478,259 samples, 0.36%)</title><rect x="392.1" y="565" width="4.2" height="15.0" fill="rgb(213,4,8)" rx="2" ry="2" />
<text  x="395.14" y="575.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="672.1" y="293" width="1.4" height="15.0" fill="rgb(250,47,29)" rx="2" ry="2" />
<text  x="675.09" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="401.9" y="501" width="1.4" height="15.0" fill="rgb(252,26,31)" rx="2" ry="2" />
<text  x="404.93" y="511.5" ></text>
</g>
<g >
<title>AcoLogAutoSelect&lt;true, false&gt;::Log&lt;msg::EServerPkgCmd, unsigned long&gt; (28,985,506 samples, 0.24%)</title><rect x="905.8" y="613" width="2.8" height="15.0" fill="rgb(215,187,8)" rx="2" ry="2" />
<text  x="908.85" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (43,478,259 samples, 0.36%)</title><rect x="278.8" y="405" width="4.2" height="15.0" fill="rgb(247,194,50)" rx="2" ry="2" />
<text  x="281.75" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (28,985,506 samples, 0.24%)</title><rect x="954.8" y="485" width="2.8" height="15.0" fill="rgb(234,69,21)" rx="2" ry="2" />
<text  x="957.84" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::resource::v1::Resource&gt; (28,985,506 samples, 0.24%)</title><rect x="575.5" y="453" width="2.8" height="15.0" fill="rgb(250,35,28)" rx="2" ry="2" />
<text  x="578.50" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="635.7" y="373" width="1.4" height="15.0" fill="rgb(248,11,28)" rx="2" ry="2" />
<text  x="638.69" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="667.9" y="261" width="1.4" height="15.0" fill="rgb(225,128,6)" rx="2" ry="2" />
<text  x="670.89" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="25.4" y="533" width="2.8" height="15.0" fill="rgb(209,229,11)" rx="2" ry="2" />
<text  x="28.40" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::unique_ptr&lt;std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt;, void&gt; (14,492,753 samples, 0.12%)</title><rect x="550.3" y="485" width="1.4" height="15.0" fill="rgb(253,175,18)" rx="2" ry="2" />
<text  x="553.31" y="495.5" ></text>
</g>
<g >
<title>__offtime (14,492,753 samples, 0.12%)</title><rect x="1016.4" y="773" width="1.4" height="15.0" fill="rgb(207,179,1)" rx="2" ry="2" />
<text  x="1019.43" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (72,463,765 samples, 0.59%)</title><rect x="166.8" y="565" width="7.0" height="15.0" fill="rgb(251,163,11)" rx="2" ry="2" />
<text  x="169.77" y="575.5" ></text>
</g>
<g >
<title>TracerUtil::SpiltTraceParent (14,492,753 samples, 0.12%)</title><rect x="143.0" y="581" width="1.4" height="15.0" fill="rgb(214,100,39)" rx="2" ry="2" />
<text  x="145.98" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="145.8" y="373" width="1.4" height="15.0" fill="rgb(233,153,34)" rx="2" ry="2" />
<text  x="148.78" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="666.5" y="277" width="1.4" height="15.0" fill="rgb(252,64,53)" rx="2" ry="2" />
<text  x="669.49" y="287.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="613" width="1.4" height="15.0" fill="rgb(221,200,3)" rx="2" ry="2" />
<text  x="1082.42" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (43,478,259 samples, 0.36%)</title><rect x="154.2" y="517" width="4.2" height="15.0" fill="rgb(247,145,53)" rx="2" ry="2" />
<text  x="157.18" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::vector (14,492,753 samples, 0.12%)</title><rect x="632.9" y="453" width="1.4" height="15.0" fill="rgb(246,212,44)" rx="2" ry="2" />
<text  x="635.89" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::StartSpanOptions::~StartSpanOptions (14,492,753 samples, 0.12%)</title><rect x="390.7" y="613" width="1.4" height="15.0" fill="rgb(217,205,43)" rx="2" ry="2" />
<text  x="393.74" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="138.8" y="549" width="1.4" height="15.0" fill="rgb(210,17,13)" rx="2" ry="2" />
<text  x="141.78" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (43,478,259 samples, 0.36%)</title><rect x="698.7" y="565" width="4.2" height="15.0" fill="rgb(237,155,32)" rx="2" ry="2" />
<text  x="701.68" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::string const, std::string&gt;, false, true&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="504.1" y="437" width="1.4" height="15.0" fill="rgb(222,71,34)" rx="2" ry="2" />
<text  x="507.12" y="447.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="1108.8" y="741" width="2.8" height="15.0" fill="rgb(251,204,22)" rx="2" ry="2" />
<text  x="1111.81" y="751.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::OnThreadExitList::~OnThreadExitList (14,492,753 samples, 0.12%)</title><rect x="851.3" y="597" width="1.4" height="15.0" fill="rgb(252,161,34)" rx="2" ry="2" />
<text  x="854.26" y="607.5" ></text>
</g>
<g >
<title>std::string::assign (28,985,506 samples, 0.24%)</title><rect x="1171.8" y="773" width="2.8" height="15.0" fill="rgb(209,7,48)" rx="2" ry="2" />
<text  x="1174.80" y="783.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::Span (14,492,753 samples, 0.12%)</title><rect x="893.3" y="373" width="1.4" height="15.0" fill="rgb(211,75,52)" rx="2" ry="2" />
<text  x="896.25" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (43,478,259 samples, 0.36%)</title><rect x="592.3" y="421" width="4.2" height="15.0" fill="rgb(254,18,29)" rx="2" ry="2" />
<text  x="595.30" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (28,985,506 samples, 0.24%)</title><rect x="368.3" y="533" width="2.8" height="15.0" fill="rgb(205,213,9)" rx="2" ry="2" />
<text  x="371.34" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapField&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (14,492,753 samples, 0.12%)</title><rect x="172.4" y="469" width="1.4" height="15.0" fill="rgb(229,171,2)" rx="2" ry="2" />
<text  x="175.37" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (115,942,024 samples, 0.95%)</title><rect x="19.8" y="661" width="11.2" height="15.0" fill="rgb(233,109,13)" rx="2" ry="2" />
<text  x="22.80" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;google::protobuf::Message const**, google::protobuf::Message const**, std::allocator&lt;google::protobuf::Message const*&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="130.4" y="421" width="2.8" height="15.0" fill="rgb(216,160,31)" rx="2" ry="2" />
<text  x="133.38" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="662.3" y="405" width="2.8" height="15.0" fill="rgb(235,176,48)" rx="2" ry="2" />
<text  x="665.29" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="912.8" y="549" width="1.4" height="15.0" fill="rgb(246,152,24)" rx="2" ry="2" />
<text  x="915.85" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (28,985,506 samples, 0.24%)</title><rect x="536.3" y="453" width="2.8" height="15.0" fill="rgb(230,6,14)" rx="2" ry="2" />
<text  x="539.31" y="463.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="343.1" y="469" width="1.4" height="15.0" fill="rgb(243,228,35)" rx="2" ry="2" />
<text  x="346.14" y="479.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="150.0" y="485" width="2.8" height="15.0" fill="rgb(250,129,2)" rx="2" ry="2" />
<text  x="152.98" y="495.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="613.3" y="389" width="1.4" height="15.0" fill="rgb(205,153,23)" rx="2" ry="2" />
<text  x="616.30" y="399.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="330.5" y="453" width="1.4" height="15.0" fill="rgb(232,204,0)" rx="2" ry="2" />
<text  x="333.55" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (14,492,753 samples, 0.12%)</title><rect x="590.9" y="453" width="1.4" height="15.0" fill="rgb(207,166,4)" rx="2" ry="2" />
<text  x="593.90" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (173,913,036 samples, 1.42%)</title><rect x="35.2" y="693" width="16.8" height="15.0" fill="rgb(232,14,40)" rx="2" ry="2" />
<text  x="38.20" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="662.3" y="325" width="1.4" height="15.0" fill="rgb(208,133,28)" rx="2" ry="2" />
<text  x="665.29" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::Message::GetReflection (14,492,753 samples, 0.12%)</title><rect x="659.5" y="405" width="1.4" height="15.0" fill="rgb(212,139,13)" rx="2" ry="2" />
<text  x="662.49" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::_M_reset (14,492,753 samples, 0.12%)</title><rect x="390.7" y="485" width="1.4" height="15.0" fill="rgb(206,99,25)" rx="2" ry="2" />
<text  x="393.74" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="625.9" y="389" width="1.4" height="15.0" fill="rgb(237,4,9)" rx="2" ry="2" />
<text  x="628.90" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="590.9" y="325" width="1.4" height="15.0" fill="rgb(239,48,32)" rx="2" ry="2" />
<text  x="593.90" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::~map (14,492,753 samples, 0.12%)</title><rect x="540.5" y="517" width="1.4" height="15.0" fill="rgb(240,132,5)" rx="2" ry="2" />
<text  x="543.51" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::MultiRecordable (14,492,753 samples, 0.12%)</title><rect x="92.6" y="485" width="1.4" height="15.0" fill="rgb(247,228,2)" rx="2" ry="2" />
<text  x="95.59" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_disjunct (14,492,753 samples, 0.12%)</title><rect x="1171.8" y="757" width="1.4" height="15.0" fill="rgb(241,14,22)" rx="2" ry="2" />
<text  x="1174.80" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetInt32 (14,492,753 samples, 0.12%)</title><rect x="924.0" y="581" width="1.4" height="15.0" fill="rgb(234,116,49)" rx="2" ry="2" />
<text  x="927.05" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_Vector_base (14,492,753 samples, 0.12%)</title><rect x="133.2" y="469" width="1.4" height="15.0" fill="rgb(252,65,11)" rx="2" ry="2" />
<text  x="136.18" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="928.2" y="533" width="1.4" height="15.0" fill="rgb(238,229,36)" rx="2" ry="2" />
<text  x="931.24" y="543.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (14,492,753 samples, 0.12%)</title><rect x="15.6" y="709" width="1.4" height="15.0" fill="rgb(221,143,5)" rx="2" ry="2" />
<text  x="18.60" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::FindPtrOrNull&lt;std::unordered_map&lt;google::protobuf::Descriptor const*, google::protobuf::Message const*, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="656.7" y="421" width="1.4" height="15.0" fill="rgb(244,81,35)" rx="2" ry="2" />
<text  x="659.69" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="373.9" y="549" width="1.4" height="15.0" fill="rgb(219,134,2)" rx="2" ry="2" />
<text  x="376.94" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;NS_ACO::EventID, NS_ACO::EventID, std::_Identity&lt;NS_ACO::EventID&gt;, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;::erase[abi:cxx11] (28,985,506 samples, 0.24%)</title><rect x="185.0" y="581" width="2.8" height="15.0" fill="rgb(254,167,44)" rx="2" ry="2" />
<text  x="187.97" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (28,985,506 samples, 0.24%)</title><rect x="964.6" y="565" width="2.8" height="15.0" fill="rgb(236,184,9)" rx="2" ry="2" />
<text  x="967.64" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14,492,753 samples, 0.12%)</title><rect x="394.9" y="517" width="1.4" height="15.0" fill="rgb(244,83,8)" rx="2" ry="2" />
<text  x="397.93" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MergeFromImpl&lt;false&gt; (14,492,753 samples, 0.12%)</title><rect x="331.9" y="565" width="1.4" height="15.0" fill="rgb(234,46,38)" rx="2" ry="2" />
<text  x="334.95" y="575.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::SwitchContext (14,492,753 samples, 0.12%)</title><rect x="1003.8" y="709" width="1.4" height="15.0" fill="rgb(248,96,45)" rx="2" ry="2" />
<text  x="1006.83" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::FieldDescriptor const*&gt; (28,985,506 samples, 0.24%)</title><rect x="932.4" y="533" width="2.8" height="15.0" fill="rgb(211,223,39)" rx="2" ry="2" />
<text  x="935.44" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="376.7" y="533" width="1.4" height="15.0" fill="rgb(227,137,12)" rx="2" ry="2" />
<text  x="379.74" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="666.5" y="325" width="1.4" height="15.0" fill="rgb(227,103,49)" rx="2" ry="2" />
<text  x="669.49" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (28,985,506 samples, 0.24%)</title><rect x="351.5" y="437" width="2.8" height="15.0" fill="rgb(251,30,51)" rx="2" ry="2" />
<text  x="354.54" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (28,985,506 samples, 0.24%)</title><rect x="581.1" y="517" width="2.8" height="15.0" fill="rgb(218,63,49)" rx="2" ry="2" />
<text  x="584.10" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, opentelemetry::v1::sdk::trace::Recordable*, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="98.2" y="437" width="1.4" height="15.0" fill="rgb(207,197,4)" rx="2" ry="2" />
<text  x="101.19" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="264.8" y="389" width="1.4" height="15.0" fill="rgb(232,82,40)" rx="2" ry="2" />
<text  x="267.76" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="716.9" y="453" width="1.4" height="15.0" fill="rgb(235,107,43)" rx="2" ry="2" />
<text  x="719.88" y="463.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="520.9" y="501" width="1.4" height="15.0" fill="rgb(254,12,10)" rx="2" ry="2" />
<text  x="523.91" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="199.0" y="469" width="1.4" height="15.0" fill="rgb(251,24,37)" rx="2" ry="2" />
<text  x="201.97" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (159,420,283 samples, 1.30%)</title><rect x="551.7" y="533" width="15.4" height="15.0" fill="rgb(246,5,6)" rx="2" ry="2" />
<text  x="554.71" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (28,985,506 samples, 0.24%)</title><rect x="397.7" y="549" width="2.8" height="15.0" fill="rgb(222,46,18)" rx="2" ry="2" />
<text  x="400.73" y="559.5" ></text>
</g>
<g >
<title>std::atomic&lt;double&gt;::compare_exchange_weak (14,492,753 samples, 0.12%)</title><rect x="78.6" y="405" width="1.4" height="15.0" fill="rgb(232,35,29)" rx="2" ry="2" />
<text  x="81.59" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="662.3" y="437" width="2.8" height="15.0" fill="rgb(213,91,49)" rx="2" ry="2" />
<text  x="665.29" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (376,811,578 samples, 3.08%)</title><rect x="337.5" y="565" width="36.4" height="15.0" fill="rgb(218,154,0)" rx="2" ry="2" />
<text  x="340.54" y="575.5" >goo..</text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="687.5" y="357" width="1.4" height="15.0" fill="rgb(207,188,22)" rx="2" ry="2" />
<text  x="690.49" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="187.8" y="485" width="1.4" height="15.0" fill="rgb(243,148,33)" rx="2" ry="2" />
<text  x="190.77" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;google::protobuf::Message const*&gt;::construct&lt;google::protobuf::Message const*, google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="565.7" y="373" width="1.4" height="15.0" fill="rgb(217,36,8)" rx="2" ry="2" />
<text  x="568.71" y="383.5" ></text>
</g>
<g >
<title>TracerUtil::SpliceTraceParent (14,492,753 samples, 0.12%)</title><rect x="144.4" y="581" width="1.4" height="15.0" fill="rgb(225,33,15)" rx="2" ry="2" />
<text  x="147.38" y="591.5" ></text>
</g>
<g >
<title>msg::ServerPkg::operator= (14,492,753 samples, 0.12%)</title><rect x="989.8" y="661" width="1.4" height="15.0" fill="rgb(246,149,12)" rx="2" ry="2" />
<text  x="992.83" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="842.9" y="613" width="1.4" height="15.0" fill="rgb(249,78,31)" rx="2" ry="2" />
<text  x="845.86" y="623.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="490.1" y="517" width="1.4" height="15.0" fill="rgb(207,168,22)" rx="2" ry="2" />
<text  x="493.12" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned int&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="376.7" y="581" width="1.4" height="15.0" fill="rgb(214,165,26)" rx="2" ry="2" />
<text  x="379.74" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="438.3" y="389" width="1.4" height="15.0" fill="rgb(211,31,34)" rx="2" ry="2" />
<text  x="441.33" y="399.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_instance (28,985,506 samples, 0.24%)</title><rect x="382.3" y="629" width="2.8" height="15.0" fill="rgb(252,157,53)" rx="2" ry="2" />
<text  x="385.34" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (28,985,506 samples, 0.24%)</title><rect x="164.0" y="501" width="2.8" height="15.0" fill="rgb(254,63,31)" rx="2" ry="2" />
<text  x="166.97" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (72,463,765 samples, 0.59%)</title><rect x="126.2" y="485" width="7.0" height="15.0" fill="rgb(239,181,8)" rx="2" ry="2" />
<text  x="129.18" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="341" width="1.4" height="15.0" fill="rgb(254,165,44)" rx="2" ry="2" />
<text  x="652.69" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="590.9" y="421" width="1.4" height="15.0" fill="rgb(211,171,38)" rx="2" ry="2" />
<text  x="593.90" y="431.5" ></text>
</g>
<g >
<title>__vsnprintf (28,985,506 samples, 0.24%)</title><rect x="1122.8" y="757" width="2.8" height="15.0" fill="rgb(219,72,31)" rx="2" ry="2" />
<text  x="1125.81" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="64.6" y="421" width="2.8" height="15.0" fill="rgb(250,69,50)" rx="2" ry="2" />
<text  x="67.59" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="956.2" y="389" width="1.4" height="15.0" fill="rgb(229,124,38)" rx="2" ry="2" />
<text  x="959.24" y="399.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="343.1" y="437" width="1.4" height="15.0" fill="rgb(239,199,39)" rx="2" ry="2" />
<text  x="346.14" y="447.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="421.5" y="597" width="2.8" height="15.0" fill="rgb(249,30,33)" rx="2" ry="2" />
<text  x="424.53" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="926.8" y="517" width="1.4" height="15.0" fill="rgb(211,220,39)" rx="2" ry="2" />
<text  x="929.84" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="877.9" y="277" width="1.4" height="15.0" fill="rgb(231,159,5)" rx="2" ry="2" />
<text  x="880.85" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (72,463,765 samples, 0.59%)</title><rect x="320.7" y="469" width="7.0" height="15.0" fill="rgb(205,74,2)" rx="2" ry="2" />
<text  x="323.75" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (28,985,506 samples, 0.24%)</title><rect x="28.2" y="581" width="2.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="31.20" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="429.9" y="517" width="1.4" height="15.0" fill="rgb(232,172,25)" rx="2" ry="2" />
<text  x="432.93" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="67.4" y="389" width="1.4" height="15.0" fill="rgb(215,218,31)" rx="2" ry="2" />
<text  x="70.39" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="862.5" y="341" width="1.4" height="15.0" fill="rgb(223,143,43)" rx="2" ry="2" />
<text  x="865.46" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="365.5" y="501" width="1.4" height="15.0" fill="rgb(218,207,18)" rx="2" ry="2" />
<text  x="368.54" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (28,985,506 samples, 0.24%)</title><rect x="541.9" y="517" width="2.8" height="15.0" fill="rgb(233,115,1)" rx="2" ry="2" />
<text  x="544.91" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="716.9" y="517" width="1.4" height="15.0" fill="rgb(205,36,32)" rx="2" ry="2" />
<text  x="719.88" y="527.5" ></text>
</g>
<g >
<title>std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="586.7" y="405" width="1.4" height="15.0" fill="rgb(210,85,15)" rx="2" ry="2" />
<text  x="589.70" y="415.5" ></text>
</g>
<g >
<title>std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (14,492,753 samples, 0.12%)</title><rect x="136.0" y="581" width="1.4" height="15.0" fill="rgb(225,98,10)" rx="2" ry="2" />
<text  x="138.98" y="591.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17_Move_assign_baseILb0EJSt9monostateblmdSt10shared_ptrIN13opentelemetry2v15trace4SpanEES3_INS6_11SpanContextEES3_INS5_7baggage7BaggageEEEECI2NS0_16_Variant_storageILb0EJS2_blmdS8_SA_SD_EEEILm0EJEEESt16in_place_index_tIXT_EEDpOT0_ (14,492,753 samples, 0.12%)</title><rect x="894.7" y="373" width="1.3" height="15.0" fill="rgb(209,53,14)" rx="2" ry="2" />
<text  x="897.65" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (14,492,753 samples, 0.12%)</title><rect x="140.2" y="533" width="1.4" height="15.0" fill="rgb(215,25,35)" rx="2" ry="2" />
<text  x="143.18" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~_Vector_base (14,492,753 samples, 0.12%)</title><rect x="372.5" y="517" width="1.4" height="15.0" fill="rgb(212,43,10)" rx="2" ry="2" />
<text  x="375.54" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (1,449,275,300 samples, 11.86%)</title><rect x="192.0" y="597" width="139.9" height="15.0" fill="rgb(228,116,34)" rx="2" ry="2" />
<text  x="194.97" y="607.5" >google::protobuf:..</text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="942.2" y="421" width="1.4" height="15.0" fill="rgb(250,41,36)" rx="2" ry="2" />
<text  x="945.24" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="690.3" y="405" width="1.4" height="15.0" fill="rgb(222,79,1)" rx="2" ry="2" />
<text  x="693.28" y="415.5" ></text>
</g>
<g >
<title>std::string::compare (14,492,753 samples, 0.12%)</title><rect x="586.7" y="309" width="1.4" height="15.0" fill="rgb(226,35,48)" rx="2" ry="2" />
<text  x="589.70" y="319.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Suspend (28,985,506 samples, 0.24%)</title><rect x="544.7" y="533" width="2.8" height="15.0" fill="rgb(242,85,31)" rx="2" ry="2" />
<text  x="547.71" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (14,492,753 samples, 0.12%)</title><rect x="667.9" y="197" width="1.4" height="15.0" fill="rgb(253,145,54)" rx="2" ry="2" />
<text  x="670.89" y="207.5" ></text>
</g>
<g >
<title>google::protobuf::Bits::Log2FloorNonZero (14,492,753 samples, 0.12%)</title><rect x="575.5" y="341" width="1.4" height="15.0" fill="rgb(206,219,12)" rx="2" ry="2" />
<text  x="578.50" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::CheckInvalidAccess (14,492,753 samples, 0.12%)</title><rect x="255.0" y="421" width="1.4" height="15.0" fill="rgb(240,158,17)" rx="2" ry="2" />
<text  x="257.96" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (14,492,753 samples, 0.12%)</title><rect x="602.1" y="469" width="1.4" height="15.0" fill="rgb(250,173,51)" rx="2" ry="2" />
<text  x="605.10" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (43,478,259 samples, 0.36%)</title><rect x="278.8" y="437" width="4.2" height="15.0" fill="rgb(247,20,42)" rx="2" ry="2" />
<text  x="281.75" y="447.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_instance (28,985,506 samples, 0.24%)</title><rect x="382.3" y="613" width="2.8" height="15.0" fill="rgb(215,170,6)" rx="2" ry="2" />
<text  x="385.34" y="623.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="723.9" y="645" width="1.4" height="15.0" fill="rgb(236,190,45)" rx="2" ry="2" />
<text  x="726.88" y="655.5" ></text>
</g>
<g >
<title>std::string::substr (14,492,753 samples, 0.12%)</title><rect x="57.6" y="549" width="1.4" height="15.0" fill="rgb(234,50,17)" rx="2" ry="2" />
<text  x="60.59" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Bits::Log2FloorNonZero (14,492,753 samples, 0.12%)</title><rect x="665.1" y="437" width="1.4" height="15.0" fill="rgb(252,187,8)" rx="2" ry="2" />
<text  x="668.09" y="447.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="155.6" y="373" width="1.4" height="15.0" fill="rgb(217,135,9)" rx="2" ry="2" />
<text  x="158.58" y="383.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (28,985,506 samples, 0.24%)</title><rect x="491.5" y="469" width="2.8" height="15.0" fill="rgb(249,215,26)" rx="2" ry="2" />
<text  x="494.52" y="479.5" ></text>
</g>
<g >
<title>std::atomic&lt;google::protobuf::internal::MapFieldBase::State&gt;::load (14,492,753 samples, 0.12%)</title><rect x="40.8" y="581" width="1.4" height="15.0" fill="rgb(238,218,37)" rx="2" ry="2" />
<text  x="43.79" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::field_count (14,492,753 samples, 0.12%)</title><rect x="166.8" y="485" width="1.4" height="15.0" fill="rgb(240,60,40)" rx="2" ry="2" />
<text  x="169.77" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="262.0" y="453" width="1.4" height="15.0" fill="rgb(219,202,47)" rx="2" ry="2" />
<text  x="264.96" y="463.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (28,985,506 samples, 0.24%)</title><rect x="164.0" y="581" width="2.8" height="15.0" fill="rgb(234,11,11)" rx="2" ry="2" />
<text  x="166.97" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;int, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="680.5" y="517" width="1.4" height="15.0" fill="rgb(223,135,5)" rx="2" ry="2" />
<text  x="683.49" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="231.2" y="421" width="1.4" height="15.0" fill="rgb(228,207,46)" rx="2" ry="2" />
<text  x="234.16" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (57,971,012 samples, 0.47%)</title><rect x="462.1" y="533" width="5.6" height="15.0" fill="rgb(215,123,10)" rx="2" ry="2" />
<text  x="465.12" y="543.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="197.6" y="485" width="1.4" height="15.0" fill="rgb(207,191,34)" rx="2" ry="2" />
<text  x="200.57" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32 (14,492,753 samples, 0.12%)</title><rect x="665.1" y="453" width="1.4" height="15.0" fill="rgb(242,46,20)" rx="2" ry="2" />
<text  x="668.09" y="463.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::Schedule (28,985,506 samples, 0.24%)</title><rect x="544.7" y="501" width="2.8" height="15.0" fill="rgb(221,172,20)" rx="2" ry="2" />
<text  x="547.71" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="176.6" y="533" width="1.4" height="15.0" fill="rgb(237,65,34)" rx="2" ry="2" />
<text  x="179.57" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (159,420,283 samples, 1.30%)</title><rect x="504.1" y="501" width="15.4" height="15.0" fill="rgb(249,156,27)" rx="2" ry="2" />
<text  x="507.12" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="358.5" y="453" width="1.4" height="15.0" fill="rgb(230,9,20)" rx="2" ry="2" />
<text  x="361.54" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (115,942,024 samples, 0.95%)</title><rect x="89.8" y="549" width="11.2" height="15.0" fill="rgb(232,40,44)" rx="2" ry="2" />
<text  x="92.79" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::NewString&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="971.6" y="533" width="1.4" height="15.0" fill="rgb(251,5,49)" rx="2" ry="2" />
<text  x="974.64" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="600.7" y="437" width="1.4" height="15.0" fill="rgb(222,120,32)" rx="2" ry="2" />
<text  x="603.70" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (28,985,506 samples, 0.24%)</title><rect x="351.5" y="485" width="2.8" height="15.0" fill="rgb(216,11,6)" rx="2" ry="2" />
<text  x="354.54" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="616.1" y="405" width="1.4" height="15.0" fill="rgb(237,228,50)" rx="2" ry="2" />
<text  x="619.10" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::MessageLite (14,492,753 samples, 0.12%)</title><rect x="597.9" y="421" width="1.4" height="15.0" fill="rgb(244,223,34)" rx="2" ry="2" />
<text  x="600.90" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;prometheus::Histogram::Observe (14,492,753 samples, 0.12%)</title><rect x="11.4" y="581" width="1.4" height="15.0" fill="rgb(216,143,53)" rx="2" ry="2" />
<text  x="14.40" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (72,463,765 samples, 0.59%)</title><rect x="872.3" y="373" width="7.0" height="15.0" fill="rgb(228,94,27)" rx="2" ry="2" />
<text  x="875.25" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="614.7" y="421" width="1.4" height="15.0" fill="rgb(236,185,1)" rx="2" ry="2" />
<text  x="617.70" y="431.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="473.3" y="453" width="1.4" height="15.0" fill="rgb(236,159,25)" rx="2" ry="2" />
<text  x="476.32" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::VarintParseSlow (28,985,506 samples, 0.24%)</title><rect x="1099.0" y="709" width="2.8" height="15.0" fill="rgb(238,138,12)" rx="2" ry="2" />
<text  x="1102.02" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="571.3" y="357" width="1.4" height="15.0" fill="rgb(217,154,35)" rx="2" ry="2" />
<text  x="574.30" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::__detail::__variant::_Variant_storage&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="390.7" y="437" width="1.4" height="15.0" fill="rgb(218,64,17)" rx="2" ry="2" />
<text  x="393.74" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="572.7" y="405" width="1.4" height="15.0" fill="rgb(248,73,26)" rx="2" ry="2" />
<text  x="575.70" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (159,420,283 samples, 1.30%)</title><rect x="551.7" y="501" width="15.4" height="15.0" fill="rgb(243,7,47)" rx="2" ry="2" />
<text  x="554.71" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (14,492,753 samples, 0.12%)</title><rect x="491.5" y="437" width="1.4" height="15.0" fill="rgb(237,29,40)" rx="2" ry="2" />
<text  x="494.52" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrIterator&lt;msg::Prop const&gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="375.3" y="645" width="1.4" height="15.0" fill="rgb(236,40,15)" rx="2" ry="2" />
<text  x="378.34" y="655.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="875.1" y="85" width="1.4" height="15.0" fill="rgb(206,192,53)" rx="2" ry="2" />
<text  x="878.05" y="95.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="470.5" y="517" width="1.4" height="15.0" fill="rgb(206,35,16)" rx="2" ry="2" />
<text  x="473.52" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="436.9" y="293" width="1.4" height="15.0" fill="rgb(248,63,8)" rx="2" ry="2" />
<text  x="439.93" y="303.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="672.1" y="453" width="1.4" height="15.0" fill="rgb(225,108,9)" rx="2" ry="2" />
<text  x="675.09" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="266.2" y="405" width="1.4" height="15.0" fill="rgb(207,208,53)" rx="2" ry="2" />
<text  x="269.16" y="415.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="557.3" y="309" width="1.4" height="15.0" fill="rgb(205,213,3)" rx="2" ry="2" />
<text  x="560.31" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::strings::AlphaNum::AlphaNum (14,492,753 samples, 0.12%)</title><rect x="267.6" y="389" width="1.4" height="15.0" fill="rgb(219,225,39)" rx="2" ry="2" />
<text  x="270.56" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="565.7" y="437" width="1.4" height="15.0" fill="rgb(243,191,40)" rx="2" ry="2" />
<text  x="568.71" y="447.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_instance (28,985,506 samples, 0.24%)</title><rect x="421.5" y="629" width="2.8" height="15.0" fill="rgb(235,88,12)" rx="2" ry="2" />
<text  x="424.53" y="639.5" ></text>
</g>
<g >
<title>std::string::_Alloc_hider::~_Alloc_hider (14,492,753 samples, 0.12%)</title><rect x="897.4" y="549" width="1.4" height="15.0" fill="rgb(207,212,4)" rx="2" ry="2" />
<text  x="900.45" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="390.7" y="421" width="1.4" height="15.0" fill="rgb(235,180,28)" rx="2" ry="2" />
<text  x="393.74" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (28,985,506 samples, 0.24%)</title><rect x="187.8" y="581" width="2.8" height="15.0" fill="rgb(233,163,33)" rx="2" ry="2" />
<text  x="190.77" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (101,449,271 samples, 0.83%)</title><rect x="702.9" y="565" width="9.8" height="15.0" fill="rgb(235,194,21)" rx="2" ry="2" />
<text  x="705.88" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (14,492,753 samples, 0.12%)</title><rect x="103.8" y="549" width="1.4" height="15.0" fill="rgb(212,159,41)" rx="2" ry="2" />
<text  x="106.78" y="559.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="723.9" y="613" width="1.4" height="15.0" fill="rgb(231,63,3)" rx="2" ry="2" />
<text  x="726.88" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="407.5" y="485" width="1.4" height="15.0" fill="rgb(216,101,10)" rx="2" ry="2" />
<text  x="410.53" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="89.8" y="373" width="1.4" height="15.0" fill="rgb(221,163,14)" rx="2" ry="2" />
<text  x="92.79" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span_Event&gt;::RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="893.3" y="357" width="1.4" height="15.0" fill="rgb(213,72,52)" rx="2" ry="2" />
<text  x="896.25" y="367.5" ></text>
</g>
<g >
<title>std::string::_M_check_length (14,492,753 samples, 0.12%)</title><rect x="144.4" y="549" width="1.4" height="15.0" fill="rgb(222,77,25)" rx="2" ry="2" />
<text  x="147.38" y="559.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="931.0" y="485" width="1.4" height="15.0" fill="rgb(221,223,10)" rx="2" ry="2" />
<text  x="934.04" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::SetAttribute (14,492,753 samples, 0.12%)</title><rect x="89.8" y="389" width="1.4" height="15.0" fill="rgb(245,85,38)" rx="2" ry="2" />
<text  x="92.79" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (28,985,506 samples, 0.24%)</title><rect x="932.4" y="565" width="2.8" height="15.0" fill="rgb(214,201,36)" rx="2" ry="2" />
<text  x="935.44" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="39.4" y="581" width="1.4" height="15.0" fill="rgb(239,229,35)" rx="2" ry="2" />
<text  x="42.40" y="591.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::DeleteEventByID (72,463,765 samples, 0.59%)</title><rect x="183.6" y="613" width="7.0" height="15.0" fill="rgb(221,15,40)" rx="2" ry="2" />
<text  x="186.57" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="429.9" y="485" width="1.4" height="15.0" fill="rgb(215,53,33)" rx="2" ry="2" />
<text  x="432.93" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (57,971,012 samples, 0.47%)</title><rect x="604.9" y="453" width="5.6" height="15.0" fill="rgb(251,180,49)" rx="2" ry="2" />
<text  x="607.90" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="565.7" y="405" width="1.4" height="15.0" fill="rgb(209,90,23)" rx="2" ry="2" />
<text  x="568.71" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;google::protobuf::Descriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::MessagePrinter const, std::default_delete&lt;google::protobuf::TextFormat::MessagePrinter const&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (14,492,753 samples, 0.12%)</title><rect x="464.9" y="501" width="1.4" height="15.0" fill="rgb(250,114,40)" rx="2" ry="2" />
<text  x="467.92" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (28,985,506 samples, 0.24%)</title><rect x="876.5" y="357" width="2.8" height="15.0" fill="rgb(227,177,44)" rx="2" ry="2" />
<text  x="879.45" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_internal_add_spans (14,492,753 samples, 0.12%)</title><rect x="387.9" y="533" width="1.4" height="15.0" fill="rgb(254,72,51)" rx="2" ry="2" />
<text  x="390.94" y="543.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="319.3" y="485" width="1.4" height="15.0" fill="rgb(211,173,24)" rx="2" ry="2" />
<text  x="322.35" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="421.5" y="485" width="2.8" height="15.0" fill="rgb(220,6,54)" rx="2" ry="2" />
<text  x="424.53" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (28,985,506 samples, 0.24%)</title><rect x="501.3" y="453" width="2.8" height="15.0" fill="rgb(252,207,33)" rx="2" ry="2" />
<text  x="504.32" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="415.9" y="613" width="1.4" height="15.0" fill="rgb(236,187,9)" rx="2" ry="2" />
<text  x="418.93" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::ForEachKeyValue (57,971,012 samples, 0.47%)</title><rect x="884.9" y="453" width="5.6" height="15.0" fill="rgb(207,179,51)" rx="2" ry="2" />
<text  x="887.85" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="627.3" y="437" width="1.4" height="15.0" fill="rgb(227,8,46)" rx="2" ry="2" />
<text  x="630.30" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;int, int, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="683.3" y="565" width="1.4" height="15.0" fill="rgb(254,91,37)" rx="2" ry="2" />
<text  x="686.29" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrIterator&lt;opentelemetry::proto::trace::v1::Span_Event const&gt;::RepeatedPtrIterator&lt;opentelemetry::proto::trace::v1::Span_Event,  (14,492,753 samples, 0.12%)</title><rect x="690.3" y="389" width="1.4" height="15.0" fill="rgb(216,188,35)" rx="2" ry="2" />
<text  x="693.28" y="399.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="334.7" y="565" width="1.4" height="15.0" fill="rgb(247,36,14)" rx="2" ry="2" />
<text  x="337.74" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;char const*, unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="672.1" y="357" width="1.4" height="15.0" fill="rgb(233,62,35)" rx="2" ry="2" />
<text  x="675.09" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetInt32 (14,492,753 samples, 0.12%)</title><rect x="536.3" y="437" width="1.4" height="15.0" fill="rgb(243,225,33)" rx="2" ry="2" />
<text  x="539.31" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_repeated (14,492,753 samples, 0.12%)</title><rect x="460.7" y="533" width="1.4" height="15.0" fill="rgb(253,125,41)" rx="2" ry="2" />
<text  x="463.72" y="543.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const**, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="115.0" y="421" width="1.4" height="15.0" fill="rgb(243,11,42)" rx="2" ry="2" />
<text  x="117.98" y="431.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="586.7" y="485" width="1.4" height="15.0" fill="rgb(215,148,35)" rx="2" ry="2" />
<text  x="589.70" y="495.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="366.9" y="485" width="1.4" height="15.0" fill="rgb(218,83,4)" rx="2" ry="2" />
<text  x="369.94" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::MapIterator::MapIterator (14,492,753 samples, 0.12%)</title><rect x="659.5" y="421" width="1.4" height="15.0" fill="rgb(227,87,45)" rx="2" ry="2" />
<text  x="662.49" y="431.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;NS_ACO::ThreadID, int, std::hash&lt;NS_ACO::ThreadID&gt;, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="484.5" y="533" width="1.4" height="15.0" fill="rgb(223,70,37)" rx="2" ry="2" />
<text  x="487.52" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (28,985,506 samples, 0.24%)</title><rect x="295.6" y="421" width="2.8" height="15.0" fill="rgb(232,208,43)" rx="2" ry="2" />
<text  x="298.55" y="431.5" ></text>
</g>
<g >
<title>prometheus::Histogram::Observe (14,492,753 samples, 0.12%)</title><rect x="11.4" y="613" width="1.4" height="15.0" fill="rgb(215,26,16)" rx="2" ry="2" />
<text  x="14.40" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="351.5" y="501" width="2.8" height="15.0" fill="rgb(240,37,54)" rx="2" ry="2" />
<text  x="354.54" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (159,420,283 samples, 1.30%)</title><rect x="504.1" y="533" width="15.4" height="15.0" fill="rgb(229,11,47)" rx="2" ry="2" />
<text  x="507.12" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::~InstrumentationScope (14,492,753 samples, 0.12%)</title><rect x="666.5" y="309" width="1.4" height="15.0" fill="rgb(237,77,43)" rx="2" ry="2" />
<text  x="669.49" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (14,492,753 samples, 0.12%)</title><rect x="695.9" y="501" width="1.4" height="15.0" fill="rgb(225,104,4)" rx="2" ry="2" />
<text  x="698.88" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="557.3" y="357" width="1.4" height="15.0" fill="rgb(219,53,21)" rx="2" ry="2" />
<text  x="560.31" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (376,811,578 samples, 3.08%)</title><rect x="337.5" y="581" width="36.4" height="15.0" fill="rgb(234,170,41)" rx="2" ry="2" />
<text  x="340.54" y="591.5" >goo..</text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::InstrumentationScope&gt; (14,492,753 samples, 0.12%)</title><rect x="492.9" y="373" width="1.4" height="15.0" fill="rgb(251,178,23)" rx="2" ry="2" />
<text  x="495.92" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="64.6" y="309" width="1.4" height="15.0" fill="rgb(253,127,30)" rx="2" ry="2" />
<text  x="67.59" y="319.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="667.9" y="229" width="1.4" height="15.0" fill="rgb(224,225,17)" rx="2" ry="2" />
<text  x="670.89" y="239.5" ></text>
</g>
<g >
<title>vtable for google::protobuf::internal::MapFieldBase (14,492,753 samples, 0.12%)</title><rect x="1188.6" y="789" width="1.4" height="15.0" fill="rgb(238,167,33)" rx="2" ry="2" />
<text  x="1191.60" y="799.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (130,434,777 samples, 1.07%)</title><rect x="883.5" y="485" width="12.5" height="15.0" fill="rgb(230,116,52)" rx="2" ry="2" />
<text  x="886.45" y="495.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;google::protobuf::Descriptor const*, google::protobuf::Message const*, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="630.1" y="405" width="1.4" height="15.0" fill="rgb(247,61,26)" rx="2" ry="2" />
<text  x="633.09" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="533.5" y="357" width="1.4" height="15.0" fill="rgb(242,31,2)" rx="2" ry="2" />
<text  x="536.51" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="446.7" y="565" width="1.4" height="15.0" fill="rgb(227,78,46)" rx="2" ry="2" />
<text  x="449.73" y="575.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="890.5" y="437" width="1.4" height="15.0" fill="rgb(206,94,19)" rx="2" ry="2" />
<text  x="893.45" y="447.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;google::protobuf::Message const**&gt;::move_iterator (14,492,753 samples, 0.12%)</title><rect x="130.4" y="389" width="1.4" height="15.0" fill="rgb(242,48,15)" rx="2" ry="2" />
<text  x="133.38" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="861.1" y="325" width="1.4" height="15.0" fill="rgb(250,133,39)" rx="2" ry="2" />
<text  x="864.06" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="599.3" y="357" width="1.4" height="15.0" fill="rgb(235,82,42)" rx="2" ry="2" />
<text  x="602.30" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="462.1" y="373" width="1.4" height="15.0" fill="rgb(219,33,3)" rx="2" ry="2" />
<text  x="465.12" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::EpsCopyInputStream::InitFrom (14,492,753 samples, 0.12%)</title><rect x="988.4" y="597" width="1.4" height="15.0" fill="rgb(252,191,46)" rx="2" ry="2" />
<text  x="991.43" y="607.5" ></text>
</g>
<g >
<title>std::tie&lt;google::protobuf::Arena*, int, int, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&gt; (14,492,753 samples, 0.12%)</title><rect x="499.9" y="405" width="1.4" height="15.0" fill="rgb(247,162,43)" rx="2" ry="2" />
<text  x="502.92" y="415.5" ></text>
</g>
<g >
<title>CResExternalTalent::CanUpGradeTalent (14,492,753 samples, 0.12%)</title><rect x="376.7" y="629" width="1.4" height="15.0" fill="rgb(238,46,11)" rx="2" ry="2" />
<text  x="379.74" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::TryEmplaceInternal&lt;std::string const&amp;&gt; (57,971,012 samples, 0.47%)</title><rect x="1065.4" y="773" width="5.6" height="15.0" fill="rgb(237,148,49)" rx="2" ry="2" />
<text  x="1068.42" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="547.5" y="357" width="1.4" height="15.0" fill="rgb(206,149,29)" rx="2" ry="2" />
<text  x="550.51" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="590.9" y="341" width="1.4" height="15.0" fill="rgb(220,71,0)" rx="2" ry="2" />
<text  x="593.90" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="145.8" y="469" width="1.4" height="15.0" fill="rgb(244,177,30)" rx="2" ry="2" />
<text  x="148.78" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="29.6" y="565" width="1.4" height="15.0" fill="rgb(218,54,44)" rx="2" ry="2" />
<text  x="32.60" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="963.2" y="501" width="1.4" height="15.0" fill="rgb(245,205,52)" rx="2" ry="2" />
<text  x="966.24" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::name (14,492,753 samples, 0.12%)</title><rect x="935.2" y="549" width="1.4" height="15.0" fill="rgb(234,186,10)" rx="2" ry="2" />
<text  x="938.24" y="559.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="77.2" y="469" width="2.8" height="15.0" fill="rgb(223,139,31)" rx="2" ry="2" />
<text  x="80.19" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="116.4" y="485" width="1.4" height="15.0" fill="rgb(251,56,52)" rx="2" ry="2" />
<text  x="119.38" y="495.5" ></text>
</g>
<g >
<title>msg::Prop::_InternalParse (57,971,012 samples, 0.47%)</title><rect x="1082.2" y="741" width="5.6" height="15.0" fill="rgb(235,109,49)" rx="2" ry="2" />
<text  x="1085.22" y="751.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Sleep (28,985,506 samples, 0.24%)</title><rect x="730.9" y="709" width="2.8" height="15.0" fill="rgb(232,222,32)" rx="2" ry="2" />
<text  x="733.88" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_addr (14,492,753 samples, 0.12%)</title><rect x="187.8" y="453" width="1.4" height="15.0" fill="rgb(239,7,40)" rx="2" ry="2" />
<text  x="190.77" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (28,985,506 samples, 0.24%)</title><rect x="575.5" y="485" width="2.8" height="15.0" fill="rgb(232,122,51)" rx="2" ry="2" />
<text  x="578.50" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::StringSize (14,492,753 samples, 0.12%)</title><rect x="575.5" y="389" width="1.4" height="15.0" fill="rgb(220,185,34)" rx="2" ry="2" />
<text  x="578.50" y="399.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="105.2" y="533" width="1.4" height="15.0" fill="rgb(231,187,9)" rx="2" ry="2" />
<text  x="108.18" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="646.9" y="405" width="1.4" height="15.0" fill="rgb(216,144,28)" rx="2" ry="2" />
<text  x="649.89" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::unique_ptr&lt;std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt;, void&gt; (14,492,753 samples, 0.12%)</title><rect x="673.5" y="469" width="1.4" height="15.0" fill="rgb(227,155,39)" rx="2" ry="2" />
<text  x="676.49" y="479.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="186.4" y="485" width="1.4" height="15.0" fill="rgb(206,31,45)" rx="2" ry="2" />
<text  x="189.37" y="495.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::ByteSizeLong (57,971,012 samples, 0.47%)</title><rect x="1072.4" y="741" width="5.6" height="15.0" fill="rgb(253,183,38)" rx="2" ry="2" />
<text  x="1075.42" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="922.6" y="549" width="1.4" height="15.0" fill="rgb(226,89,13)" rx="2" ry="2" />
<text  x="925.65" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::~Span (28,985,506 samples, 0.24%)</title><rect x="873.7" y="245" width="2.8" height="15.0" fill="rgb(243,228,7)" rx="2" ry="2" />
<text  x="876.65" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="362.7" y="485" width="1.4" height="15.0" fill="rgb(236,55,13)" rx="2" ry="2" />
<text  x="365.74" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (28,985,506 samples, 0.24%)</title><rect x="861.1" y="421" width="2.8" height="15.0" fill="rgb(248,175,5)" rx="2" ry="2" />
<text  x="864.06" y="431.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="606.3" y="293" width="1.4" height="15.0" fill="rgb(250,2,14)" rx="2" ry="2" />
<text  x="609.30" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::reserve (14,492,753 samples, 0.12%)</title><rect x="523.7" y="437" width="1.4" height="15.0" fill="rgb(209,163,19)" rx="2" ry="2" />
<text  x="526.71" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="234.0" y="421" width="1.4" height="15.0" fill="rgb(213,67,49)" rx="2" ry="2" />
<text  x="236.96" y="431.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="708.5" y="421" width="1.4" height="15.0" fill="rgb(206,121,42)" rx="2" ry="2" />
<text  x="711.48" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14,492,753 samples, 0.12%)</title><rect x="516.7" y="437" width="1.4" height="15.0" fill="rgb(224,61,39)" rx="2" ry="2" />
<text  x="519.71" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10,275,361,877 samples, 84.10%)</title><rect x="14.2" y="757" width="992.4" height="15.0" fill="rgb(254,117,3)" rx="2" ry="2" />
<text  x="17.20" y="767.5" >std::function&lt;void </text>
</g>
<g >
<title>google::protobuf::internal::MapFieldBase::ConstAccess (14,492,753 samples, 0.12%)</title><rect x="1076.6" y="725" width="1.4" height="15.0" fill="rgb(241,44,49)" rx="2" ry="2" />
<text  x="1079.62" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="704.3" y="469" width="1.4" height="15.0" fill="rgb(233,115,19)" rx="2" ry="2" />
<text  x="707.28" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (14,492,753 samples, 0.12%)</title><rect x="539.1" y="453" width="1.4" height="15.0" fill="rgb(248,74,26)" rx="2" ry="2" />
<text  x="542.11" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (57,971,012 samples, 0.47%)</title><rect x="273.2" y="421" width="5.6" height="15.0" fill="rgb(234,37,40)" rx="2" ry="2" />
<text  x="276.16" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14,492,753 samples, 0.12%)</title><rect x="701.5" y="485" width="1.4" height="15.0" fill="rgb(210,168,9)" rx="2" ry="2" />
<text  x="704.48" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="302.6" y="373" width="1.4" height="15.0" fill="rgb(248,148,8)" rx="2" ry="2" />
<text  x="305.55" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="308.1" y="405" width="1.4" height="15.0" fill="rgb(205,39,28)" rx="2" ry="2" />
<text  x="311.15" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;bool&gt; (14,492,753 samples, 0.12%)</title><rect x="338.9" y="485" width="1.4" height="15.0" fill="rgb(246,112,15)" rx="2" ry="2" />
<text  x="341.94" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="604.9" y="421" width="2.8" height="15.0" fill="rgb(243,101,38)" rx="2" ry="2" />
<text  x="607.90" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="557.3" y="421" width="1.4" height="15.0" fill="rgb(237,84,34)" rx="2" ry="2" />
<text  x="560.31" y="431.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write_bytes&lt; (14,492,753 samples, 0.12%)</title><rect x="17.0" y="661" width="1.4" height="15.0" fill="rgb(246,78,37)" rx="2" ry="2" />
<text  x="20.00" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::MapFieldBase&gt; (14,492,753 samples, 0.12%)</title><rect x="922.6" y="565" width="1.4" height="15.0" fill="rgb(241,66,37)" rx="2" ry="2" />
<text  x="925.65" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="537.7" y="389" width="1.4" height="15.0" fill="rgb(209,67,6)" rx="2" ry="2" />
<text  x="540.71" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="861.1" y="341" width="1.4" height="15.0" fill="rgb(233,228,2)" rx="2" ry="2" />
<text  x="864.06" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::containing_oneof (14,492,753 samples, 0.12%)</title><rect x="407.5" y="453" width="1.4" height="15.0" fill="rgb(206,93,19)" rx="2" ry="2" />
<text  x="410.53" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="176.6" y="549" width="1.4" height="15.0" fill="rgb(212,189,47)" rx="2" ry="2" />
<text  x="179.57" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (28,985,506 samples, 0.24%)</title><rect x="637.1" y="405" width="2.8" height="15.0" fill="rgb(207,68,39)" rx="2" ry="2" />
<text  x="640.09" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (57,971,012 samples, 0.47%)</title><rect x="320.7" y="453" width="5.6" height="15.0" fill="rgb(254,1,10)" rx="2" ry="2" />
<text  x="323.75" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;::operator== (14,492,753 samples, 0.12%)</title><rect x="946.4" y="549" width="1.4" height="15.0" fill="rgb(222,228,0)" rx="2" ry="2" />
<text  x="949.44" y="559.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="578.3" y="357" width="1.4" height="15.0" fill="rgb(223,133,8)" rx="2" ry="2" />
<text  x="581.30" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (57,971,012 samples, 0.47%)</title><rect x="884.9" y="389" width="5.6" height="15.0" fill="rgb(219,173,18)" rx="2" ry="2" />
<text  x="887.85" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="854.1" y="581" width="1.4" height="15.0" fill="rgb(237,73,5)" rx="2" ry="2" />
<text  x="857.06" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (43,478,259 samples, 0.36%)</title><rect x="911.4" y="565" width="4.2" height="15.0" fill="rgb(212,113,37)" rx="2" ry="2" />
<text  x="914.45" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="869.5" y="421" width="1.4" height="15.0" fill="rgb(230,96,10)" rx="2" ry="2" />
<text  x="872.45" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::__uniq_ptr_impl (14,492,753 samples, 0.12%)</title><rect x="550.3" y="469" width="1.4" height="15.0" fill="rgb(244,148,7)" rx="2" ry="2" />
<text  x="553.31" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::Span&gt; (14,492,753 samples, 0.12%)</title><rect x="869.5" y="389" width="1.4" height="15.0" fill="rgb(220,183,39)" rx="2" ry="2" />
<text  x="872.45" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="931.0" y="549" width="1.4" height="15.0" fill="rgb(219,15,38)" rx="2" ry="2" />
<text  x="934.04" y="559.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (28,985,506 samples, 0.24%)</title><rect x="1114.4" y="693" width="2.8" height="15.0" fill="rgb(239,173,30)" rx="2" ry="2" />
<text  x="1117.41" y="703.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="877.9" y="261" width="1.4" height="15.0" fill="rgb(254,92,4)" rx="2" ry="2" />
<text  x="880.85" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::find&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="896.0" y="549" width="1.4" height="15.0" fill="rgb(241,132,0)" rx="2" ry="2" />
<text  x="899.05" y="559.5" ></text>
</g>
<g >
<title>std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;::erase[abi:cxx11] (28,985,506 samples, 0.24%)</title><rect x="185.0" y="597" width="2.8" height="15.0" fill="rgb(223,36,14)" rx="2" ry="2" />
<text  x="187.97" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="431.3" y="469" width="1.4" height="15.0" fill="rgb(216,20,37)" rx="2" ry="2" />
<text  x="434.33" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, unsigned long, false&gt;::_S_equals (14,492,753 samples, 0.12%)</title><rect x="585.3" y="517" width="1.4" height="15.0" fill="rgb(251,88,20)" rx="2" ry="2" />
<text  x="588.30" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="463.5" y="453" width="1.4" height="15.0" fill="rgb(228,124,6)" rx="2" ry="2" />
<text  x="466.52" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (72,463,765 samples, 0.59%)</title><rect x="337.5" y="549" width="7.0" height="15.0" fill="rgb(248,46,21)" rx="2" ry="2" />
<text  x="340.54" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="886.3" y="325" width="1.4" height="15.0" fill="rgb(246,113,15)" rx="2" ry="2" />
<text  x="889.25" y="335.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="600.7" y="389" width="1.4" height="15.0" fill="rgb(211,204,30)" rx="2" ry="2" />
<text  x="603.70" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (115,942,024 samples, 0.95%)</title><rect x="687.5" y="581" width="11.2" height="15.0" fill="rgb(207,112,28)" rx="2" ry="2" />
<text  x="690.49" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (710,144,897 samples, 5.81%)</title><rect x="248.0" y="469" width="68.5" height="15.0" fill="rgb(238,162,0)" rx="2" ry="2" />
<text  x="250.96" y="479.5" >google:..</text>
</g>
<g >
<title>google::protobuf::internal::VarintParse&lt;unsigned long&gt; (28,985,506 samples, 0.24%)</title><rect x="1085.0" y="725" width="2.8" height="15.0" fill="rgb(252,205,35)" rx="2" ry="2" />
<text  x="1088.02" y="735.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="961.8" y="517" width="1.4" height="15.0" fill="rgb(211,220,21)" rx="2" ry="2" />
<text  x="964.84" y="527.5" ></text>
</g>
<g >
<title>std::string::get_allocator (14,492,753 samples, 0.12%)</title><rect x="14.2" y="677" width="1.4" height="15.0" fill="rgb(215,226,6)" rx="2" ry="2" />
<text  x="17.20" y="687.5" ></text>
</g>
<g >
<title>AcoLog::CodeLocation::CodeLocation (14,492,753 samples, 0.12%)</title><rect x="379.5" y="613" width="1.4" height="15.0" fill="rgb(232,106,25)" rx="2" ry="2" />
<text  x="382.54" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (14,492,753 samples, 0.12%)</title><rect x="898.8" y="485" width="1.4" height="15.0" fill="rgb(215,75,11)" rx="2" ry="2" />
<text  x="901.85" y="495.5" ></text>
</g>
<g >
<title>tbuspp_queue_t::~tbuspp_queue_t (86,956,518 samples, 0.71%)</title><rect x="1136.8" y="773" width="8.4" height="15.0" fill="rgb(217,92,28)" rx="2" ry="2" />
<text  x="1139.81" y="783.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="842.9" y="645" width="2.8" height="15.0" fill="rgb(244,23,4)" rx="2" ry="2" />
<text  x="845.86" y="655.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::TriggerEvent (14,492,753 samples, 0.12%)</title><rect x="908.6" y="629" width="1.4" height="15.0" fill="rgb(213,94,40)" rx="2" ry="2" />
<text  x="911.65" y="639.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="327.7" y="341" width="1.4" height="15.0" fill="rgb(207,112,52)" rx="2" ry="2" />
<text  x="330.75" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::operator[] (14,492,753 samples, 0.12%)</title><rect x="96.8" y="453" width="1.4" height="15.0" fill="rgb(225,37,5)" rx="2" ry="2" />
<text  x="99.79" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::TraceId::IsValid (14,492,753 samples, 0.12%)</title><rect x="582.5" y="485" width="1.4" height="15.0" fill="rgb(245,61,43)" rx="2" ry="2" />
<text  x="585.50" y="495.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (14,492,753 samples, 0.12%)</title><rect x="396.3" y="613" width="1.4" height="15.0" fill="rgb(215,22,30)" rx="2" ry="2" />
<text  x="399.33" y="623.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (57,971,012 samples, 0.47%)</title><rect x="884.9" y="405" width="5.6" height="15.0" fill="rgb(234,99,33)" rx="2" ry="2" />
<text  x="887.85" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (57,971,012 samples, 0.47%)</title><rect x="448.1" y="517" width="5.6" height="15.0" fill="rgb(224,53,37)" rx="2" ry="2" />
<text  x="451.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::_M_erase (14,492,753 samples, 0.12%)</title><rect x="61.8" y="453" width="1.4" height="15.0" fill="rgb(219,55,45)" rx="2" ry="2" />
<text  x="64.79" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::arena (14,492,753 samples, 0.12%)</title><rect x="693.1" y="261" width="1.4" height="15.0" fill="rgb(246,127,30)" rx="2" ry="2" />
<text  x="696.08" y="271.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="74.4" y="421" width="2.8" height="15.0" fill="rgb(244,205,11)" rx="2" ry="2" />
<text  x="77.39" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, PBInterpreter::MessageDesc&gt;, std::_Select1st&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="31.0" y="645" width="1.4" height="15.0" fill="rgb(249,136,9)" rx="2" ry="2" />
<text  x="34.00" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::~unordered_map (14,492,753 samples, 0.12%)</title><rect x="635.7" y="549" width="1.4" height="15.0" fill="rgb(228,108,10)" rx="2" ry="2" />
<text  x="638.69" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="201.8" y="501" width="1.4" height="15.0" fill="rgb(226,171,2)" rx="2" ry="2" />
<text  x="204.77" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (101,449,271 samples, 0.83%)</title><rect x="662.3" y="565" width="9.8" height="15.0" fill="rgb(237,162,36)" rx="2" ry="2" />
<text  x="665.29" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::SetString (14,492,753 samples, 0.12%)</title><rect x="975.8" y="549" width="1.4" height="15.0" fill="rgb(211,198,18)" rx="2" ry="2" />
<text  x="978.84" y="559.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="28.2" y="501" width="1.4" height="15.0" fill="rgb(250,213,9)" rx="2" ry="2" />
<text  x="31.20" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="471.9" y="501" width="1.4" height="15.0" fill="rgb(239,121,21)" rx="2" ry="2" />
<text  x="474.92" y="511.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="1013.6" y="741" width="1.4" height="15.0" fill="rgb(213,45,41)" rx="2" ry="2" />
<text  x="1016.63" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::NewFromPrototype (14,492,753 samples, 0.12%)</title><rect x="578.3" y="421" width="1.4" height="15.0" fill="rgb(242,203,17)" rx="2" ry="2" />
<text  x="581.30" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintLiteral&lt;5ul&gt; (14,492,753 samples, 0.12%)</title><rect x="290.0" y="437" width="1.4" height="15.0" fill="rgb(250,35,38)" rx="2" ry="2" />
<text  x="292.95" y="447.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="842.9" y="629" width="1.4" height="15.0" fill="rgb(218,148,53)" rx="2" ry="2" />
<text  x="845.86" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::resource::v1::Resource&gt; (43,478,259 samples, 0.36%)</title><rect x="70.2" y="437" width="4.2" height="15.0" fill="rgb(243,123,20)" rx="2" ry="2" />
<text  x="73.19" y="447.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="109.4" y="469" width="1.4" height="15.0" fill="rgb(230,34,0)" rx="2" ry="2" />
<text  x="112.38" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="67.4" y="405" width="1.4" height="15.0" fill="rgb(213,61,52)" rx="2" ry="2" />
<text  x="70.39" y="415.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="478.9" y="533" width="1.4" height="15.0" fill="rgb(212,36,0)" rx="2" ry="2" />
<text  x="481.92" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;opentelemetry::v1::trace::SpanContext, false&gt;::_M_get (14,492,753 samples, 0.12%)</title><rect x="390.7" y="405" width="1.4" height="15.0" fill="rgb(208,87,52)" rx="2" ry="2" />
<text  x="393.74" y="415.5" ></text>
</g>
<g >
<title>std::string::compare (14,492,753 samples, 0.12%)</title><rect x="317.9" y="469" width="1.4" height="15.0" fill="rgb(208,108,1)" rx="2" ry="2" />
<text  x="320.95" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::operator!= (14,492,753 samples, 0.12%)</title><rect x="435.5" y="437" width="1.4" height="15.0" fill="rgb(241,203,36)" rx="2" ry="2" />
<text  x="438.53" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="502.7" y="293" width="1.4" height="15.0" fill="rgb(219,228,8)" rx="2" ry="2" />
<text  x="505.72" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::DebugStringFieldValuePrinter::PrintMessageStart (14,492,753 samples, 0.12%)</title><rect x="211.6" y="485" width="1.4" height="15.0" fill="rgb(216,205,16)" rx="2" ry="2" />
<text  x="214.57" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::SetBytes (14,492,753 samples, 0.12%)</title><rect x="443.9" y="501" width="1.4" height="15.0" fill="rgb(218,132,34)" rx="2" ry="2" />
<text  x="446.93" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::resource::v1::Resource&gt; (14,492,753 samples, 0.12%)</title><rect x="590.9" y="373" width="1.4" height="15.0" fill="rgb(247,159,9)" rx="2" ry="2" />
<text  x="593.90" y="383.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="277.4" y="309" width="1.4" height="15.0" fill="rgb(242,73,12)" rx="2" ry="2" />
<text  x="280.35" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, false, false&gt;::_Node_iterator (14,492,753 samples, 0.12%)</title><rect x="968.8" y="501" width="1.4" height="15.0" fill="rgb(224,54,13)" rx="2" ry="2" />
<text  x="971.84" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="138.8" y="565" width="1.4" height="15.0" fill="rgb(233,20,19)" rx="2" ry="2" />
<text  x="141.78" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (14,492,753 samples, 0.12%)</title><rect x="999.6" y="677" width="1.4" height="15.0" fill="rgb(223,204,14)" rx="2" ry="2" />
<text  x="1002.63" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="716.9" y="501" width="1.4" height="15.0" fill="rgb(209,175,39)" rx="2" ry="2" />
<text  x="719.88" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldBase::SetMapDirty (14,492,753 samples, 0.12%)</title><rect x="1071.0" y="725" width="1.4" height="15.0" fill="rgb(222,38,12)" rx="2" ry="2" />
<text  x="1074.02" y="735.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="973.0" y="501" width="1.4" height="15.0" fill="rgb(225,139,10)" rx="2" ry="2" />
<text  x="976.04" y="511.5" ></text>
</g>
<g >
<title>clock_gettime (14,492,753 samples, 0.12%)</title><rect x="1167.6" y="789" width="1.4" height="15.0" fill="rgb(207,23,8)" rx="2" ry="2" />
<text  x="1170.60" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ParseContext::ParseMessage (14,492,753 samples, 0.12%)</title><rect x="1023.4" y="741" width="1.4" height="15.0" fill="rgb(221,121,52)" rx="2" ry="2" />
<text  x="1026.43" y="751.5" ></text>
</g>
<g >
<title>TracerUtil::SpliceTraceParent (14,492,753 samples, 0.12%)</title><rect x="686.1" y="581" width="1.4" height="15.0" fill="rgb(254,134,6)" rx="2" ry="2" />
<text  x="689.09" y="591.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="568.5" y="485" width="1.4" height="15.0" fill="rgb(236,198,49)" rx="2" ry="2" />
<text  x="571.51" y="495.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="85.6" y="421" width="1.4" height="15.0" fill="rgb(249,50,4)" rx="2" ry="2" />
<text  x="88.59" y="431.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (202,898,542 samples, 1.66%)</title><rect x="547.5" y="549" width="19.6" height="15.0" fill="rgb(220,215,48)" rx="2" ry="2" />
<text  x="550.51" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="199.0" y="437" width="1.4" height="15.0" fill="rgb(220,32,11)" rx="2" ry="2" />
<text  x="201.97" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;NS_ACO::ThreadID const, int&gt;::pair&lt;NS_ACO::ThreadID const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="903.0" y="533" width="1.4" height="15.0" fill="rgb(218,188,53)" rx="2" ry="2" />
<text  x="906.05" y="543.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="364.1" y="469" width="1.4" height="15.0" fill="rgb(222,203,23)" rx="2" ry="2" />
<text  x="367.14" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (159,420,283 samples, 1.30%)</title><rect x="504.1" y="517" width="15.4" height="15.0" fill="rgb(237,7,6)" rx="2" ry="2" />
<text  x="507.12" y="527.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="942.2" y="437" width="1.4" height="15.0" fill="rgb(216,123,43)" rx="2" ry="2" />
<text  x="945.24" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="446.7" y="485" width="1.4" height="15.0" fill="rgb(226,23,16)" rx="2" ry="2" />
<text  x="449.73" y="495.5" ></text>
</g>
<g >
<title>_IO_vfscanf (86,956,518 samples, 0.71%)</title><rect x="1055.6" y="757" width="8.4" height="15.0" fill="rgb(228,207,1)" rx="2" ry="2" />
<text  x="1058.62" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;std::string const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="695.9" y="453" width="1.4" height="15.0" fill="rgb(248,27,41)" rx="2" ry="2" />
<text  x="698.88" y="463.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (115,942,024 samples, 0.95%)</title><rect x="590.9" y="485" width="11.2" height="15.0" fill="rgb(245,185,17)" rx="2" ry="2" />
<text  x="593.90" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="707.1" y="469" width="1.4" height="15.0" fill="rgb(218,18,47)" rx="2" ry="2" />
<text  x="710.08" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::TraceId::TraceId (14,492,753 samples, 0.12%)</title><rect x="512.5" y="421" width="1.4" height="15.0" fill="rgb(244,167,31)" rx="2" ry="2" />
<text  x="515.51" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="98.2" y="485" width="1.4" height="15.0" fill="rgb(214,110,54)" rx="2" ry="2" />
<text  x="101.19" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="484.5" y="501" width="1.4" height="15.0" fill="rgb(223,131,0)" rx="2" ry="2" />
<text  x="487.52" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (28,985,506 samples, 0.24%)</title><rect x="666.5" y="437" width="2.8" height="15.0" fill="rgb(228,194,44)" rx="2" ry="2" />
<text  x="669.49" y="447.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (14,492,753 samples, 0.12%)</title><rect x="691.7" y="485" width="1.4" height="15.0" fill="rgb(213,70,33)" rx="2" ry="2" />
<text  x="694.68" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::FieldOptions::_internal_weak (14,492,753 samples, 0.12%)</title><rect x="256.4" y="405" width="1.4" height="15.0" fill="rgb(225,9,12)" rx="2" ry="2" />
<text  x="259.36" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="406.1" y="357" width="1.4" height="15.0" fill="rgb(252,119,19)" rx="2" ry="2" />
<text  x="409.13" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, false, false&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="183.6" y="597" width="1.4" height="15.0" fill="rgb(237,41,41)" rx="2" ry="2" />
<text  x="186.57" y="607.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="334.7" y="581" width="1.4" height="15.0" fill="rgb(234,191,46)" rx="2" ry="2" />
<text  x="337.74" y="591.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="366.9" y="421" width="1.4" height="15.0" fill="rgb(243,10,27)" rx="2" ry="2" />
<text  x="369.94" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (188,405,789 samples, 1.54%)</title><rect x="397.7" y="565" width="18.2" height="15.0" fill="rgb(220,56,1)" rx="2" ry="2" />
<text  x="400.73" y="575.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="94.0" y="437" width="1.4" height="15.0" fill="rgb(234,176,37)" rx="2" ry="2" />
<text  x="96.99" y="447.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="176.6" y="581" width="1.4" height="15.0" fill="rgb(225,20,44)" rx="2" ry="2" />
<text  x="179.57" y="591.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (173,913,036 samples, 1.42%)</title><rect x="568.5" y="581" width="16.8" height="15.0" fill="rgb(252,136,25)" rx="2" ry="2" />
<text  x="571.51" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::CreateString (14,492,753 samples, 0.12%)</title><rect x="695.9" y="421" width="1.4" height="15.0" fill="rgb(233,222,5)" rx="2" ry="2" />
<text  x="698.88" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::_M_end (14,492,753 samples, 0.12%)</title><rect x="281.6" y="389" width="1.4" height="15.0" fill="rgb(245,46,35)" rx="2" ry="2" />
<text  x="284.55" y="399.5" ></text>
</g>
<g >
<title>std::string::_M_copy (14,492,753 samples, 0.12%)</title><rect x="642.7" y="437" width="1.4" height="15.0" fill="rgb(235,12,32)" rx="2" ry="2" />
<text  x="645.69" y="447.5" ></text>
</g>
<g >
<title>tbus2::GetPbMsgCmd&lt;tbus2::client::EndpointMsg&gt; (14,492,753 samples, 0.12%)</title><rect x="1127.0" y="741" width="1.4" height="15.0" fill="rgb(245,78,15)" rx="2" ry="2" />
<text  x="1130.01" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="494.3" y="293" width="1.4" height="15.0" fill="rgb(237,39,16)" rx="2" ry="2" />
<text  x="497.32" y="303.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1093.4" y="693" width="1.4" height="15.0" fill="rgb(238,168,41)" rx="2" ry="2" />
<text  x="1096.42" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="578.3" y="389" width="1.4" height="15.0" fill="rgb(212,219,5)" rx="2" ry="2" />
<text  x="581.30" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (289,855,060 samples, 2.37%)</title><rect x="106.6" y="517" width="28.0" height="15.0" fill="rgb(210,78,0)" rx="2" ry="2" />
<text  x="109.58" y="527.5" >g..</text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::CopyKey (14,492,753 samples, 0.12%)</title><rect x="564.3" y="437" width="1.4" height="15.0" fill="rgb(232,194,7)" rx="2" ry="2" />
<text  x="567.31" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="875.1" y="181" width="1.4" height="15.0" fill="rgb(239,154,23)" rx="2" ry="2" />
<text  x="878.05" y="191.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="691.7" y="469" width="1.4" height="15.0" fill="rgb(228,146,23)" rx="2" ry="2" />
<text  x="694.68" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="287.2" y="389" width="1.4" height="15.0" fill="rgb(208,48,6)" rx="2" ry="2" />
<text  x="290.15" y="399.5" ></text>
</g>
<g >
<title>[q_1.dat] (14,492,753 samples, 0.12%)</title><rect x="1143.8" y="757" width="1.4" height="15.0" fill="rgb(230,151,8)" rx="2" ry="2" />
<text  x="1146.81" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="666.5" y="357" width="1.4" height="15.0" fill="rgb(233,10,11)" rx="2" ry="2" />
<text  x="669.49" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindEnumValueByNumber (14,492,753 samples, 0.12%)</title><rect x="357.1" y="501" width="1.4" height="15.0" fill="rgb(222,212,47)" rx="2" ry="2" />
<text  x="360.14" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="868.1" y="341" width="1.4" height="15.0" fill="rgb(240,122,50)" rx="2" ry="2" />
<text  x="871.05" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="663.7" y="389" width="1.4" height="15.0" fill="rgb(233,207,27)" rx="2" ry="2" />
<text  x="666.69" y="399.5" ></text>
</g>
<g >
<title>std::string::_Alloc_hider::_Alloc_hider (14,492,753 samples, 0.12%)</title><rect x="32.4" y="645" width="1.4" height="15.0" fill="rgb(230,154,41)" rx="2" ry="2" />
<text  x="35.40" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="22.6" y="469" width="1.4" height="15.0" fill="rgb(254,15,32)" rx="2" ry="2" />
<text  x="25.60" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="547.5" y="389" width="1.4" height="15.0" fill="rgb(216,209,0)" rx="2" ry="2" />
<text  x="550.51" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="529.3" y="421" width="1.4" height="15.0" fill="rgb(228,184,4)" rx="2" ry="2" />
<text  x="532.31" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="714.1" y="597" width="1.4" height="15.0" fill="rgb(249,140,38)" rx="2" ry="2" />
<text  x="717.08" y="607.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="931.0" y="501" width="1.4" height="15.0" fill="rgb(229,177,47)" rx="2" ry="2" />
<text  x="934.04" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, unsigned long, false&gt;::_S_equals (14,492,753 samples, 0.12%)</title><rect x="484.5" y="453" width="1.4" height="15.0" fill="rgb(213,1,22)" rx="2" ry="2" />
<text  x="487.52" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="67.4" y="357" width="1.4" height="15.0" fill="rgb(217,227,11)" rx="2" ry="2" />
<text  x="70.39" y="367.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="277.4" y="261" width="1.4" height="15.0" fill="rgb(245,88,3)" rx="2" ry="2" />
<text  x="280.35" y="271.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (14,492,753 samples, 0.12%)</title><rect x="1150.8" y="741" width="1.4" height="15.0" fill="rgb(217,14,13)" rx="2" ry="2" />
<text  x="1153.81" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="404.7" y="517" width="1.4" height="15.0" fill="rgb(253,199,1)" rx="2" ry="2" />
<text  x="407.73" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (28,985,506 samples, 0.24%)</title><rect x="581.1" y="533" width="2.8" height="15.0" fill="rgb(214,82,42)" rx="2" ry="2" />
<text  x="584.10" y="543.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="443.9" y="485" width="1.4" height="15.0" fill="rgb(233,107,17)" rx="2" ry="2" />
<text  x="446.93" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="64.6" y="325" width="2.8" height="15.0" fill="rgb(211,221,29)" rx="2" ry="2" />
<text  x="67.59" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14,492,753 samples, 0.12%)</title><rect x="635.7" y="517" width="1.4" height="15.0" fill="rgb(236,71,29)" rx="2" ry="2" />
<text  x="638.69" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::GeneratedMessageFactory::GetPrototype (14,492,753 samples, 0.12%)</title><rect x="656.7" y="437" width="1.4" height="15.0" fill="rgb(219,77,27)" rx="2" ry="2" />
<text  x="659.69" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="80.0" y="501" width="1.4" height="15.0" fill="rgb(253,41,27)" rx="2" ry="2" />
<text  x="82.99" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (28,985,506 samples, 0.24%)</title><rect x="637.1" y="437" width="2.8" height="15.0" fill="rgb(214,167,30)" rx="2" ry="2" />
<text  x="640.09" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="604.9" y="405" width="2.8" height="15.0" fill="rgb(210,108,6)" rx="2" ry="2" />
<text  x="607.90" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="64.6" y="341" width="2.8" height="15.0" fill="rgb(233,189,25)" rx="2" ry="2" />
<text  x="67.59" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="723.9" y="581" width="1.4" height="15.0" fill="rgb(211,168,20)" rx="2" ry="2" />
<text  x="726.88" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="614.7" y="389" width="1.4" height="15.0" fill="rgb(230,147,26)" rx="2" ry="2" />
<text  x="617.70" y="399.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_service (57,971,012 samples, 0.47%)</title><rect x="679.1" y="597" width="5.6" height="15.0" fill="rgb(241,140,13)" rx="2" ry="2" />
<text  x="682.09" y="607.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::InitContext (10,318,840,136 samples, 84.46%)</title><rect x="10.0" y="789" width="996.6" height="15.0" fill="rgb(253,196,30)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >NS_ACO::AcoThread::InitContext</text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (14,492,753 samples, 0.12%)</title><rect x="693.1" y="453" width="1.4" height="15.0" fill="rgb(230,213,19)" rx="2" ry="2" />
<text  x="696.08" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="327.7" y="469" width="1.4" height="15.0" fill="rgb(221,115,16)" rx="2" ry="2" />
<text  x="330.75" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::io::EpsCopyOutputStream::EnsureSpace (14,492,753 samples, 0.12%)</title><rect x="1029.0" y="725" width="1.4" height="15.0" fill="rgb(235,26,42)" rx="2" ry="2" />
<text  x="1032.03" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::ConsumeInsertSilentMarker (14,492,753 samples, 0.12%)</title><rect x="967.4" y="565" width="1.4" height="15.0" fill="rgb(213,65,36)" rx="2" ry="2" />
<text  x="970.44" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="869.5" y="309" width="1.4" height="15.0" fill="rgb(208,144,41)" rx="2" ry="2" />
<text  x="872.45" y="319.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (43,478,259 samples, 0.36%)</title><rect x="386.5" y="565" width="4.2" height="15.0" fill="rgb(252,212,50)" rx="2" ry="2" />
<text  x="389.54" y="575.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="340.3" y="501" width="1.4" height="15.0" fill="rgb(223,216,3)" rx="2" ry="2" />
<text  x="343.34" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="483.1" y="485" width="1.4" height="15.0" fill="rgb(245,129,2)" rx="2" ry="2" />
<text  x="486.12" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_is_leaked (14,492,753 samples, 0.12%)</title><rect x="1155.0" y="709" width="1.4" height="15.0" fill="rgb(253,83,7)" rx="2" ry="2" />
<text  x="1158.01" y="719.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (28,985,506 samples, 0.24%)</title><rect x="155.6" y="469" width="2.8" height="15.0" fill="rgb(226,199,32)" rx="2" ry="2" />
<text  x="158.58" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="495.7" y="149" width="1.4" height="15.0" fill="rgb(240,202,47)" rx="2" ry="2" />
<text  x="498.72" y="159.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;google::protobuf::Descriptor const*, google::protobuf::Message const*, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="968.8" y="533" width="1.4" height="15.0" fill="rgb(215,98,42)" rx="2" ry="2" />
<text  x="971.84" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="674.9" y="485" width="1.4" height="15.0" fill="rgb(219,99,0)" rx="2" ry="2" />
<text  x="677.89" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;NS_ACO::EventID&gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="185.0" y="517" width="1.4" height="15.0" fill="rgb(244,70,27)" rx="2" ry="2" />
<text  x="187.97" y="527.5" ></text>
</g>
<g >
<title>std::string::swap (14,492,753 samples, 0.12%)</title><rect x="1178.8" y="773" width="1.4" height="15.0" fill="rgb(225,117,38)" rx="2" ry="2" />
<text  x="1181.80" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::GetOwningArena (14,492,753 samples, 0.12%)</title><rect x="989.8" y="645" width="1.4" height="15.0" fill="rgb(220,117,48)" rx="2" ry="2" />
<text  x="992.83" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~_Vector_base (14,492,753 samples, 0.12%)</title><rect x="987.0" y="565" width="1.4" height="15.0" fill="rgb(207,96,5)" rx="2" ry="2" />
<text  x="990.03" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstPointerAtOffset&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="928.2" y="517" width="1.4" height="15.0" fill="rgb(239,99,32)" rx="2" ry="2" />
<text  x="931.24" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="672.1" y="277" width="1.4" height="15.0" fill="rgb(251,185,6)" rx="2" ry="2" />
<text  x="675.09" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="308.1" y="389" width="1.4" height="15.0" fill="rgb(212,222,1)" rx="2" ry="2" />
<text  x="311.15" y="399.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="597" width="1.4" height="15.0" fill="rgb(211,14,12)" rx="2" ry="2" />
<text  x="1082.42" y="607.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="960.4" y="549" width="1.4" height="15.0" fill="rgb(227,202,28)" rx="2" ry="2" />
<text  x="963.44" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="407.5" y="501" width="1.4" height="15.0" fill="rgb(212,143,2)" rx="2" ry="2" />
<text  x="410.53" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::Message const*&gt; (28,985,506 samples, 0.24%)</title><rect x="130.4" y="437" width="2.8" height="15.0" fill="rgb(237,123,49)" rx="2" ry="2" />
<text  x="133.38" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::InRealOneof (14,492,753 samples, 0.12%)</title><rect x="953.4" y="549" width="1.4" height="15.0" fill="rgb(209,219,3)" rx="2" ry="2" />
<text  x="956.44" y="559.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="505.5" y="421" width="1.4" height="15.0" fill="rgb(207,146,38)" rx="2" ry="2" />
<text  x="508.52" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="861.1" y="405" width="2.8" height="15.0" fill="rgb(237,4,47)" rx="2" ry="2" />
<text  x="864.06" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (14,492,753 samples, 0.12%)</title><rect x="1073.8" y="709" width="1.4" height="15.0" fill="rgb(232,49,17)" rx="2" ry="2" />
<text  x="1076.82" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="187.8" y="549" width="1.4" height="15.0" fill="rgb(210,162,33)" rx="2" ry="2" />
<text  x="190.77" y="559.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare&lt;false&gt;::__lc&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="586.7" y="373" width="1.4" height="15.0" fill="rgb(237,139,43)" rx="2" ry="2" />
<text  x="589.70" y="383.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="462.1" y="421" width="1.4" height="15.0" fill="rgb(226,213,5)" rx="2" ry="2" />
<text  x="465.12" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="467.7" y="485" width="1.4" height="15.0" fill="rgb(208,48,18)" rx="2" ry="2" />
<text  x="470.72" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::Add (14,492,753 samples, 0.12%)</title><rect x="578.3" y="453" width="1.4" height="15.0" fill="rgb(215,173,47)" rx="2" ry="2" />
<text  x="581.30" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (43,478,259 samples, 0.36%)</title><rect x="166.8" y="501" width="4.2" height="15.0" fill="rgb(232,18,24)" rx="2" ry="2" />
<text  x="169.77" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::SetAttribute (43,478,259 samples, 0.36%)</title><rect x="884.9" y="373" width="4.2" height="15.0" fill="rgb(233,72,13)" rx="2" ry="2" />
<text  x="887.85" y="383.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="629" width="1.4" height="15.0" fill="rgb(235,19,46)" rx="2" ry="2" />
<text  x="1097.82" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="715.5" y="565" width="1.4" height="15.0" fill="rgb(207,72,41)" rx="2" ry="2" />
<text  x="718.48" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (43,478,259 samples, 0.36%)</title><rect x="707.1" y="501" width="4.2" height="15.0" fill="rgb(248,61,48)" rx="2" ry="2" />
<text  x="710.08" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="600.7" y="405" width="1.4" height="15.0" fill="rgb(214,120,8)" rx="2" ry="2" />
<text  x="603.70" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::AddRecordable (14,492,753 samples, 0.12%)</title><rect x="96.8" y="469" width="1.4" height="15.0" fill="rgb(242,200,2)" rx="2" ry="2" />
<text  x="99.79" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="22.6" y="517" width="1.4" height="15.0" fill="rgb(253,175,19)" rx="2" ry="2" />
<text  x="25.60" y="527.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="89.8" y="437" width="1.4" height="15.0" fill="rgb(244,80,48)" rx="2" ry="2" />
<text  x="92.79" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::UnknownFieldSet::Clear (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="693" width="1.4" height="15.0" fill="rgb(231,31,28)" rx="2" ry="2" />
<text  x="1030.63" y="703.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="677" width="1.4" height="15.0" fill="rgb(242,215,28)" rx="2" ry="2" />
<text  x="1082.42" y="687.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="898.8" y="533" width="1.4" height="15.0" fill="rgb(227,163,6)" rx="2" ry="2" />
<text  x="901.85" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="880.7" y="389" width="1.4" height="15.0" fill="rgb(208,51,17)" rx="2" ry="2" />
<text  x="883.65" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="877.9" y="293" width="1.4" height="15.0" fill="rgb(248,116,2)" rx="2" ry="2" />
<text  x="880.85" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="639.9" y="453" width="1.4" height="15.0" fill="rgb(238,95,41)" rx="2" ry="2" />
<text  x="642.89" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="277.4" y="245" width="1.4" height="15.0" fill="rgb(219,87,11)" rx="2" ry="2" />
<text  x="280.35" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="400.5" y="533" width="1.4" height="15.0" fill="rgb(219,37,0)" rx="2" ry="2" />
<text  x="403.53" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="883.5" y="469" width="1.4" height="15.0" fill="rgb(222,33,27)" rx="2" ry="2" />
<text  x="886.45" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="548.9" y="437" width="1.4" height="15.0" fill="rgb(229,10,49)" rx="2" ry="2" />
<text  x="551.91" y="447.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="309.5" y="421" width="1.4" height="15.0" fill="rgb(239,13,26)" rx="2" ry="2" />
<text  x="312.55" y="431.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="1177.4" y="757" width="1.4" height="15.0" fill="rgb(218,158,43)" rx="2" ry="2" />
<text  x="1180.40" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="429.9" y="501" width="1.4" height="15.0" fill="rgb(240,46,7)" rx="2" ry="2" />
<text  x="432.93" y="511.5" ></text>
</g>
<g >
<title>EventParam::OnServiceStart (463,768,096 samples, 3.80%)</title><rect x="855.5" y="581" width="44.7" height="15.0" fill="rgb(239,199,21)" rx="2" ry="2" />
<text  x="858.46" y="591.5" >Even..</text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="365.5" y="517" width="1.4" height="15.0" fill="rgb(238,16,52)" rx="2" ry="2" />
<text  x="368.54" y="527.5" ></text>
</g>
<g >
<title>EventParam::EventParam (14,492,753 samples, 0.12%)</title><rect x="841.5" y="661" width="1.4" height="15.0" fill="rgb(254,152,30)" rx="2" ry="2" />
<text  x="844.46" y="671.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="334.7" y="597" width="1.4" height="15.0" fill="rgb(226,190,20)" rx="2" ry="2" />
<text  x="337.74" y="607.5" ></text>
</g>
<g >
<title>std::string::_M_move (14,492,753 samples, 0.12%)</title><rect x="334.7" y="501" width="1.4" height="15.0" fill="rgb(220,21,39)" rx="2" ry="2" />
<text  x="337.74" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="435.5" y="501" width="1.4" height="15.0" fill="rgb(254,179,32)" rx="2" ry="2" />
<text  x="438.53" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="438.3" y="357" width="1.4" height="15.0" fill="rgb(212,23,5)" rx="2" ry="2" />
<text  x="441.33" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::call_once&lt;std::once_flag&amp;, void  (14,492,753 samples, 0.12%)</title><rect x="204.6" y="453" width="1.4" height="15.0" fill="rgb(239,124,44)" rx="2" ry="2" />
<text  x="207.57" y="463.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="547.5" y="261" width="1.4" height="15.0" fill="rgb(245,213,52)" rx="2" ry="2" />
<text  x="550.51" y="271.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="201.8" y="453" width="1.4" height="15.0" fill="rgb(232,207,39)" rx="2" ry="2" />
<text  x="204.77" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;opentelemetry::v1::trace::Tracer,  (14,492,753 samples, 0.12%)</title><rect x="583.9" y="565" width="1.4" height="15.0" fill="rgb(228,201,17)" rx="2" ry="2" />
<text  x="586.90" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (86,956,518 samples, 0.71%)</title><rect x="870.9" y="421" width="8.4" height="15.0" fill="rgb(233,186,5)" rx="2" ry="2" />
<text  x="873.85" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="1012.2" y="725" width="1.4" height="15.0" fill="rgb(221,79,14)" rx="2" ry="2" />
<text  x="1015.23" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (72,463,765 samples, 0.59%)</title><rect x="166.8" y="549" width="7.0" height="15.0" fill="rgb(220,99,51)" rx="2" ry="2" />
<text  x="169.77" y="559.5" ></text>
</g>
<g >
<title>operator delete (28,985,506 samples, 0.24%)</title><rect x="1185.8" y="757" width="2.8" height="15.0" fill="rgb(251,169,12)" rx="2" ry="2" />
<text  x="1188.80" y="767.5" ></text>
</g>
<g >
<title>std::string::_M_disjunct (14,492,753 samples, 0.12%)</title><rect x="961.8" y="501" width="1.4" height="15.0" fill="rgb(248,95,11)" rx="2" ry="2" />
<text  x="964.84" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::index (14,492,753 samples, 0.12%)</title><rect x="358.5" y="437" width="1.4" height="15.0" fill="rgb(253,224,6)" rx="2" ry="2" />
<text  x="361.54" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteTagToArray (14,492,753 samples, 0.12%)</title><rect x="428.5" y="357" width="1.4" height="15.0" fill="rgb(229,129,1)" rx="2" ry="2" />
<text  x="431.53" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (28,985,506 samples, 0.24%)</title><rect x="436.9" y="549" width="2.8" height="15.0" fill="rgb(243,112,6)" rx="2" ry="2" />
<text  x="439.93" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::NeedsDestroy (14,492,753 samples, 0.12%)</title><rect x="436.9" y="261" width="1.4" height="15.0" fill="rgb(228,165,20)" rx="2" ry="2" />
<text  x="439.93" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InlineGreedyStringParser (28,985,506 samples, 0.24%)</title><rect x="1096.2" y="725" width="2.8" height="15.0" fill="rgb(236,75,4)" rx="2" ry="2" />
<text  x="1099.22" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~_Copy_ctor_base (14,492,753 samples, 0.12%)</title><rect x="390.7" y="517" width="1.4" height="15.0" fill="rgb(248,173,15)" rx="2" ry="2" />
<text  x="393.74" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (28,985,506 samples, 0.24%)</title><rect x="687.5" y="501" width="2.8" height="15.0" fill="rgb(236,192,47)" rx="2" ry="2" />
<text  x="690.49" y="511.5" ></text>
</g>
<g >
<title>__vsnprintf (188,405,789 samples, 1.54%)</title><rect x="1037.4" y="773" width="18.2" height="15.0" fill="rgb(242,25,0)" rx="2" ry="2" />
<text  x="1040.43" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (43,478,259 samples, 0.36%)</title><rect x="106.6" y="485" width="4.2" height="15.0" fill="rgb(231,185,52)" rx="2" ry="2" />
<text  x="109.58" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6,898,550,428 samples, 56.47%)</title><rect x="53.4" y="709" width="666.3" height="15.0" fill="rgb(215,24,40)" rx="2" ry="2" />
<text  x="56.39" y="719.5" >std::function&lt;void </text>
</g>
<g >
<title>std::get&lt;0ul, google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="627.3" y="389" width="1.4" height="15.0" fill="rgb(248,133,15)" rx="2" ry="2" />
<text  x="630.30" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::sdk::trace::Span*,  (14,492,753 samples, 0.12%)</title><rect x="519.5" y="469" width="1.4" height="15.0" fill="rgb(253,141,13)" rx="2" ry="2" />
<text  x="522.51" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;int, int, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="847.1" y="645" width="1.4" height="15.0" fill="rgb(222,186,18)" rx="2" ry="2" />
<text  x="850.06" y="655.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="667.9" y="389" width="1.4" height="15.0" fill="rgb(253,28,50)" rx="2" ry="2" />
<text  x="670.89" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (28,985,506 samples, 0.24%)</title><rect x="873.7" y="309" width="2.8" height="15.0" fill="rgb(233,81,34)" rx="2" ry="2" />
<text  x="876.65" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="348.7" y="517" width="1.4" height="15.0" fill="rgb(241,58,4)" rx="2" ry="2" />
<text  x="351.74" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="438.3" y="341" width="1.4" height="15.0" fill="rgb(249,66,1)" rx="2" ry="2" />
<text  x="441.33" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="693.1" y="325" width="1.4" height="15.0" fill="rgb(219,229,31)" rx="2" ry="2" />
<text  x="696.08" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (188,405,789 samples, 1.54%)</title><rect x="397.7" y="613" width="18.2" height="15.0" fill="rgb(222,27,43)" rx="2" ry="2" />
<text  x="400.73" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="863.9" y="357" width="1.4" height="15.0" fill="rgb(235,24,17)" rx="2" ry="2" />
<text  x="866.86" y="367.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (14,492,753 samples, 0.12%)</title><rect x="585.3" y="613" width="1.4" height="15.0" fill="rgb(208,193,23)" rx="2" ry="2" />
<text  x="588.30" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="495.7" y="261" width="1.4" height="15.0" fill="rgb(242,153,19)" rx="2" ry="2" />
<text  x="498.72" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="403.3" y="517" width="1.4" height="15.0" fill="rgb(249,146,35)" rx="2" ry="2" />
<text  x="406.33" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="382.3" y="533" width="1.4" height="15.0" fill="rgb(223,178,53)" rx="2" ry="2" />
<text  x="385.34" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map (14,492,753 samples, 0.12%)</title><rect x="19.8" y="549" width="1.4" height="15.0" fill="rgb(254,159,3)" rx="2" ry="2" />
<text  x="22.80" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InlineGreedyStringParser (14,492,753 samples, 0.12%)</title><rect x="1022.0" y="741" width="1.4" height="15.0" fill="rgb(239,89,37)" rx="2" ry="2" />
<text  x="1025.03" y="751.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="635.7" y="405" width="1.4" height="15.0" fill="rgb(220,191,47)" rx="2" ry="2" />
<text  x="638.69" y="415.5" ></text>
</g>
<g >
<title>[unknown] (28,985,506 samples, 0.24%)</title><rect x="1006.6" y="773" width="2.8" height="15.0" fill="rgb(233,73,46)" rx="2" ry="2" />
<text  x="1009.63" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;msg::ServerPkgHead&gt; (14,492,753 samples, 0.12%)</title><rect x="102.4" y="549" width="1.4" height="15.0" fill="rgb(247,10,41)" rx="2" ry="2" />
<text  x="105.38" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="875.1" y="149" width="1.4" height="15.0" fill="rgb(243,172,42)" rx="2" ry="2" />
<text  x="878.05" y="159.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::~Span (14,492,753 samples, 0.12%)</title><rect x="519.5" y="437" width="1.4" height="15.0" fill="rgb(245,90,43)" rx="2" ry="2" />
<text  x="522.51" y="447.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="1068.2" y="709" width="1.4" height="15.0" fill="rgb(248,197,8)" rx="2" ry="2" />
<text  x="1071.22" y="719.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead_TraceHeaderEntry_DoNotUse::~ServerPkgHead_TraceHeaderEntry_DoNotUse (28,985,506 samples, 0.24%)</title><rect x="1010.8" y="773" width="2.8" height="15.0" fill="rgb(239,227,22)" rx="2" ry="2" />
<text  x="1013.83" y="783.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="618.9" y="261" width="1.4" height="15.0" fill="rgb(221,19,52)" rx="2" ry="2" />
<text  x="621.90" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="245.2" y="357" width="1.4" height="15.0" fill="rgb(222,87,15)" rx="2" ry="2" />
<text  x="248.16" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (86,956,518 samples, 0.71%)</title><rect x="870.9" y="469" width="8.4" height="15.0" fill="rgb(241,24,0)" rx="2" ry="2" />
<text  x="873.85" y="479.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="431.3" y="517" width="2.8" height="15.0" fill="rgb(224,59,36)" rx="2" ry="2" />
<text  x="434.33" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="869.5" y="405" width="1.4" height="15.0" fill="rgb(229,23,27)" rx="2" ry="2" />
<text  x="872.45" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="547.5" y="341" width="1.4" height="15.0" fill="rgb(216,175,16)" rx="2" ry="2" />
<text  x="550.51" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::InternalMetadata (14,492,753 samples, 0.12%)</title><rect x="597.9" y="405" width="1.4" height="15.0" fill="rgb(207,151,1)" rx="2" ry="2" />
<text  x="600.90" y="415.5" ></text>
</g>
<g >
<title>tbus2::client::EndpointMsg::EndpointMsg (14,492,753 samples, 0.12%)</title><rect x="1135.4" y="741" width="1.4" height="15.0" fill="rgb(243,152,6)" rx="2" ry="2" />
<text  x="1138.41" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedCtor (14,492,753 samples, 0.12%)</title><rect x="884.9" y="213" width="1.4" height="15.0" fill="rgb(216,128,3)" rx="2" ry="2" />
<text  x="887.85" y="223.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service (28,985,506 samples, 0.24%)</title><rect x="485.9" y="533" width="2.8" height="15.0" fill="rgb(221,154,45)" rx="2" ry="2" />
<text  x="488.92" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="77.2" y="437" width="1.4" height="15.0" fill="rgb(245,157,22)" rx="2" ry="2" />
<text  x="80.19" y="447.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::AddParam (492,753,602 samples, 4.03%)</title><rect x="855.5" y="613" width="47.5" height="15.0" fill="rgb(211,140,49)" rx="2" ry="2" />
<text  x="858.46" y="623.5" >NS_A..</text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="494.3" y="133" width="1.4" height="15.0" fill="rgb(219,137,26)" rx="2" ry="2" />
<text  x="497.32" y="143.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt32 (28,985,506 samples, 0.24%)</title><rect x="301.2" y="437" width="2.8" height="15.0" fill="rgb(205,101,32)" rx="2" ry="2" />
<text  x="304.15" y="447.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="330.5" y="501" width="1.4" height="15.0" fill="rgb(232,30,14)" rx="2" ry="2" />
<text  x="333.55" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (115,942,024 samples, 0.95%)</title><rect x="702.9" y="581" width="11.2" height="15.0" fill="rgb(231,205,31)" rx="2" ry="2" />
<text  x="705.88" y="591.5" ></text>
</g>
<g >
<title>clock_gettime (14,492,753 samples, 0.12%)</title><rect x="698.7" y="501" width="1.4" height="15.0" fill="rgb(252,82,0)" rx="2" ry="2" />
<text  x="701.68" y="511.5" ></text>
</g>
<g >
<title>SExternalTalentAddPointReq::DoAddTalentPointReq (2,072,463,679 samples, 16.96%)</title><rect x="476.1" y="661" width="200.2" height="15.0" fill="rgb(254,194,46)" rx="2" ry="2" />
<text  x="479.12" y="671.5" >SExternalTalentAddPointReq..</text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (86,956,518 samples, 0.71%)</title><rect x="252.2" y="453" width="8.4" height="15.0" fill="rgb(208,13,36)" rx="2" ry="2" />
<text  x="255.16" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::GetCurrentSpan (14,492,753 samples, 0.12%)</title><rect x="894.7" y="469" width="1.3" height="15.0" fill="rgb(225,144,23)" rx="2" ry="2" />
<text  x="897.65" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="693.1" y="309" width="1.4" height="15.0" fill="rgb(208,191,34)" rx="2" ry="2" />
<text  x="696.08" y="319.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="502.7" y="325" width="1.4" height="15.0" fill="rgb(231,120,47)" rx="2" ry="2" />
<text  x="505.72" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (28,985,506 samples, 0.24%)</title><rect x="547.5" y="469" width="2.8" height="15.0" fill="rgb(214,226,46)" rx="2" ry="2" />
<text  x="550.51" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="693.1" y="341" width="1.4" height="15.0" fill="rgb(254,181,22)" rx="2" ry="2" />
<text  x="696.08" y="351.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="199.0" y="421" width="1.4" height="15.0" fill="rgb(246,117,42)" rx="2" ry="2" />
<text  x="201.97" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (14,492,753 samples, 0.12%)</title><rect x="614.7" y="453" width="1.4" height="15.0" fill="rgb(231,78,4)" rx="2" ry="2" />
<text  x="617.70" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMessageInternal&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="578.3" y="373" width="1.4" height="15.0" fill="rgb(205,112,5)" rx="2" ry="2" />
<text  x="581.30" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::max_size (14,492,753 samples, 0.12%)</title><rect x="933.8" y="501" width="1.4" height="15.0" fill="rgb(213,197,36)" rx="2" ry="2" />
<text  x="936.84" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="667.9" y="277" width="1.4" height="15.0" fill="rgb(226,183,43)" rx="2" ry="2" />
<text  x="670.89" y="287.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="441.1" y="373" width="1.4" height="15.0" fill="rgb(240,14,12)" rx="2" ry="2" />
<text  x="444.13" y="383.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="158.4" y="517" width="1.4" height="15.0" fill="rgb(217,47,18)" rx="2" ry="2" />
<text  x="161.37" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a2&lt;true, __gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="437" width="1.4" height="15.0" fill="rgb(242,98,49)" rx="2" ry="2" />
<text  x="344.74" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="501" width="1.4" height="15.0" fill="rgb(242,7,13)" rx="2" ry="2" />
<text  x="935.44" y="511.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="408.9" y="437" width="1.4" height="15.0" fill="rgb(243,102,38)" rx="2" ry="2" />
<text  x="411.93" y="447.5" ></text>
</g>
<g >
<title>RPC::RPCNotify (391,304,331 samples, 3.20%)</title><rect x="677.7" y="629" width="37.8" height="15.0" fill="rgb(226,50,43)" rx="2" ry="2" />
<text  x="680.69" y="639.5" >RPC..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;::_M_v (14,492,753 samples, 0.12%)</title><rect x="585.3" y="501" width="1.4" height="15.0" fill="rgb(253,124,4)" rx="2" ry="2" />
<text  x="588.30" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;google::protobuf::Message const*&gt; &gt;::construct&lt;google::protobuf::Message const*, google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="565.7" y="389" width="1.4" height="15.0" fill="rgb(250,98,30)" rx="2" ry="2" />
<text  x="568.71" y="399.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::WaitEvent (28,985,506 samples, 0.24%)</title><rect x="544.7" y="549" width="2.8" height="15.0" fill="rgb(242,36,43)" rx="2" ry="2" />
<text  x="547.71" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::MapKey::~MapKey (14,492,753 samples, 0.12%)</title><rect x="411.7" y="501" width="1.4" height="15.0" fill="rgb(213,101,40)" rx="2" ry="2" />
<text  x="414.73" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_v (14,492,753 samples, 0.12%)</title><rect x="187.8" y="501" width="1.4" height="15.0" fill="rgb(245,220,10)" rx="2" ry="2" />
<text  x="190.77" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;int, MetricsObj&lt;prometheus::Counter&gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, MetricsObj&lt;prometheus::Counter&gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="383.7" y="565" width="1.4" height="15.0" fill="rgb(236,72,15)" rx="2" ry="2" />
<text  x="386.74" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;int&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="548.9" y="389" width="1.4" height="15.0" fill="rgb(217,200,33)" rx="2" ry="2" />
<text  x="551.91" y="399.5" ></text>
</g>
<g >
<title>RPC::RPCSync&lt;msg::DBBatchGetRes, RPC::DB::DBEp&gt; (1,101,449,228 samples, 9.02%)</title><rect x="478.9" y="613" width="106.4" height="15.0" fill="rgb(245,118,52)" rx="2" ry="2" />
<text  x="481.92" y="623.5" >RPC::RPCSync&lt;..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="432.7" y="469" width="1.4" height="15.0" fill="rgb(226,91,34)" rx="2" ry="2" />
<text  x="435.73" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::MapIterator::MapIterator (14,492,753 samples, 0.12%)</title><rect x="414.5" y="501" width="1.4" height="15.0" fill="rgb(209,107,40)" rx="2" ry="2" />
<text  x="417.53" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MutableField&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="975.8" y="533" width="1.4" height="15.0" fill="rgb(252,228,50)" rx="2" ry="2" />
<text  x="978.84" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (28,985,506 samples, 0.24%)</title><rect x="449.5" y="485" width="2.8" height="15.0" fill="rgb(214,135,34)" rx="2" ry="2" />
<text  x="452.53" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;NS_ACO::EventID, NS_ACO::EventID, std::_Identity&lt;NS_ACO::EventID&gt;, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;::_M_drop_node (28,985,506 samples, 0.24%)</title><rect x="185.0" y="549" width="2.8" height="15.0" fill="rgb(235,169,7)" rx="2" ry="2" />
<text  x="187.97" y="559.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="336.1" y="549" width="1.4" height="15.0" fill="rgb(249,14,40)" rx="2" ry="2" />
<text  x="339.14" y="559.5" ></text>
</g>
<g >
<title>[unknown] (28,985,506 samples, 0.24%)</title><rect x="1149.4" y="757" width="2.8" height="15.0" fill="rgb(236,209,7)" rx="2" ry="2" />
<text  x="1152.41" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="673.5" y="485" width="1.4" height="15.0" fill="rgb(234,14,35)" rx="2" ry="2" />
<text  x="676.49" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="480.3" y="533" width="1.4" height="15.0" fill="rgb(245,125,50)" rx="2" ry="2" />
<text  x="483.32" y="543.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;google::protobuf::Symbol, google::protobuf::(anonymous namespace)::FieldsByNumberHash, google::protobuf::(anonymous namespace)::FieldsByNumberEq, std::allocator&lt;google::protobuf::Symbol&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="406.1" y="485" width="1.4" height="15.0" fill="rgb(225,11,12)" rx="2" ry="2" />
<text  x="409.13" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="386.5" y="325" width="1.4" height="15.0" fill="rgb(238,55,51)" rx="2" ry="2" />
<text  x="389.54" y="335.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::Schedule (14,492,753 samples, 0.12%)</title><rect x="732.3" y="677" width="1.4" height="15.0" fill="rgb(210,218,7)" rx="2" ry="2" />
<text  x="735.28" y="687.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (28,985,506 samples, 0.24%)</title><rect x="495.7" y="341" width="2.8" height="15.0" fill="rgb(231,168,25)" rx="2" ry="2" />
<text  x="498.72" y="351.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="414.5" y="453" width="1.4" height="15.0" fill="rgb(206,144,38)" rx="2" ry="2" />
<text  x="417.53" y="463.5" ></text>
</g>
<g >
<title>EventParam::ParseBodyTo&lt;msg::DBBatchGetRes&gt; (14,492,753 samples, 0.12%)</title><rect x="54.8" y="645" width="1.4" height="15.0" fill="rgb(211,37,9)" rx="2" ry="2" />
<text  x="57.79" y="655.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="436.9" y="373" width="1.4" height="15.0" fill="rgb(212,112,34)" rx="2" ry="2" />
<text  x="439.93" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstPointerAtOffset&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="452.3" y="469" width="1.4" height="15.0" fill="rgb(219,127,1)" rx="2" ry="2" />
<text  x="455.33" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="691.7" y="405" width="1.4" height="15.0" fill="rgb(229,94,40)" rx="2" ry="2" />
<text  x="694.68" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (14,492,753 samples, 0.12%)</title><rect x="723.9" y="629" width="1.4" height="15.0" fill="rgb(226,225,7)" rx="2" ry="2" />
<text  x="726.88" y="639.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::Message const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="474.7" y="485" width="1.4" height="15.0" fill="rgb(216,57,17)" rx="2" ry="2" />
<text  x="477.72" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="690.3" y="485" width="1.4" height="15.0" fill="rgb(250,177,15)" rx="2" ry="2" />
<text  x="693.28" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;int, int, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="992.6" y="661" width="1.4" height="15.0" fill="rgb(205,212,7)" rx="2" ry="2" />
<text  x="995.63" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRepeatedMessage (14,492,753 samples, 0.12%)</title><rect x="21.2" y="597" width="1.4" height="15.0" fill="rgb(245,227,26)" rx="2" ry="2" />
<text  x="24.20" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::FieldSize (14,492,753 samples, 0.12%)</title><rect x="250.8" y="453" width="1.4" height="15.0" fill="rgb(218,148,41)" rx="2" ry="2" />
<text  x="253.76" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="547.5" y="437" width="1.4" height="15.0" fill="rgb(239,76,30)" rx="2" ry="2" />
<text  x="550.51" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (43,478,259 samples, 0.36%)</title><rect x="861.1" y="437" width="4.2" height="15.0" fill="rgb(225,134,5)" rx="2" ry="2" />
<text  x="864.06" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InlineGreedyStringParser (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="725" width="1.4" height="15.0" fill="rgb(240,112,38)" rx="2" ry="2" />
<text  x="1082.42" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="103.8" y="437" width="1.4" height="15.0" fill="rgb(209,151,49)" rx="2" ry="2" />
<text  x="106.78" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::ForEachKeyValue (14,492,753 samples, 0.12%)</title><rect x="89.8" y="485" width="1.4" height="15.0" fill="rgb(226,47,45)" rx="2" ry="2" />
<text  x="92.79" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (28,985,506 samples, 0.24%)</title><rect x="434.1" y="533" width="2.8" height="15.0" fill="rgb(244,128,49)" rx="2" ry="2" />
<text  x="437.13" y="543.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="691.7" y="293" width="1.4" height="15.0" fill="rgb(214,120,28)" rx="2" ry="2" />
<text  x="694.68" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, NS_ACO::ThreadID const, int&gt; (14,492,753 samples, 0.12%)</title><rect x="484.5" y="437" width="1.4" height="15.0" fill="rgb(251,20,21)" rx="2" ry="2" />
<text  x="487.52" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="473.3" y="501" width="1.4" height="15.0" fill="rgb(237,96,8)" rx="2" ry="2" />
<text  x="476.32" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="148.6" y="373" width="1.4" height="15.0" fill="rgb(219,87,15)" rx="2" ry="2" />
<text  x="151.58" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (130,434,777 samples, 1.07%)</title><rect x="883.5" y="517" width="12.5" height="15.0" fill="rgb(209,64,35)" rx="2" ry="2" />
<text  x="886.45" y="527.5" ></text>
</g>
<g >
<title>AcoContext::OnRequest (43,478,259 samples, 0.36%)</title><rect x="904.4" y="645" width="4.2" height="15.0" fill="rgb(245,12,2)" rx="2" ry="2" />
<text  x="907.45" y="655.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (14,492,753 samples, 0.12%)</title><rect x="443.9" y="597" width="1.4" height="15.0" fill="rgb(247,116,9)" rx="2" ry="2" />
<text  x="446.93" y="607.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="408.9" y="469" width="1.4" height="15.0" fill="rgb(242,201,45)" rx="2" ry="2" />
<text  x="411.93" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="509.7" y="453" width="1.4" height="15.0" fill="rgb(217,80,41)" rx="2" ry="2" />
<text  x="512.72" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_internal_add_spans (14,492,753 samples, 0.12%)</title><rect x="694.5" y="485" width="1.4" height="15.0" fill="rgb(205,198,7)" rx="2" ry="2" />
<text  x="697.48" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="861.1" y="389" width="2.8" height="15.0" fill="rgb(217,74,38)" rx="2" ry="2" />
<text  x="864.06" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (28,985,506 samples, 0.24%)</title><rect x="106.6" y="469" width="2.8" height="15.0" fill="rgb(251,184,23)" rx="2" ry="2" />
<text  x="109.58" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="581.1" y="485" width="1.4" height="15.0" fill="rgb(208,227,35)" rx="2" ry="2" />
<text  x="584.10" y="495.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="77.2" y="485" width="2.8" height="15.0" fill="rgb(228,63,14)" rx="2" ry="2" />
<text  x="80.19" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="912.8" y="533" width="1.4" height="15.0" fill="rgb(239,35,18)" rx="2" ry="2" />
<text  x="915.85" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::(anonymous namespace)::NowOr (14,492,753 samples, 0.12%)</title><rect x="91.2" y="485" width="1.4" height="15.0" fill="rgb(227,64,7)" rx="2" ry="2" />
<text  x="94.19" y="495.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="463.5" y="421" width="1.4" height="15.0" fill="rgb(216,186,45)" rx="2" ry="2" />
<text  x="466.52" y="431.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="613.3" y="437" width="1.4" height="15.0" fill="rgb(232,109,53)" rx="2" ry="2" />
<text  x="616.30" y="447.5" ></text>
</g>
<g >
<title>vtable for google::protobuf::internal::MapField&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (28,985,506 samples, 0.24%)</title><rect x="1185.8" y="789" width="2.8" height="15.0" fill="rgb(222,66,41)" rx="2" ry="2" />
<text  x="1188.80" y="799.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (260,869,554 samples, 2.14%)</title><rect x="64.6" y="533" width="25.2" height="15.0" fill="rgb(239,7,16)" rx="2" ry="2" />
<text  x="67.59" y="543.5" >o..</text>
</g>
<g >
<title>clock_gettime (57,971,012 samples, 0.47%)</title><rect x="775.7" y="645" width="5.6" height="15.0" fill="rgb(240,5,7)" rx="2" ry="2" />
<text  x="778.67" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::string const, std::string&gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (14,492,753 samples, 0.12%)</title><rect x="635.7" y="501" width="1.4" height="15.0" fill="rgb(222,79,12)" rx="2" ry="2" />
<text  x="638.69" y="511.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (130,434,777 samples, 1.07%)</title><rect x="491.5" y="485" width="12.6" height="15.0" fill="rgb(240,148,50)" rx="2" ry="2" />
<text  x="494.52" y="495.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (144,927,530 samples, 1.19%)</title><rect x="234.0" y="437" width="14.0" height="15.0" fill="rgb(227,154,49)" rx="2" ry="2" />
<text  x="236.96" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (1,347,826,029 samples, 11.03%)</title><rect x="200.4" y="533" width="130.1" height="15.0" fill="rgb(239,121,3)" rx="2" ry="2" />
<text  x="203.37" y="543.5" >google::protobuf..</text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="501" width="1.4" height="15.0" fill="rgb(214,145,28)" rx="2" ry="2" />
<text  x="344.74" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (14,492,753 samples, 0.12%)</title><rect x="645.5" y="453" width="1.4" height="15.0" fill="rgb(205,161,34)" rx="2" ry="2" />
<text  x="648.49" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Descriptor const*, std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="630.1" y="389" width="1.4" height="15.0" fill="rgb(225,58,43)" rx="2" ry="2" />
<text  x="633.09" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="67.4" y="421" width="1.4" height="15.0" fill="rgb(217,72,19)" rx="2" ry="2" />
<text  x="70.39" y="431.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service (14,492,753 samples, 0.12%)</title><rect x="140.2" y="581" width="1.4" height="15.0" fill="rgb(207,18,17)" rx="2" ry="2" />
<text  x="143.18" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="434.1" y="517" width="2.8" height="15.0" fill="rgb(229,2,39)" rx="2" ry="2" />
<text  x="437.13" y="527.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="333.3" y="533" width="1.4" height="15.0" fill="rgb(236,35,54)" rx="2" ry="2" />
<text  x="336.35" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::string, std::allocator&lt;std::string&gt; &gt;::_M_allocate (28,985,506 samples, 0.24%)</title><rect x="994.0" y="629" width="2.8" height="15.0" fill="rgb(253,128,23)" rx="2" ry="2" />
<text  x="997.03" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (43,478,259 samples, 0.36%)</title><rect x="64.6" y="485" width="4.2" height="15.0" fill="rgb(244,210,39)" rx="2" ry="2" />
<text  x="67.59" y="495.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="693" width="1.4" height="15.0" fill="rgb(248,125,51)" rx="2" ry="2" />
<text  x="1097.82" y="703.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="613" width="1.4" height="15.0" fill="rgb(249,18,5)" rx="2" ry="2" />
<text  x="1030.63" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::Span,  (14,492,753 samples, 0.12%)</title><rect x="99.6" y="485" width="1.4" height="15.0" fill="rgb(239,214,7)" rx="2" ry="2" />
<text  x="102.58" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="122.0" y="469" width="1.4" height="15.0" fill="rgb(210,120,15)" rx="2" ry="2" />
<text  x="124.98" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (28,985,506 samples, 0.24%)</title><rect x="611.9" y="469" width="2.8" height="15.0" fill="rgb(208,121,20)" rx="2" ry="2" />
<text  x="614.90" y="479.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (217,391,295 samples, 1.78%)</title><rect x="520.9" y="549" width="21.0" height="15.0" fill="rgb(219,217,54)" rx="2" ry="2" />
<text  x="523.91" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (14,492,753 samples, 0.12%)</title><rect x="189.2" y="565" width="1.4" height="15.0" fill="rgb(207,110,33)" rx="2" ry="2" />
<text  x="192.17" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="695.9" y="485" width="1.4" height="15.0" fill="rgb(205,54,19)" rx="2" ry="2" />
<text  x="698.88" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="687.5" y="373" width="1.4" height="15.0" fill="rgb(239,6,21)" rx="2" ry="2" />
<text  x="690.49" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (72,463,765 samples, 0.59%)</title><rect x="271.8" y="437" width="7.0" height="15.0" fill="rgb(221,8,4)" rx="2" ry="2" />
<text  x="274.76" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (115,942,024 samples, 0.95%)</title><rect x="569.9" y="533" width="11.2" height="15.0" fill="rgb(245,8,39)" rx="2" ry="2" />
<text  x="572.91" y="543.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::OnEnterSchedule (130,434,777 samples, 1.07%)</title><rect x="751.9" y="661" width="12.6" height="15.0" fill="rgb(247,42,26)" rx="2" ry="2" />
<text  x="754.87" y="671.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (14,492,753 samples, 0.12%)</title><rect x="1117.2" y="741" width="1.4" height="15.0" fill="rgb(244,84,25)" rx="2" ry="2" />
<text  x="1120.21" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_Vector_base (14,492,753 samples, 0.12%)</title><rect x="269.0" y="405" width="1.4" height="15.0" fill="rgb(243,16,15)" rx="2" ry="2" />
<text  x="271.96" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="928.2" y="549" width="1.4" height="15.0" fill="rgb(235,197,5)" rx="2" ry="2" />
<text  x="931.24" y="559.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="120.6" y="389" width="1.4" height="15.0" fill="rgb(246,113,2)" rx="2" ry="2" />
<text  x="123.58" y="399.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="557.3" y="341" width="1.4" height="15.0" fill="rgb(243,82,31)" rx="2" ry="2" />
<text  x="560.31" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="597.9" y="469" width="1.4" height="15.0" fill="rgb(206,52,47)" rx="2" ry="2" />
<text  x="600.90" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="260.6" y="437" width="1.4" height="15.0" fill="rgb(247,27,35)" rx="2" ry="2" />
<text  x="263.56" y="447.5" ></text>
</g>
<g >
<title>parse_tzname (14,492,753 samples, 0.12%)</title><rect x="1101.8" y="773" width="1.4" height="15.0" fill="rgb(217,216,24)" rx="2" ry="2" />
<text  x="1104.81" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::FindPtrOrNull&lt;std::unordered_map&lt;google::protobuf::Descriptor const*, google::protobuf::Message const*, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="630.1" y="421" width="1.4" height="15.0" fill="rgb(248,6,34)" rx="2" ry="2" />
<text  x="633.09" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::DefaultSpan::~DefaultSpan (14,492,753 samples, 0.12%)</title><rect x="701.5" y="421" width="1.4" height="15.0" fill="rgb(223,199,25)" rx="2" ry="2" />
<text  x="704.48" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="639.9" y="437" width="1.4" height="15.0" fill="rgb(213,102,6)" rx="2" ry="2" />
<text  x="642.89" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (14,492,753 samples, 0.12%)</title><rect x="519.5" y="485" width="1.4" height="15.0" fill="rgb(207,89,26)" rx="2" ry="2" />
<text  x="522.51" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::RuntimeContext::GetValue (14,492,753 samples, 0.12%)</title><rect x="894.7" y="453" width="1.3" height="15.0" fill="rgb(249,207,25)" rx="2" ry="2" />
<text  x="897.65" y="463.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="201.8" y="437" width="1.4" height="15.0" fill="rgb(245,158,38)" rx="2" ry="2" />
<text  x="204.77" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::New (14,492,753 samples, 0.12%)</title><rect x="578.3" y="405" width="1.4" height="15.0" fill="rgb(252,126,33)" rx="2" ry="2" />
<text  x="581.30" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::isprint (14,492,753 samples, 0.12%)</title><rect x="323.5" y="437" width="1.4" height="15.0" fill="rgb(242,209,21)" rx="2" ry="2" />
<text  x="326.55" y="447.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="942.2" y="453" width="1.4" height="15.0" fill="rgb(225,19,25)" rx="2" ry="2" />
<text  x="945.24" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="709.9" y="485" width="1.4" height="15.0" fill="rgb(240,60,29)" rx="2" ry="2" />
<text  x="712.88" y="495.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="85.6" y="357" width="1.4" height="15.0" fill="rgb(240,184,38)" rx="2" ry="2" />
<text  x="88.59" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (28,985,506 samples, 0.24%)</title><rect x="522.3" y="469" width="2.8" height="15.0" fill="rgb(227,220,4)" rx="2" ry="2" />
<text  x="525.31" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="600.7" y="325" width="1.4" height="15.0" fill="rgb(240,170,48)" rx="2" ry="2" />
<text  x="603.70" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::SetString (14,492,753 samples, 0.12%)</title><rect x="711.3" y="469" width="1.4" height="15.0" fill="rgb(219,208,53)" rx="2" ry="2" />
<text  x="714.28" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::string*, std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="996.8" y="645" width="1.4" height="15.0" fill="rgb(212,219,16)" rx="2" ry="2" />
<text  x="999.83" y="655.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="28.2" y="533" width="1.4" height="15.0" fill="rgb(236,121,31)" rx="2" ry="2" />
<text  x="31.20" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::Context::GetValue (14,492,753 samples, 0.12%)</title><rect x="894.7" y="437" width="1.3" height="15.0" fill="rgb(237,147,2)" rx="2" ry="2" />
<text  x="897.65" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::PrintMaybeWithMarker (14,492,753 samples, 0.12%)</title><rect x="628.7" y="453" width="1.4" height="15.0" fill="rgb(233,157,7)" rx="2" ry="2" />
<text  x="631.70" y="463.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="365.5" y="469" width="1.4" height="15.0" fill="rgb(214,66,0)" rx="2" ry="2" />
<text  x="368.54" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="411.7" y="453" width="1.4" height="15.0" fill="rgb(246,176,48)" rx="2" ry="2" />
<text  x="414.73" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (14,492,753 samples, 0.12%)</title><rect x="602.1" y="501" width="1.4" height="15.0" fill="rgb(234,83,0)" rx="2" ry="2" />
<text  x="605.10" y="511.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_meta] (43,478,259 samples, 0.36%)</title><rect x="1132.6" y="757" width="4.2" height="15.0" fill="rgb(235,183,42)" rx="2" ry="2" />
<text  x="1135.61" y="767.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="561.5" y="309" width="1.4" height="15.0" fill="rgb(212,69,36)" rx="2" ry="2" />
<text  x="564.51" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="277.4" y="213" width="1.4" height="15.0" fill="rgb(232,76,7)" rx="2" ry="2" />
<text  x="280.35" y="223.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="662.3" y="421" width="2.8" height="15.0" fill="rgb(240,46,29)" rx="2" ry="2" />
<text  x="665.29" y="431.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::ThreadEntry_Daemon (28,985,506 samples, 0.24%)</title><rect x="1003.8" y="725" width="2.8" height="15.0" fill="rgb(219,203,8)" rx="2" ry="2" />
<text  x="1006.83" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (14,492,753 samples, 0.12%)</title><rect x="140.2" y="549" width="1.4" height="15.0" fill="rgb(227,163,24)" rx="2" ry="2" />
<text  x="143.18" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="124.8" y="453" width="1.4" height="15.0" fill="rgb(226,55,13)" rx="2" ry="2" />
<text  x="127.78" y="463.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolHistogram (14,492,753 samples, 0.12%)</title><rect x="11.4" y="629" width="1.4" height="15.0" fill="rgb(205,184,12)" rx="2" ry="2" />
<text  x="14.40" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="288.6" y="405" width="1.4" height="15.0" fill="rgb(241,220,34)" rx="2" ry="2" />
<text  x="291.55" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (14,492,753 samples, 0.12%)</title><rect x="415.9" y="645" width="1.4" height="15.0" fill="rgb(230,54,24)" rx="2" ry="2" />
<text  x="418.93" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="716.9" y="485" width="1.4" height="15.0" fill="rgb(253,199,49)" rx="2" ry="2" />
<text  x="719.88" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="687.5" y="437" width="2.8" height="15.0" fill="rgb(217,33,23)" rx="2" ry="2" />
<text  x="690.49" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (188,405,789 samples, 1.54%)</title><rect x="425.7" y="597" width="18.2" height="15.0" fill="rgb(231,54,9)" rx="2" ry="2" />
<text  x="428.73" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="348.7" y="485" width="1.4" height="15.0" fill="rgb(235,110,29)" rx="2" ry="2" />
<text  x="351.74" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="491.5" y="325" width="1.4" height="15.0" fill="rgb(223,23,46)" rx="2" ry="2" />
<text  x="494.52" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::SystemTimestamp::SystemTimestamp (14,492,753 samples, 0.12%)</title><rect x="508.3" y="437" width="1.4" height="15.0" fill="rgb(207,229,28)" rx="2" ry="2" />
<text  x="511.32" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="462.1" y="341" width="1.4" height="15.0" fill="rgb(242,24,31)" rx="2" ry="2" />
<text  x="465.12" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (246,376,801 samples, 2.02%)</title><rect x="859.7" y="533" width="23.8" height="15.0" fill="rgb(209,172,48)" rx="2" ry="2" />
<text  x="862.66" y="543.5" >o..</text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::~AnyValue (14,492,753 samples, 0.12%)</title><rect x="494.3" y="117" width="1.4" height="15.0" fill="rgb(247,86,38)" rx="2" ry="2" />
<text  x="497.32" y="127.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (14,492,753 samples, 0.12%)</title><rect x="446.7" y="581" width="1.4" height="15.0" fill="rgb(236,51,28)" rx="2" ry="2" />
<text  x="449.73" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;google::protobuf::FieldDescriptor const*&gt;::construct&lt;google::protobuf::FieldDescriptor const*, google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="22.6" y="485" width="1.4" height="15.0" fill="rgb(208,0,7)" rx="2" ry="2" />
<text  x="25.60" y="495.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="196.2" y="501" width="1.4" height="15.0" fill="rgb(246,130,33)" rx="2" ry="2" />
<text  x="199.17" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="502.7" y="357" width="1.4" height="15.0" fill="rgb(254,32,40)" rx="2" ry="2" />
<text  x="505.72" y="367.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="485.9" y="517" width="1.4" height="15.0" fill="rgb(221,56,49)" rx="2" ry="2" />
<text  x="488.92" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="702.9" y="485" width="1.4" height="15.0" fill="rgb(205,162,41)" rx="2" ry="2" />
<text  x="705.88" y="495.5" ></text>
</g>
<g >
<title>std::string::operator+= (14,492,753 samples, 0.12%)</title><rect x="686.1" y="565" width="1.4" height="15.0" fill="rgb(222,25,9)" rx="2" ry="2" />
<text  x="689.09" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="616.1" y="437" width="1.4" height="15.0" fill="rgb(248,158,1)" rx="2" ry="2" />
<text  x="619.10" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (72,463,765 samples, 0.59%)</title><rect x="603.5" y="469" width="7.0" height="15.0" fill="rgb(229,96,14)" rx="2" ry="2" />
<text  x="606.50" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::StringSize (14,492,753 samples, 0.12%)</title><rect x="71.6" y="373" width="1.4" height="15.0" fill="rgb(229,150,41)" rx="2" ry="2" />
<text  x="74.59" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="288.6" y="421" width="1.4" height="15.0" fill="rgb(209,87,50)" rx="2" ry="2" />
<text  x="291.55" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="379.5" y="597" width="1.4" height="15.0" fill="rgb(243,8,15)" rx="2" ry="2" />
<text  x="382.54" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::_internal_attributes_size (14,492,753 samples, 0.12%)</title><rect x="593.7" y="341" width="1.4" height="15.0" fill="rgb(216,216,13)" rx="2" ry="2" />
<text  x="596.70" y="351.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="299.8" y="389" width="1.4" height="15.0" fill="rgb(236,51,28)" rx="2" ry="2" />
<text  x="302.75" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (28,985,506 samples, 0.24%)</title><rect x="560.1" y="389" width="2.8" height="15.0" fill="rgb(233,163,46)" rx="2" ry="2" />
<text  x="563.11" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (28,985,506 samples, 0.24%)</title><rect x="43.6" y="565" width="2.8" height="15.0" fill="rgb(206,5,54)" rx="2" ry="2" />
<text  x="46.59" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (28,985,506 samples, 0.24%)</title><rect x="43.6" y="549" width="2.8" height="15.0" fill="rgb(209,117,15)" rx="2" ry="2" />
<text  x="46.59" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="687.5" y="389" width="2.8" height="15.0" fill="rgb(247,201,13)" rx="2" ry="2" />
<text  x="690.49" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::CreateString (14,492,753 samples, 0.12%)</title><rect x="441.1" y="453" width="1.4" height="15.0" fill="rgb(208,67,14)" rx="2" ry="2" />
<text  x="444.13" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="527.9" y="437" width="1.4" height="15.0" fill="rgb(240,54,33)" rx="2" ry="2" />
<text  x="530.91" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (101,449,271 samples, 0.83%)</title><rect x="662.3" y="533" width="9.8" height="15.0" fill="rgb(224,109,22)" rx="2" ry="2" />
<text  x="665.29" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="401.9" y="533" width="1.4" height="15.0" fill="rgb(221,19,40)" rx="2" ry="2" />
<text  x="404.93" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (289,855,060 samples, 2.37%)</title><rect x="283.0" y="453" width="27.9" height="15.0" fill="rgb(210,123,10)" rx="2" ry="2" />
<text  x="285.95" y="463.5" >g..</text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="690.3" y="437" width="1.4" height="15.0" fill="rgb(208,1,29)" rx="2" ry="2" />
<text  x="693.28" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (14,492,753 samples, 0.12%)</title><rect x="393.5" y="549" width="1.4" height="15.0" fill="rgb(209,91,2)" rx="2" ry="2" />
<text  x="396.53" y="559.5" ></text>
</g>
<g >
<title>msg::DBBatchGetRes::Clear (14,492,753 samples, 0.12%)</title><rect x="54.8" y="613" width="1.4" height="15.0" fill="rgb(231,172,8)" rx="2" ry="2" />
<text  x="57.79" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="693.1" y="421" width="1.4" height="15.0" fill="rgb(248,118,47)" rx="2" ry="2" />
<text  x="696.08" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (130,434,777 samples, 1.07%)</title><rect x="491.5" y="517" width="12.6" height="15.0" fill="rgb(217,64,12)" rx="2" ry="2" />
<text  x="494.52" y="527.5" ></text>
</g>
<g >
<title>tbus2::client::EndpointMsg::_InternalParse (14,492,753 samples, 0.12%)</title><rect x="1128.4" y="741" width="1.4" height="15.0" fill="rgb(236,49,29)" rx="2" ry="2" />
<text  x="1131.41" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;opentelemetry::v1::exporter::otlp::OtlpRecordable, std::default_delete&lt;opentelemetry::v1::exporter::otlp::OtlpRecordable&gt; &gt;::unique_ptr&lt;std::default_delete&lt;opentelemetry::v1::exporter::otlp::OtlpRecordable&gt;, void&gt; (14,492,753 samples, 0.12%)</title><rect x="88.4" y="501" width="1.4" height="15.0" fill="rgb(214,39,22)" rx="2" ry="2" />
<text  x="91.39" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (43,478,259 samples, 0.36%)</title><rect x="939.4" y="517" width="4.2" height="15.0" fill="rgb(250,205,8)" rx="2" ry="2" />
<text  x="942.44" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_refdata (14,492,753 samples, 0.12%)</title><rect x="327.7" y="325" width="1.4" height="15.0" fill="rgb(217,112,8)" rx="2" ry="2" />
<text  x="330.75" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="639.9" y="405" width="1.4" height="15.0" fill="rgb(250,176,30)" rx="2" ry="2" />
<text  x="642.89" y="415.5" ></text>
</g>
<g >
<title>std::string::replace (14,492,753 samples, 0.12%)</title><rect x="1118.6" y="741" width="1.4" height="15.0" fill="rgb(225,149,47)" rx="2" ry="2" />
<text  x="1121.61" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="561.5" y="245" width="1.4" height="15.0" fill="rgb(240,193,4)" rx="2" ry="2" />
<text  x="564.51" y="255.5" ></text>
</g>
<g >
<title>std::atomic&lt;google::protobuf::internal::MapFieldBase::State&gt;::store (14,492,753 samples, 0.12%)</title><rect x="1071.0" y="709" width="1.4" height="15.0" fill="rgb(211,9,36)" rx="2" ry="2" />
<text  x="1074.02" y="719.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="157.0" y="453" width="1.4" height="15.0" fill="rgb(225,196,54)" rx="2" ry="2" />
<text  x="159.98" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::CreateString (14,492,753 samples, 0.12%)</title><rect x="880.7" y="373" width="1.4" height="15.0" fill="rgb(254,183,40)" rx="2" ry="2" />
<text  x="883.65" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (28,985,506 samples, 0.24%)</title><rect x="110.8" y="485" width="2.8" height="15.0" fill="rgb(223,44,16)" rx="2" ry="2" />
<text  x="113.78" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="693.1" y="501" width="1.4" height="15.0" fill="rgb(212,77,38)" rx="2" ry="2" />
<text  x="696.08" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt;::variant&lt;std::string const&amp;, void, void, void, void&gt; (14,492,753 samples, 0.12%)</title><rect x="506.9" y="437" width="1.4" height="15.0" fill="rgb(252,46,24)" rx="2" ry="2" />
<text  x="509.92" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (14,492,753 samples, 0.12%)</title><rect x="171.0" y="389" width="1.4" height="15.0" fill="rgb(249,188,38)" rx="2" ry="2" />
<text  x="173.97" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (14,492,753 samples, 0.12%)</title><rect x="701.5" y="469" width="1.4" height="15.0" fill="rgb(245,226,23)" rx="2" ry="2" />
<text  x="704.48" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="875.1" y="69" width="1.4" height="15.0" fill="rgb(225,211,44)" rx="2" ry="2" />
<text  x="878.05" y="79.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="15.6" y="693" width="1.4" height="15.0" fill="rgb(212,28,14)" rx="2" ry="2" />
<text  x="18.60" y="703.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (14,492,753 samples, 0.12%)</title><rect x="691.7" y="261" width="1.4" height="15.0" fill="rgb(238,93,36)" rx="2" ry="2" />
<text  x="694.68" y="271.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="677" width="1.4" height="15.0" fill="rgb(230,179,11)" rx="2" ry="2" />
<text  x="1097.82" y="687.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="165.4" y="309" width="1.4" height="15.0" fill="rgb(250,98,33)" rx="2" ry="2" />
<text  x="168.37" y="319.5" ></text>
</g>
<g >
<title>DataAgentExporter::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="891.9" y="437" width="1.4" height="15.0" fill="rgb(249,218,22)" rx="2" ry="2" />
<text  x="894.85" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="537.7" y="405" width="1.4" height="15.0" fill="rgb(236,181,49)" rx="2" ry="2" />
<text  x="540.71" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="875.1" y="197" width="1.4" height="15.0" fill="rgb(247,44,39)" rx="2" ry="2" />
<text  x="878.05" y="207.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="575.5" y="469" width="2.8" height="15.0" fill="rgb(209,206,19)" rx="2" ry="2" />
<text  x="578.50" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::size (14,492,753 samples, 0.12%)</title><rect x="593.7" y="309" width="1.4" height="15.0" fill="rgb(224,222,42)" rx="2" ry="2" />
<text  x="596.70" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (86,956,518 samples, 0.71%)</title><rect x="263.4" y="453" width="8.4" height="15.0" fill="rgb(221,142,47)" rx="2" ry="2" />
<text  x="266.36" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (72,463,765 samples, 0.59%)</title><rect x="705.7" y="517" width="7.0" height="15.0" fill="rgb(207,32,27)" rx="2" ry="2" />
<text  x="708.68" y="527.5" ></text>
</g>
<g >
<title>std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="77.2" y="357" width="1.4" height="15.0" fill="rgb(207,174,30)" rx="2" ry="2" />
<text  x="80.19" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;::_Rb_tree_const_iterator (14,492,753 samples, 0.12%)</title><rect x="620.3" y="373" width="1.4" height="15.0" fill="rgb(254,208,25)" rx="2" ry="2" />
<text  x="623.30" y="383.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="441.1" y="389" width="1.4" height="15.0" fill="rgb(238,211,2)" rx="2" ry="2" />
<text  x="444.13" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::HasHasbits (14,492,753 samples, 0.12%)</title><rect x="711.3" y="405" width="1.4" height="15.0" fill="rgb(220,44,39)" rx="2" ry="2" />
<text  x="714.28" y="415.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="533.5" y="309" width="1.4" height="15.0" fill="rgb(209,185,50)" rx="2" ry="2" />
<text  x="536.51" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="491.5" y="405" width="1.4" height="15.0" fill="rgb(241,143,43)" rx="2" ry="2" />
<text  x="494.52" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="108.0" y="453" width="1.4" height="15.0" fill="rgb(205,18,52)" rx="2" ry="2" />
<text  x="110.98" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="561.5" y="277" width="1.4" height="15.0" fill="rgb(210,37,19)" rx="2" ry="2" />
<text  x="564.51" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="67.4" y="437" width="1.4" height="15.0" fill="rgb(233,126,12)" rx="2" ry="2" />
<text  x="70.39" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::reserve (14,492,753 samples, 0.12%)</title><rect x="39.4" y="597" width="1.4" height="15.0" fill="rgb(233,8,52)" rx="2" ry="2" />
<text  x="42.40" y="607.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="462.1" y="437" width="1.4" height="15.0" fill="rgb(208,215,33)" rx="2" ry="2" />
<text  x="465.12" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::SetAttribute (43,478,259 samples, 0.36%)</title><rect x="884.9" y="357" width="4.2" height="15.0" fill="rgb(228,171,10)" rx="2" ry="2" />
<text  x="887.85" y="367.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="672.1" y="261" width="1.4" height="15.0" fill="rgb(234,48,30)" rx="2" ry="2" />
<text  x="675.09" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;NS_ACO::EventID&gt; &gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="186.4" y="501" width="1.4" height="15.0" fill="rgb(219,208,12)" rx="2" ry="2" />
<text  x="189.37" y="511.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::CreateEvent (28,985,506 samples, 0.24%)</title><rect x="481.7" y="549" width="2.8" height="15.0" fill="rgb(222,87,50)" rx="2" ry="2" />
<text  x="484.72" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="926.8" y="549" width="1.4" height="15.0" fill="rgb(245,152,21)" rx="2" ry="2" />
<text  x="929.84" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="691.7" y="437" width="1.4" height="15.0" fill="rgb(237,167,8)" rx="2" ry="2" />
<text  x="694.68" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::holds_alternative&lt;long, bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="887.7" y="341" width="1.4" height="15.0" fill="rgb(221,122,51)" rx="2" ry="2" />
<text  x="890.65" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::clear (14,492,753 samples, 0.12%)</title><rect x="61.8" y="469" width="1.4" height="15.0" fill="rgb(206,174,51)" rx="2" ry="2" />
<text  x="64.79" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, google::protobuf::Arena*&amp;, int&amp;, int&amp;, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&amp;&gt;::operator=&lt;google::protobuf::Arena*, int, int, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&gt; (14,492,753 samples, 0.12%)</title><rect x="81.4" y="405" width="1.4" height="15.0" fill="rgb(239,125,2)" rx="2" ry="2" />
<text  x="84.39" y="415.5" ></text>
</g>
<g >
<title>std::to_string (14,492,753 samples, 0.12%)</title><rect x="336.1" y="597" width="1.4" height="15.0" fill="rgb(239,83,40)" rx="2" ry="2" />
<text  x="339.14" y="607.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="716.9" y="421" width="1.4" height="15.0" fill="rgb(218,208,12)" rx="2" ry="2" />
<text  x="719.88" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="568.5" y="533" width="1.4" height="15.0" fill="rgb(248,137,16)" rx="2" ry="2" />
<text  x="571.51" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (43,478,259 samples, 0.36%)</title><rect x="547.5" y="517" width="4.2" height="15.0" fill="rgb(213,223,13)" rx="2" ry="2" />
<text  x="550.51" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (28,985,506 samples, 0.24%)</title><rect x="64.6" y="453" width="2.8" height="15.0" fill="rgb(243,50,40)" rx="2" ry="2" />
<text  x="67.59" y="463.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="561.5" y="293" width="1.4" height="15.0" fill="rgb(246,105,22)" rx="2" ry="2" />
<text  x="564.51" y="303.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="672.1" y="325" width="1.4" height="15.0" fill="rgb(242,9,2)" rx="2" ry="2" />
<text  x="675.09" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="863.9" y="405" width="1.4" height="15.0" fill="rgb(211,169,0)" rx="2" ry="2" />
<text  x="866.86" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="462.1" y="405" width="1.4" height="15.0" fill="rgb(231,221,32)" rx="2" ry="2" />
<text  x="465.12" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="536.3" y="421" width="1.4" height="15.0" fill="rgb(211,227,39)" rx="2" ry="2" />
<text  x="539.31" y="431.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="421.5" y="469" width="1.4" height="15.0" fill="rgb(243,44,47)" rx="2" ry="2" />
<text  x="424.53" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (159,420,283 samples, 1.30%)</title><rect x="145.8" y="565" width="15.4" height="15.0" fill="rgb(238,8,3)" rx="2" ry="2" />
<text  x="148.78" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="532.1" y="421" width="2.8" height="15.0" fill="rgb(244,203,40)" rx="2" ry="2" />
<text  x="535.11" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="435.5" y="485" width="1.4" height="15.0" fill="rgb(219,40,12)" rx="2" ry="2" />
<text  x="438.53" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Bits::Log2FloorNonZero (14,492,753 samples, 0.12%)</title><rect x="71.6" y="325" width="1.4" height="15.0" fill="rgb(242,184,4)" rx="2" ry="2" />
<text  x="74.59" y="335.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::Schedule (420,289,837 samples, 3.44%)</title><rect x="781.3" y="661" width="40.6" height="15.0" fill="rgb(241,191,38)" rx="2" ry="2" />
<text  x="784.27" y="671.5" >NS_..</text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::SetAttribute (14,492,753 samples, 0.12%)</title><rect x="672.1" y="405" width="1.4" height="15.0" fill="rgb(235,73,32)" rx="2" ry="2" />
<text  x="675.09" y="415.5" ></text>
</g>
<g >
<title>msg::ServerPkg::_InternalSerialize (43,478,259 samples, 0.36%)</title><rect x="1029.0" y="757" width="4.2" height="15.0" fill="rgb(235,134,47)" rx="2" ry="2" />
<text  x="1032.03" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span_Link&gt;::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="81.4" y="453" width="1.4" height="15.0" fill="rgb(248,182,29)" rx="2" ry="2" />
<text  x="84.39" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="42.2" y="597" width="1.4" height="15.0" fill="rgb(223,56,37)" rx="2" ry="2" />
<text  x="45.19" y="607.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="561.5" y="325" width="1.4" height="15.0" fill="rgb(224,193,43)" rx="2" ry="2" />
<text  x="564.51" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="494.3" y="357" width="1.4" height="15.0" fill="rgb(227,50,41)" rx="2" ry="2" />
<text  x="497.32" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetUInt64 (14,492,753 samples, 0.12%)</title><rect x="288.6" y="437" width="1.4" height="15.0" fill="rgb(227,194,28)" rx="2" ry="2" />
<text  x="291.55" y="447.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="365.5" y="453" width="1.4" height="15.0" fill="rgb(216,142,13)" rx="2" ry="2" />
<text  x="368.54" y="463.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (188,405,789 samples, 1.54%)</title><rect x="425.7" y="565" width="18.2" height="15.0" fill="rgb(239,145,24)" rx="2" ry="2" />
<text  x="428.73" y="575.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="411.7" y="437" width="1.4" height="15.0" fill="rgb(209,93,11)" rx="2" ry="2" />
<text  x="414.73" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="359.9" y="501" width="1.4" height="15.0" fill="rgb(242,220,11)" rx="2" ry="2" />
<text  x="362.94" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="579.7" y="517" width="1.4" height="15.0" fill="rgb(232,45,43)" rx="2" ry="2" />
<text  x="582.70" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (43,478,259 samples, 0.36%)</title><rect x="386.5" y="581" width="4.2" height="15.0" fill="rgb(252,78,6)" rx="2" ry="2" />
<text  x="389.54" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="52.0" y="677" width="1.4" height="15.0" fill="rgb(217,92,43)" rx="2" ry="2" />
<text  x="54.99" y="687.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="716.9" y="437" width="1.4" height="15.0" fill="rgb(237,64,39)" rx="2" ry="2" />
<text  x="719.88" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (289,855,060 samples, 2.37%)</title><rect x="448.1" y="581" width="28.0" height="15.0" fill="rgb(214,84,6)" rx="2" ry="2" />
<text  x="451.13" y="591.5" >g..</text>
</g>
<g >
<title>std::unique_ptr&lt;google::protobuf::Message, std::default_delete&lt;google::protobuf::Message&gt; &gt;::~unique_ptr (14,492,753 samples, 0.12%)</title><rect x="33.8" y="677" width="1.4" height="15.0" fill="rgb(248,37,49)" rx="2" ry="2" />
<text  x="36.80" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::~RepeatedPtrField (43,478,259 samples, 0.36%)</title><rect x="872.3" y="357" width="4.2" height="15.0" fill="rgb(220,67,6)" rx="2" ry="2" />
<text  x="875.25" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::EpsCopyInputStream::ReadString (28,985,506 samples, 0.24%)</title><rect x="1096.2" y="709" width="2.8" height="15.0" fill="rgb(228,67,46)" rx="2" ry="2" />
<text  x="1099.22" y="719.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="613.3" y="421" width="1.4" height="15.0" fill="rgb(208,71,29)" rx="2" ry="2" />
<text  x="616.30" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="558.7" y="421" width="1.4" height="15.0" fill="rgb(238,45,50)" rx="2" ry="2" />
<text  x="561.71" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (14,492,753 samples, 0.12%)</title><rect x="866.7" y="357" width="1.4" height="15.0" fill="rgb(214,214,30)" rx="2" ry="2" />
<text  x="869.65" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="267.6" y="421" width="1.4" height="15.0" fill="rgb(243,34,31)" rx="2" ry="2" />
<text  x="270.56" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="715.5" y="597" width="4.2" height="15.0" fill="rgb(227,123,46)" rx="2" ry="2" />
<text  x="718.48" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (28,985,506 samples, 0.24%)</title><rect x="351.5" y="469" width="2.8" height="15.0" fill="rgb(254,205,20)" rx="2" ry="2" />
<text  x="354.54" y="479.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (28,985,506 samples, 0.24%)</title><rect x="453.7" y="517" width="2.8" height="15.0" fill="rgb(227,148,26)" rx="2" ry="2" />
<text  x="456.72" y="527.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="639.9" y="309" width="1.4" height="15.0" fill="rgb(221,64,41)" rx="2" ry="2" />
<text  x="642.89" y="319.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="1180.2" y="773" width="1.4" height="15.0" fill="rgb(212,134,18)" rx="2" ry="2" />
<text  x="1183.20" y="783.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="490.1" y="453" width="1.4" height="15.0" fill="rgb(212,27,33)" rx="2" ry="2" />
<text  x="493.12" y="463.5" ></text>
</g>
<g >
<title>TalentSvrContext::OnRequest (28,985,506 samples, 0.24%)</title><rect x="905.8" y="629" width="2.8" height="15.0" fill="rgb(205,70,46)" rx="2" ry="2" />
<text  x="908.85" y="639.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_is_leaked (14,492,753 samples, 0.12%)</title><rect x="1178.8" y="757" width="1.4" height="15.0" fill="rgb(220,27,31)" rx="2" ry="2" />
<text  x="1181.80" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::~AnyValue (14,492,753 samples, 0.12%)</title><rect x="438.3" y="293" width="1.4" height="15.0" fill="rgb(214,43,18)" rx="2" ry="2" />
<text  x="441.33" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (28,985,506 samples, 0.24%)</title><rect x="147.2" y="453" width="2.8" height="15.0" fill="rgb(240,72,2)" rx="2" ry="2" />
<text  x="150.18" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="499.9" y="437" width="1.4" height="15.0" fill="rgb(234,110,21)" rx="2" ry="2" />
<text  x="502.92" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="213.0" y="469" width="1.4" height="15.0" fill="rgb(234,195,35)" rx="2" ry="2" />
<text  x="215.97" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="607.7" y="405" width="1.4" height="15.0" fill="rgb(220,142,16)" rx="2" ry="2" />
<text  x="610.70" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (28,985,506 samples, 0.24%)</title><rect x="532.1" y="389" width="2.8" height="15.0" fill="rgb(241,3,48)" rx="2" ry="2" />
<text  x="535.11" y="399.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::Message const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="369.7" y="485" width="1.4" height="15.0" fill="rgb(254,63,34)" rx="2" ry="2" />
<text  x="372.74" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="151.4" y="437" width="1.4" height="15.0" fill="rgb(208,109,47)" rx="2" ry="2" />
<text  x="154.38" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (14,492,753 samples, 0.12%)</title><rect x="106.6" y="453" width="1.4" height="15.0" fill="rgb(235,82,30)" rx="2" ry="2" />
<text  x="109.58" y="463.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="382.3" y="565" width="1.4" height="15.0" fill="rgb(230,195,39)" rx="2" ry="2" />
<text  x="385.34" y="575.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="558.7" y="405" width="1.4" height="15.0" fill="rgb(253,187,27)" rx="2" ry="2" />
<text  x="561.71" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (188,405,789 samples, 1.54%)</title><rect x="968.8" y="581" width="18.2" height="15.0" fill="rgb(215,53,39)" rx="2" ry="2" />
<text  x="971.84" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="452.3" y="501" width="1.4" height="15.0" fill="rgb(219,129,16)" rx="2" ry="2" />
<text  x="455.33" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="442.5" y="453" width="1.4" height="15.0" fill="rgb(241,171,19)" rx="2" ry="2" />
<text  x="445.53" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="103.8" y="501" width="1.4" height="15.0" fill="rgb(240,195,34)" rx="2" ry="2" />
<text  x="106.78" y="511.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="277.4" y="293" width="1.4" height="15.0" fill="rgb(217,229,30)" rx="2" ry="2" />
<text  x="280.35" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="436.9" y="437" width="1.4" height="15.0" fill="rgb(205,189,3)" rx="2" ry="2" />
<text  x="439.93" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::_internal_name (14,492,753 samples, 0.12%)</title><rect x="492.9" y="341" width="1.4" height="15.0" fill="rgb(208,72,41)" rx="2" ry="2" />
<text  x="495.92" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_internal_add_scope_spans (14,492,753 samples, 0.12%)</title><rect x="578.3" y="469" width="1.4" height="15.0" fill="rgb(242,177,26)" rx="2" ry="2" />
<text  x="581.30" y="479.5" ></text>
</g>
<g >
<title>tlog_category_logv_va_list (14,492,753 samples, 0.12%)</title><rect x="1148.0" y="773" width="1.4" height="15.0" fill="rgb(208,160,6)" rx="2" ry="2" />
<text  x="1151.01" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFrom&lt; (28,985,506 samples, 0.24%)</title><rect x="331.9" y="581" width="2.8" height="15.0" fill="rgb(239,166,29)" rx="2" ry="2" />
<text  x="334.95" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="942.2" y="389" width="1.4" height="15.0" fill="rgb(228,82,1)" rx="2" ry="2" />
<text  x="945.24" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="620.3" y="389" width="1.4" height="15.0" fill="rgb(230,157,39)" rx="2" ry="2" />
<text  x="623.30" y="399.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="467.7" y="469" width="1.4" height="15.0" fill="rgb(249,213,12)" rx="2" ry="2" />
<text  x="470.72" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="336.1" y="565" width="1.4" height="15.0" fill="rgb(232,212,30)" rx="2" ry="2" />
<text  x="339.14" y="575.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (28,985,506 samples, 0.24%)</title><rect x="431.3" y="501" width="2.8" height="15.0" fill="rgb(218,133,45)" rx="2" ry="2" />
<text  x="434.33" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="1097.6" y="661" width="1.4" height="15.0" fill="rgb(245,22,41)" rx="2" ry="2" />
<text  x="1100.62" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="879.3" y="405" width="1.4" height="15.0" fill="rgb(236,153,43)" rx="2" ry="2" />
<text  x="882.25" y="415.5" ></text>
</g>
<g >
<title>AcoContext::ServerContext::ServiceEntryWrapper::operator (7,304,347,512 samples, 59.79%)</title><rect x="14.2" y="725" width="705.5" height="15.0" fill="rgb(252,47,17)" rx="2" ry="2" />
<text  x="17.20" y="735.5" >AcoContext::ServerContext::ServiceEntryWrapper::operator</text>
</g>
<g >
<title>google::protobuf::Message::MaybeComputeUnknownFieldsSize (14,492,753 samples, 0.12%)</title><rect x="148.6" y="357" width="1.4" height="15.0" fill="rgb(233,41,34)" rx="2" ry="2" />
<text  x="151.58" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="229.8" y="421" width="1.4" height="15.0" fill="rgb(212,84,42)" rx="2" ry="2" />
<text  x="232.76" y="431.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::CreateThread (43,478,259 samples, 0.36%)</title><rect x="851.3" y="613" width="4.2" height="15.0" fill="rgb(251,24,52)" rx="2" ry="2" />
<text  x="854.26" y="623.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (14,492,753 samples, 0.12%)</title><rect x="602.1" y="485" width="1.4" height="15.0" fill="rgb(207,112,25)" rx="2" ry="2" />
<text  x="605.10" y="495.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="723.9" y="549" width="1.4" height="15.0" fill="rgb(237,127,1)" rx="2" ry="2" />
<text  x="726.88" y="559.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="453.7" y="469" width="2.8" height="15.0" fill="rgb(234,52,34)" rx="2" ry="2" />
<text  x="456.72" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="1010.8" y="725" width="1.4" height="15.0" fill="rgb(219,71,54)" rx="2" ry="2" />
<text  x="1013.83" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32 (14,492,753 samples, 0.12%)</title><rect x="575.5" y="357" width="1.4" height="15.0" fill="rgb(216,81,4)" rx="2" ry="2" />
<text  x="578.50" y="367.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="201.8" y="421" width="1.4" height="15.0" fill="rgb(212,167,10)" rx="2" ry="2" />
<text  x="204.77" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="366.9" y="501" width="1.4" height="15.0" fill="rgb(250,57,19)" rx="2" ry="2" />
<text  x="369.94" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (14,492,753 samples, 0.12%)</title><rect x="478.9" y="501" width="1.4" height="15.0" fill="rgb(215,109,0)" rx="2" ry="2" />
<text  x="481.92" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="386.5" y="405" width="1.4" height="15.0" fill="rgb(245,88,33)" rx="2" ry="2" />
<text  x="389.54" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="639.9" y="213" width="1.4" height="15.0" fill="rgb(219,51,42)" rx="2" ry="2" />
<text  x="642.89" y="223.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (14,492,753 samples, 0.12%)</title><rect x="113.6" y="485" width="1.4" height="15.0" fill="rgb(220,0,27)" rx="2" ry="2" />
<text  x="116.58" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="618.9" y="357" width="1.4" height="15.0" fill="rgb(229,229,50)" rx="2" ry="2" />
<text  x="621.90" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::InRealOneof (14,492,753 samples, 0.12%)</title><rect x="287.2" y="373" width="1.4" height="15.0" fill="rgb(216,98,37)" rx="2" ry="2" />
<text  x="290.15" y="383.5" ></text>
</g>
<g >
<title>strchrnul (14,492,753 samples, 0.12%)</title><rect x="1054.2" y="757" width="1.4" height="15.0" fill="rgb(210,133,36)" rx="2" ry="2" />
<text  x="1057.22" y="767.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="877.9" y="213" width="1.4" height="15.0" fill="rgb(205,96,43)" rx="2" ry="2" />
<text  x="880.85" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::trace::DefaultSpan*,  (14,492,753 samples, 0.12%)</title><rect x="515.3" y="389" width="1.4" height="15.0" fill="rgb(210,63,40)" rx="2" ry="2" />
<text  x="518.31" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::_M_head (14,492,753 samples, 0.12%)</title><rect x="627.3" y="357" width="1.4" height="15.0" fill="rgb(217,148,44)" rx="2" ry="2" />
<text  x="630.30" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetInt32 (14,492,753 samples, 0.12%)</title><rect x="119.2" y="469" width="1.4" height="15.0" fill="rgb(248,75,36)" rx="2" ry="2" />
<text  x="122.18" y="479.5" ></text>
</g>
<g >
<title>std::string::operator std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="1066.8" y="693" width="1.4" height="15.0" fill="rgb(211,59,24)" rx="2" ry="2" />
<text  x="1069.82" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (14,492,753 samples, 0.12%)</title><rect x="1019.2" y="725" width="1.4" height="15.0" fill="rgb(239,1,34)" rx="2" ry="2" />
<text  x="1022.23" y="735.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="427.1" y="421" width="1.4" height="15.0" fill="rgb(247,150,1)" rx="2" ry="2" />
<text  x="430.13" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (28,985,506 samples, 0.24%)</title><rect x="421.5" y="533" width="2.8" height="15.0" fill="rgb(243,210,47)" rx="2" ry="2" />
<text  x="424.53" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::add_spans (14,492,753 samples, 0.12%)</title><rect x="694.5" y="501" width="1.4" height="15.0" fill="rgb(239,16,23)" rx="2" ry="2" />
<text  x="697.48" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="585.3" y="469" width="1.4" height="15.0" fill="rgb(208,224,1)" rx="2" ry="2" />
<text  x="588.30" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,492,753 samples, 0.12%)</title><rect x="179.4" y="597" width="1.4" height="15.0" fill="rgb(243,201,11)" rx="2" ry="2" />
<text  x="182.37" y="607.5" ></text>
</g>
<g >
<title>TracerUtil::SpiltTraceParent (14,492,753 samples, 0.12%)</title><rect x="59.0" y="565" width="1.4" height="15.0" fill="rgb(244,0,48)" rx="2" ry="2" />
<text  x="61.99" y="575.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::OnEnterSchedule (14,492,753 samples, 0.12%)</title><rect x="1003.8" y="693" width="1.4" height="15.0" fill="rgb(208,40,34)" rx="2" ry="2" />
<text  x="1006.83" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::~Printer (14,492,753 samples, 0.12%)</title><rect x="173.8" y="565" width="1.4" height="15.0" fill="rgb(243,145,48)" rx="2" ry="2" />
<text  x="176.77" y="575.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="681.9" y="469" width="1.4" height="15.0" fill="rgb(219,148,42)" rx="2" ry="2" />
<text  x="684.89" y="479.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="723.9" y="565" width="1.4" height="15.0" fill="rgb(206,131,9)" rx="2" ry="2" />
<text  x="726.88" y="575.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="672.1" y="309" width="1.4" height="15.0" fill="rgb(238,70,37)" rx="2" ry="2" />
<text  x="675.09" y="319.5" ></text>
</g>
<g >
<title>std::string::_Alloc_hider::_Alloc_hider (14,492,753 samples, 0.12%)</title><rect x="439.7" y="453" width="1.4" height="15.0" fill="rgb(243,117,3)" rx="2" ry="2" />
<text  x="442.73" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="877.9" y="229" width="1.4" height="15.0" fill="rgb(236,77,29)" rx="2" ry="2" />
<text  x="880.85" y="239.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="529.3" y="357" width="1.4" height="15.0" fill="rgb(250,50,12)" rx="2" ry="2" />
<text  x="532.31" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="868.1" y="357" width="1.4" height="15.0" fill="rgb(223,24,49)" rx="2" ry="2" />
<text  x="871.05" y="367.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (14,492,753 samples, 0.12%)</title><rect x="725.3" y="693" width="1.4" height="15.0" fill="rgb(207,71,17)" rx="2" ry="2" />
<text  x="728.28" y="703.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (28,985,506 samples, 0.24%)</title><rect x="161.2" y="565" width="2.8" height="15.0" fill="rgb(226,211,35)" rx="2" ry="2" />
<text  x="164.17" y="575.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (159,420,283 samples, 1.30%)</title><rect x="588.1" y="549" width="15.4" height="15.0" fill="rgb(223,217,31)" rx="2" ry="2" />
<text  x="591.10" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (28,985,506 samples, 0.24%)</title><rect x="648.3" y="437" width="2.8" height="15.0" fill="rgb(207,144,20)" rx="2" ry="2" />
<text  x="651.29" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::Span&gt; (14,492,753 samples, 0.12%)</title><rect x="595.1" y="373" width="1.4" height="15.0" fill="rgb(210,117,54)" rx="2" ry="2" />
<text  x="598.10" y="383.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (463,768,096 samples, 3.80%)</title><rect x="57.6" y="581" width="44.8" height="15.0" fill="rgb(238,197,7)" rx="2" ry="2" />
<text  x="60.59" y="591.5" >Trac..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (28,985,506 samples, 0.24%)</title><rect x="954.8" y="517" width="2.8" height="15.0" fill="rgb(227,185,53)" rx="2" ry="2" />
<text  x="957.84" y="527.5" ></text>
</g>
<g >
<title>AcoLog::CodeLocation::CodeLocation (14,492,753 samples, 0.12%)</title><rect x="420.1" y="629" width="1.4" height="15.0" fill="rgb(218,199,13)" rx="2" ry="2" />
<text  x="423.13" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (14,492,753 samples, 0.12%)</title><rect x="145.8" y="485" width="1.4" height="15.0" fill="rgb(251,118,44)" rx="2" ry="2" />
<text  x="148.78" y="495.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (130,434,777 samples, 1.07%)</title><rect x="64.6" y="501" width="12.6" height="15.0" fill="rgb(241,117,29)" rx="2" ry="2" />
<text  x="67.59" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="29.6" y="549" width="1.4" height="15.0" fill="rgb(206,14,13)" rx="2" ry="2" />
<text  x="32.60" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, int&amp;, int&amp;, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&amp;&gt;::_M_head (14,492,753 samples, 0.12%)</title><rect x="81.4" y="373" width="1.4" height="15.0" fill="rgb(215,219,20)" rx="2" ry="2" />
<text  x="84.39" y="383.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (144,927,530 samples, 1.19%)</title><rect x="662.3" y="581" width="14.0" height="15.0" fill="rgb(235,38,35)" rx="2" ry="2" />
<text  x="665.29" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (304,347,813 samples, 2.49%)</title><rect x="344.5" y="549" width="29.4" height="15.0" fill="rgb(212,173,0)" rx="2" ry="2" />
<text  x="347.54" y="559.5" >go..</text>
</g>
<g >
<title>__gthread_active_p (14,492,753 samples, 0.12%)</title><rect x="450.9" y="421" width="1.4" height="15.0" fill="rgb(230,25,40)" rx="2" ry="2" />
<text  x="453.93" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased (28,985,506 samples, 0.24%)</title><rect x="1030.4" y="741" width="2.8" height="15.0" fill="rgb(249,30,33)" rx="2" ry="2" />
<text  x="1033.43" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="103.8" y="405" width="1.4" height="15.0" fill="rgb(244,20,22)" rx="2" ry="2" />
<text  x="106.78" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::EpsCopyInputStream::ReadString (14,492,753 samples, 0.12%)</title><rect x="1022.0" y="725" width="1.4" height="15.0" fill="rgb(214,105,41)" rx="2" ry="2" />
<text  x="1025.03" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (86,956,518 samples, 0.71%)</title><rect x="320.7" y="485" width="8.4" height="15.0" fill="rgb(243,177,52)" rx="2" ry="2" />
<text  x="323.75" y="495.5" ></text>
</g>
<g >
<title>msg::ServerPkg::~ServerPkg (14,492,753 samples, 0.12%)</title><rect x="1087.8" y="773" width="1.4" height="15.0" fill="rgb(251,199,41)" rx="2" ry="2" />
<text  x="1090.82" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="617.5" y="437" width="2.8" height="15.0" fill="rgb(210,4,10)" rx="2" ry="2" />
<text  x="620.50" y="447.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="547.5" y="309" width="1.4" height="15.0" fill="rgb(221,198,23)" rx="2" ry="2" />
<text  x="550.51" y="319.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (159,420,283 samples, 1.30%)</title><rect x="145.8" y="533" width="15.4" height="15.0" fill="rgb(246,60,45)" rx="2" ry="2" />
<text  x="148.78" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::RepeatedPtrFieldBase&gt; (14,492,753 samples, 0.12%)</title><rect x="21.2" y="581" width="1.4" height="15.0" fill="rgb(212,88,13)" rx="2" ry="2" />
<text  x="24.20" y="591.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="645" width="1.4" height="15.0" fill="rgb(209,91,9)" rx="2" ry="2" />
<text  x="1097.82" y="655.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (14,492,753 samples, 0.12%)</title><rect x="596.5" y="437" width="1.4" height="15.0" fill="rgb(215,89,33)" rx="2" ry="2" />
<text  x="599.50" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (43,478,259 samples, 0.36%)</title><rect x="866.7" y="469" width="4.2" height="15.0" fill="rgb(247,165,38)" rx="2" ry="2" />
<text  x="869.65" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (28,985,506 samples, 0.24%)</title><rect x="421.5" y="517" width="2.8" height="15.0" fill="rgb(250,229,11)" rx="2" ry="2" />
<text  x="424.53" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="467.7" y="533" width="1.4" height="15.0" fill="rgb(222,61,50)" rx="2" ry="2" />
<text  x="470.72" y="543.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_heap] (43,478,259 samples, 0.36%)</title><rect x="1017.8" y="773" width="4.2" height="15.0" fill="rgb(211,202,32)" rx="2" ry="2" />
<text  x="1020.83" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="926.8" y="533" width="1.4" height="15.0" fill="rgb(228,79,26)" rx="2" ry="2" />
<text  x="929.84" y="543.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="686.1" y="549" width="1.4" height="15.0" fill="rgb(230,74,38)" rx="2" ry="2" />
<text  x="689.09" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, unsigned long, true&gt;::_S_equals (14,492,753 samples, 0.12%)</title><rect x="406.1" y="405" width="1.4" height="15.0" fill="rgb(225,168,35)" rx="2" ry="2" />
<text  x="409.13" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="438.3" y="277" width="1.4" height="15.0" fill="rgb(217,109,22)" rx="2" ry="2" />
<text  x="441.33" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;prometheus::Histogram::Observe (14,492,753 samples, 0.12%)</title><rect x="11.4" y="565" width="1.4" height="15.0" fill="rgb(219,104,1)" rx="2" ry="2" />
<text  x="14.40" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (28,985,506 samples, 0.24%)</title><rect x="662.3" y="453" width="2.8" height="15.0" fill="rgb(248,22,45)" rx="2" ry="2" />
<text  x="665.29" y="463.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (14,492,753 samples, 0.12%)</title><rect x="140.2" y="565" width="1.4" height="15.0" fill="rgb(245,60,49)" rx="2" ry="2" />
<text  x="143.18" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::holds_alternative&lt;std::string, bool, int, unsigned int, long, double, std::string, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="87.0" y="437" width="1.4" height="15.0" fill="rgb(225,122,29)" rx="2" ry="2" />
<text  x="89.99" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (28,985,506 samples, 0.24%)</title><rect x="662.3" y="469" width="2.8" height="15.0" fill="rgb(249,98,18)" rx="2" ry="2" />
<text  x="665.29" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (28,985,506 samples, 0.24%)</title><rect x="604.9" y="341" width="2.8" height="15.0" fill="rgb(205,20,38)" rx="2" ry="2" />
<text  x="607.90" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="373.9" y="533" width="1.4" height="15.0" fill="rgb(248,201,5)" rx="2" ry="2" />
<text  x="376.94" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (43,478,259 samples, 0.36%)</title><rect x="879.3" y="437" width="4.2" height="15.0" fill="rgb(211,142,2)" rx="2" ry="2" />
<text  x="882.25" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="302.6" y="341" width="1.4" height="15.0" fill="rgb(218,148,51)" rx="2" ry="2" />
<text  x="305.55" y="351.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="441.1" y="421" width="1.4" height="15.0" fill="rgb(235,55,42)" rx="2" ry="2" />
<text  x="444.13" y="431.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::link_expire_timeout (14,492,753 samples, 0.12%)</title><rect x="1001.0" y="677" width="1.4" height="15.0" fill="rgb(253,163,31)" rx="2" ry="2" />
<text  x="1004.03" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="327.7" y="437" width="1.4" height="15.0" fill="rgb(234,45,24)" rx="2" ry="2" />
<text  x="330.75" y="447.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="586.7" y="293" width="1.4" height="15.0" fill="rgb(254,189,46)" rx="2" ry="2" />
<text  x="589.70" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="152.8" y="437" width="1.4" height="15.0" fill="rgb(233,173,11)" rx="2" ry="2" />
<text  x="155.78" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="599.3" y="421" width="1.4" height="15.0" fill="rgb(210,8,50)" rx="2" ry="2" />
<text  x="602.30" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="406.1" y="421" width="1.4" height="15.0" fill="rgb(218,226,36)" rx="2" ry="2" />
<text  x="409.13" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14,492,753 samples, 0.12%)</title><rect x="515.3" y="437" width="1.4" height="15.0" fill="rgb(234,227,16)" rx="2" ry="2" />
<text  x="518.31" y="447.5" ></text>
</g>
<g >
<title>AcoContext::ThreadEntry_Maintain (144,927,530 samples, 1.19%)</title><rect x="719.7" y="725" width="14.0" height="15.0" fill="rgb(209,197,20)" rx="2" ry="2" />
<text  x="722.68" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::allocator&lt;google::protobuf::Symbol&gt;, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="406.1" y="453" width="1.4" height="15.0" fill="rgb(214,114,34)" rx="2" ry="2" />
<text  x="409.13" y="463.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="495.7" y="85" width="1.4" height="15.0" fill="rgb(252,28,17)" rx="2" ry="2" />
<text  x="498.72" y="95.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (43,478,259 samples, 0.36%)</title><rect x="866.7" y="453" width="4.2" height="15.0" fill="rgb(238,119,22)" rx="2" ry="2" />
<text  x="869.65" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="691.7" y="421" width="1.4" height="15.0" fill="rgb(218,182,30)" rx="2" ry="2" />
<text  x="694.68" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (28,985,506 samples, 0.24%)</title><rect x="662.3" y="485" width="2.8" height="15.0" fill="rgb(222,64,49)" rx="2" ry="2" />
<text  x="665.29" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;long&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="641.3" y="469" width="1.4" height="15.0" fill="rgb(235,165,40)" rx="2" ry="2" />
<text  x="644.29" y="479.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="618.9" y="325" width="1.4" height="15.0" fill="rgb(243,220,32)" rx="2" ry="2" />
<text  x="621.90" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="985.6" y="533" width="1.4" height="15.0" fill="rgb(227,200,54)" rx="2" ry="2" />
<text  x="988.63" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (101,449,271 samples, 0.83%)</title><rect x="702.9" y="533" width="9.8" height="15.0" fill="rgb(232,81,46)" rx="2" ry="2" />
<text  x="705.88" y="543.5" ></text>
</g>
<g >
<title>Log::WriteLog (14,492,753 samples, 0.12%)</title><rect x="480.3" y="501" width="1.4" height="15.0" fill="rgb(225,191,6)" rx="2" ry="2" />
<text  x="483.32" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="21.2" y="549" width="1.4" height="15.0" fill="rgb(249,4,49)" rx="2" ry="2" />
<text  x="24.20" y="559.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Yield (971,014,451 samples, 7.95%)</title><rect x="743.5" y="693" width="93.8" height="15.0" fill="rgb(211,207,45)" rx="2" ry="2" />
<text  x="746.48" y="703.5" >NS_ACO::Aco..</text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="534.9" y="405" width="1.4" height="15.0" fill="rgb(214,108,14)" rx="2" ry="2" />
<text  x="537.91" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="109.4" y="389" width="1.4" height="15.0" fill="rgb(239,47,0)" rx="2" ry="2" />
<text  x="112.38" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (14,492,753 samples, 0.12%)</title><rect x="1160.6" y="789" width="1.4" height="15.0" fill="rgb(229,25,50)" rx="2" ry="2" />
<text  x="1163.60" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::CreateString (14,492,753 samples, 0.12%)</title><rect x="886.3" y="293" width="1.4" height="15.0" fill="rgb(250,79,34)" rx="2" ry="2" />
<text  x="889.25" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;AcoLog::ELogPriority, std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="179.4" y="533" width="1.4" height="15.0" fill="rgb(225,121,6)" rx="2" ry="2" />
<text  x="182.37" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (28,985,506 samples, 0.24%)</title><rect x="301.2" y="421" width="2.8" height="15.0" fill="rgb(229,198,7)" rx="2" ry="2" />
<text  x="304.15" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="364.1" y="501" width="1.4" height="15.0" fill="rgb(250,79,26)" rx="2" ry="2" />
<text  x="367.14" y="511.5" ></text>
</g>
<g >
<title>__write (14,492,753 samples, 0.12%)</title><rect x="1064.0" y="773" width="1.4" height="15.0" fill="rgb(220,131,2)" rx="2" ry="2" />
<text  x="1067.02" y="783.5" ></text>
</g>
<g >
<title>tbuspp_queue_write (14,492,753 samples, 0.12%)</title><rect x="159.8" y="517" width="1.4" height="15.0" fill="rgb(231,201,15)" rx="2" ry="2" />
<text  x="162.77" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="49.2" y="597" width="1.4" height="15.0" fill="rgb(222,19,47)" rx="2" ry="2" />
<text  x="52.19" y="607.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::WaitEvent (101,449,271 samples, 0.83%)</title><rect x="182.2" y="629" width="9.8" height="15.0" fill="rgb(240,44,1)" rx="2" ry="2" />
<text  x="185.17" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span_Event&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="436.9" y="277" width="1.4" height="15.0" fill="rgb(243,5,53)" rx="2" ry="2" />
<text  x="439.93" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="904.4" y="565" width="1.4" height="15.0" fill="rgb(232,50,22)" rx="2" ry="2" />
<text  x="907.45" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (14,492,753 samples, 0.12%)</title><rect x="599.3" y="389" width="1.4" height="15.0" fill="rgb(219,139,10)" rx="2" ry="2" />
<text  x="602.30" y="399.5" ></text>
</g>
<g >
<title>prometheus::Counter::Increment (14,492,753 samples, 0.12%)</title><rect x="844.3" y="629" width="1.4" height="15.0" fill="rgb(253,65,13)" rx="2" ry="2" />
<text  x="847.26" y="639.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="123.4" y="421" width="1.4" height="15.0" fill="rgb(231,17,9)" rx="2" ry="2" />
<text  x="126.38" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::SetBytes (14,492,753 samples, 0.12%)</title><rect x="94.0" y="453" width="1.4" height="15.0" fill="rgb(231,8,35)" rx="2" ry="2" />
<text  x="96.99" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::SystemTimestamp::SystemTimestamp&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="508.3" y="421" width="1.4" height="15.0" fill="rgb(254,224,26)" rx="2" ry="2" />
<text  x="511.32" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (28,985,506 samples, 0.24%)</title><rect x="564.3" y="453" width="2.8" height="15.0" fill="rgb(238,149,7)" rx="2" ry="2" />
<text  x="567.31" y="463.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="707.1" y="405" width="1.4" height="15.0" fill="rgb(247,34,25)" rx="2" ry="2" />
<text  x="710.08" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="655.3" y="373" width="1.4" height="15.0" fill="rgb(240,222,0)" rx="2" ry="2" />
<text  x="658.29" y="383.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="655.3" y="341" width="1.4" height="15.0" fill="rgb(215,209,0)" rx="2" ry="2" />
<text  x="658.29" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="637.1" y="485" width="4.2" height="15.0" fill="rgb(210,69,7)" rx="2" ry="2" />
<text  x="640.09" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (43,478,259 samples, 0.36%)</title><rect x="551.7" y="453" width="4.2" height="15.0" fill="rgb(219,88,51)" rx="2" ry="2" />
<text  x="554.71" y="463.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (43,478,259 samples, 0.36%)</title><rect x="1037.4" y="757" width="4.2" height="15.0" fill="rgb(208,29,19)" rx="2" ry="2" />
<text  x="1040.43" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (159,420,283 samples, 1.30%)</title><rect x="525.1" y="469" width="15.4" height="15.0" fill="rgb(244,200,2)" rx="2" ry="2" />
<text  x="528.11" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::VarintParseSlow64 (28,985,506 samples, 0.24%)</title><rect x="1099.0" y="693" width="2.8" height="15.0" fill="rgb(207,190,8)" rx="2" ry="2" />
<text  x="1102.02" y="703.5" ></text>
</g>
<g >
<title>gettimeofday (144,927,530 samples, 1.19%)</title><rect x="802.3" y="629" width="14.0" height="15.0" fill="rgb(233,150,14)" rx="2" ry="2" />
<text  x="805.27" y="639.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="462.1" y="389" width="1.4" height="15.0" fill="rgb(240,75,7)" rx="2" ry="2" />
<text  x="465.12" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (28,985,506 samples, 0.24%)</title><rect x="257.8" y="421" width="2.8" height="15.0" fill="rgb(243,184,14)" rx="2" ry="2" />
<text  x="260.76" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="963.2" y="517" width="1.4" height="15.0" fill="rgb(234,196,20)" rx="2" ry="2" />
<text  x="966.24" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="392.1" y="501" width="1.4" height="15.0" fill="rgb(206,79,12)" rx="2" ry="2" />
<text  x="395.14" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="103.8" y="421" width="1.4" height="15.0" fill="rgb(225,193,9)" rx="2" ry="2" />
<text  x="106.78" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::ByteSizeLong (43,478,259 samples, 0.36%)</title><rect x="70.2" y="421" width="4.2" height="15.0" fill="rgb(249,24,40)" rx="2" ry="2" />
<text  x="73.19" y="431.5" ></text>
</g>
<g >
<title>getcontext (14,492,753 samples, 0.12%)</title><rect x="543.3" y="485" width="1.4" height="15.0" fill="rgb(223,63,29)" rx="2" ry="2" />
<text  x="546.31" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="586.7" y="453" width="1.4" height="15.0" fill="rgb(214,62,52)" rx="2" ry="2" />
<text  x="589.70" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (14,492,753 samples, 0.12%)</title><rect x="600.7" y="453" width="1.4" height="15.0" fill="rgb(216,190,17)" rx="2" ry="2" />
<text  x="603.70" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (14,492,753 samples, 0.12%)</title><rect x="103.8" y="533" width="1.4" height="15.0" fill="rgb(209,168,47)" rx="2" ry="2" />
<text  x="106.78" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="399.1" y="517" width="1.4" height="15.0" fill="rgb(215,27,22)" rx="2" ry="2" />
<text  x="402.13" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (14,492,753 samples, 0.12%)</title><rect x="1173.2" y="741" width="1.4" height="15.0" fill="rgb(206,6,19)" rx="2" ry="2" />
<text  x="1176.20" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="672.1" y="373" width="1.4" height="15.0" fill="rgb(231,192,39)" rx="2" ry="2" />
<text  x="675.09" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::span&lt;unsigned char, 18446744073709551615ul&gt;::span&lt;8ul&gt; (14,492,753 samples, 0.12%)</title><rect x="161.2" y="517" width="1.4" height="15.0" fill="rgb(248,11,53)" rx="2" ry="2" />
<text  x="164.17" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::owning_arena (14,492,753 samples, 0.12%)</title><rect x="989.8" y="629" width="1.4" height="15.0" fill="rgb(253,65,54)" rx="2" ry="2" />
<text  x="992.83" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (28,985,506 samples, 0.24%)</title><rect x="569.9" y="453" width="2.8" height="15.0" fill="rgb(227,185,18)" rx="2" ry="2" />
<text  x="572.91" y="463.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::Message const**&gt;, google::protobuf::Message const**&gt; (14,492,753 samples, 0.12%)</title><rect x="131.8" y="389" width="1.4" height="15.0" fill="rgb(236,213,39)" rx="2" ry="2" />
<text  x="134.78" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="665.1" y="501" width="1.4" height="15.0" fill="rgb(244,172,1)" rx="2" ry="2" />
<text  x="668.09" y="511.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="180.8" y="629" width="1.4" height="15.0" fill="rgb(226,94,20)" rx="2" ry="2" />
<text  x="183.77" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (43,478,259 samples, 0.36%)</title><rect x="532.1" y="453" width="4.2" height="15.0" fill="rgb(207,168,25)" rx="2" ry="2" />
<text  x="535.11" y="463.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::DestroyThread (43,478,259 samples, 0.36%)</title><rect x="10.0" y="757" width="4.2" height="15.0" fill="rgb(236,35,33)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (115,942,024 samples, 0.95%)</title><rect x="40.8" y="629" width="11.2" height="15.0" fill="rgb(231,158,39)" rx="2" ry="2" />
<text  x="43.79" y="639.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (43,478,259 samples, 0.36%)</title><rect x="687.5" y="517" width="4.2" height="15.0" fill="rgb(236,171,54)" rx="2" ry="2" />
<text  x="690.49" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;::base (14,492,753 samples, 0.12%)</title><rect x="985.6" y="517" width="1.4" height="15.0" fill="rgb(220,166,47)" rx="2" ry="2" />
<text  x="988.63" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetStringReference (14,492,753 samples, 0.12%)</title><rect x="407.5" y="517" width="1.4" height="15.0" fill="rgb(231,192,15)" rx="2" ry="2" />
<text  x="410.53" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="267.6" y="405" width="1.4" height="15.0" fill="rgb(224,35,10)" rx="2" ry="2" />
<text  x="270.56" y="415.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="89.8" y="453" width="1.4" height="15.0" fill="rgb(254,171,40)" rx="2" ry="2" />
<text  x="92.79" y="463.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="581" width="1.4" height="15.0" fill="rgb(238,63,49)" rx="2" ry="2" />
<text  x="1030.63" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::get (14,492,753 samples, 0.12%)</title><rect x="98.2" y="469" width="1.4" height="15.0" fill="rgb(212,104,12)" rx="2" ry="2" />
<text  x="101.19" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="646.9" y="453" width="4.2" height="15.0" fill="rgb(214,195,46)" rx="2" ry="2" />
<text  x="649.89" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::operator= (14,492,753 samples, 0.12%)</title><rect x="81.4" y="485" width="1.4" height="15.0" fill="rgb(245,52,20)" rx="2" ry="2" />
<text  x="84.39" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="718.3" y="549" width="1.4" height="15.0" fill="rgb(212,154,32)" rx="2" ry="2" />
<text  x="721.28" y="559.5" ></text>
</g>
<g >
<title>std::string::replace (57,971,012 samples, 0.47%)</title><rect x="1111.6" y="725" width="5.6" height="15.0" fill="rgb(208,8,53)" rx="2" ry="2" />
<text  x="1114.61" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="187.8" y="469" width="1.4" height="15.0" fill="rgb(235,95,18)" rx="2" ry="2" />
<text  x="190.77" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="183.6" y="581" width="1.4" height="15.0" fill="rgb(205,51,53)" rx="2" ry="2" />
<text  x="186.57" y="591.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt;&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="241.0" y="357" width="1.4" height="15.0" fill="rgb(252,130,43)" rx="2" ry="2" />
<text  x="243.96" y="367.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="379.5" y="581" width="1.4" height="15.0" fill="rgb(224,131,14)" rx="2" ry="2" />
<text  x="382.54" y="591.5" ></text>
</g>
<g >
<title>std::string::_M_leak_hard (14,492,753 samples, 0.12%)</title><rect x="165.4" y="325" width="1.4" height="15.0" fill="rgb(250,190,13)" rx="2" ry="2" />
<text  x="168.37" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="652.5" y="389" width="1.4" height="15.0" fill="rgb(233,220,2)" rx="2" ry="2" />
<text  x="655.49" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::DefaultSpan::~DefaultSpan (14,492,753 samples, 0.12%)</title><rect x="701.5" y="437" width="1.4" height="15.0" fill="rgb(224,50,53)" rx="2" ry="2" />
<text  x="704.48" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="618.9" y="373" width="1.4" height="15.0" fill="rgb(211,18,6)" rx="2" ry="2" />
<text  x="621.90" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (57,971,012 samples, 0.47%)</title><rect x="22.6" y="565" width="5.6" height="15.0" fill="rgb(229,99,37)" rx="2" ry="2" />
<text  x="25.60" y="575.5" ></text>
</g>
<g >
<title>prometheus::Gauge::Increment (14,492,753 samples, 0.12%)</title><rect x="844.3" y="613" width="1.4" height="15.0" fill="rgb(243,11,20)" rx="2" ry="2" />
<text  x="847.26" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;opentelemetry::v1::trace::SpanContext&gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="392.1" y="469" width="1.4" height="15.0" fill="rgb(246,55,12)" rx="2" ry="2" />
<text  x="395.14" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="327.7" y="421" width="1.4" height="15.0" fill="rgb(242,215,43)" rx="2" ry="2" />
<text  x="330.75" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;bool&gt; (14,492,753 samples, 0.12%)</title><rect x="911.4" y="549" width="1.4" height="15.0" fill="rgb(225,32,38)" rx="2" ry="2" />
<text  x="914.45" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (28,985,506 samples, 0.24%)</title><rect x="604.9" y="357" width="2.8" height="15.0" fill="rgb(222,16,26)" rx="2" ry="2" />
<text  x="607.90" y="367.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="572.7" y="469" width="2.8" height="15.0" fill="rgb(207,18,11)" rx="2" ry="2" />
<text  x="575.70" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (28,985,506 samples, 0.24%)</title><rect x="560.1" y="405" width="2.8" height="15.0" fill="rgb(223,146,39)" rx="2" ry="2" />
<text  x="563.11" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="404.7" y="485" width="1.4" height="15.0" fill="rgb(206,150,32)" rx="2" ry="2" />
<text  x="407.73" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="24.0" y="517" width="1.4" height="15.0" fill="rgb(213,26,8)" rx="2" ry="2" />
<text  x="27.00" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_repeated (14,492,753 samples, 0.12%)</title><rect x="921.2" y="581" width="1.4" height="15.0" fill="rgb(248,47,17)" rx="2" ry="2" />
<text  x="924.25" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::Resource (14,492,753 samples, 0.12%)</title><rect x="501.3" y="421" width="1.4" height="15.0" fill="rgb(226,104,38)" rx="2" ry="2" />
<text  x="504.32" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="653.9" y="405" width="1.4" height="15.0" fill="rgb(224,64,5)" rx="2" ry="2" />
<text  x="656.89" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="61.8" y="405" width="1.4" height="15.0" fill="rgb(205,104,29)" rx="2" ry="2" />
<text  x="64.79" y="415.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_aux&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="586.7" y="389" width="1.4" height="15.0" fill="rgb(232,156,0)" rx="2" ry="2" />
<text  x="589.70" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::RepeatedPtrFieldBase (14,492,753 samples, 0.12%)</title><rect x="501.3" y="373" width="1.4" height="15.0" fill="rgb(226,194,42)" rx="2" ry="2" />
<text  x="504.32" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="574.1" y="437" width="1.4" height="15.0" fill="rgb(210,18,27)" rx="2" ry="2" />
<text  x="577.10" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="410.3" y="485" width="1.4" height="15.0" fill="rgb(211,43,53)" rx="2" ry="2" />
<text  x="413.33" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::InRealOneof (14,492,753 samples, 0.12%)</title><rect x="407.5" y="469" width="1.4" height="15.0" fill="rgb(222,83,26)" rx="2" ry="2" />
<text  x="410.53" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::_M_destroy_node (14,492,753 samples, 0.12%)</title><rect x="61.8" y="421" width="1.4" height="15.0" fill="rgb(241,191,54)" rx="2" ry="2" />
<text  x="64.79" y="431.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1093.4" y="677" width="1.4" height="15.0" fill="rgb(225,79,25)" rx="2" ry="2" />
<text  x="1096.42" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::operator++ (14,492,753 samples, 0.12%)</title><rect x="35.2" y="629" width="1.4" height="15.0" fill="rgb(220,203,46)" rx="2" ry="2" />
<text  x="38.20" y="639.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="672.1" y="469" width="1.4" height="15.0" fill="rgb(209,71,21)" rx="2" ry="2" />
<text  x="675.09" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="1177.4" y="741" width="1.4" height="15.0" fill="rgb(221,224,49)" rx="2" ry="2" />
<text  x="1180.40" y="751.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="336.1" y="533" width="1.4" height="15.0" fill="rgb(218,184,30)" rx="2" ry="2" />
<text  x="339.14" y="543.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="32.4" y="661" width="1.4" height="15.0" fill="rgb(208,180,37)" rx="2" ry="2" />
<text  x="35.40" y="671.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="310.9" y="421" width="1.4" height="15.0" fill="rgb(209,145,41)" rx="2" ry="2" />
<text  x="313.95" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (14,492,753 samples, 0.12%)</title><rect x="602.1" y="533" width="1.4" height="15.0" fill="rgb(244,214,53)" rx="2" ry="2" />
<text  x="605.10" y="543.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (28,985,506 samples, 0.24%)</title><rect x="298.4" y="421" width="2.8" height="15.0" fill="rgb(235,224,18)" rx="2" ry="2" />
<text  x="301.35" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="351.5" y="517" width="2.8" height="15.0" fill="rgb(207,35,31)" rx="2" ry="2" />
<text  x="354.54" y="527.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="1097.6" y="613" width="1.4" height="15.0" fill="rgb(249,147,45)" rx="2" ry="2" />
<text  x="1100.62" y="623.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="147.2" y="373" width="1.4" height="15.0" fill="rgb(246,187,43)" rx="2" ry="2" />
<text  x="150.18" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="429.9" y="533" width="1.4" height="15.0" fill="rgb(223,69,29)" rx="2" ry="2" />
<text  x="432.93" y="543.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="600.7" y="357" width="1.4" height="15.0" fill="rgb(240,193,37)" rx="2" ry="2" />
<text  x="603.70" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::FieldOptions::_internal_weak (14,492,753 samples, 0.12%)</title><rect x="225.6" y="405" width="1.4" height="15.0" fill="rgb(244,107,52)" rx="2" ry="2" />
<text  x="228.56" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (43,478,259 samples, 0.36%)</title><rect x="698.7" y="533" width="4.2" height="15.0" fill="rgb(249,126,43)" rx="2" ry="2" />
<text  x="701.68" y="543.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (28,985,506 samples, 0.24%)</title><rect x="478.9" y="549" width="2.8" height="15.0" fill="rgb(252,10,32)" rx="2" ry="2" />
<text  x="481.92" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::LengthDelimitedSize (14,492,753 samples, 0.12%)</title><rect x="575.5" y="373" width="1.4" height="15.0" fill="rgb(222,55,29)" rx="2" ry="2" />
<text  x="578.50" y="383.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::CreateEvent (14,492,753 samples, 0.12%)</title><rect x="56.2" y="581" width="1.4" height="15.0" fill="rgb(216,79,4)" rx="2" ry="2" />
<text  x="59.19" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="438.3" y="421" width="1.4" height="15.0" fill="rgb(243,162,42)" rx="2" ry="2" />
<text  x="441.33" y="431.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="453.7" y="501" width="2.8" height="15.0" fill="rgb(247,176,40)" rx="2" ry="2" />
<text  x="456.72" y="511.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="716.9" y="405" width="1.4" height="15.0" fill="rgb(207,69,31)" rx="2" ry="2" />
<text  x="719.88" y="415.5" ></text>
</g>
<g >
<title>ExternalTalentUpGradeService::BatchOwnData (3,333,333,190 samples, 27.28%)</title><rect x="54.8" y="661" width="321.9" height="15.0" fill="rgb(213,117,38)" rx="2" ry="2" />
<text  x="57.79" y="671.5" >ExternalTalentUpGradeService::BatchOwnData</text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (289,855,060 samples, 2.37%)</title><rect x="61.8" y="565" width="28.0" height="15.0" fill="rgb(235,225,54)" rx="2" ry="2" />
<text  x="64.79" y="575.5" >o..</text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (14,492,753 samples, 0.12%)</title><rect x="344.5" y="533" width="1.4" height="15.0" fill="rgb(224,98,31)" rx="2" ry="2" />
<text  x="347.54" y="543.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="661" width="1.4" height="15.0" fill="rgb(237,100,41)" rx="2" ry="2" />
<text  x="1082.42" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (43,478,259 samples, 0.36%)</title><rect x="24.0" y="549" width="4.2" height="15.0" fill="rgb(223,166,2)" rx="2" ry="2" />
<text  x="27.00" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="183.6" y="565" width="1.4" height="15.0" fill="rgb(205,207,44)" rx="2" ry="2" />
<text  x="186.57" y="575.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="325" width="1.4" height="15.0" fill="rgb(221,60,40)" rx="2" ry="2" />
<text  x="652.69" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetBool (14,492,753 samples, 0.12%)</title><rect x="287.2" y="437" width="1.4" height="15.0" fill="rgb(211,160,39)" rx="2" ry="2" />
<text  x="290.15" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="607.7" y="389" width="1.4" height="15.0" fill="rgb(224,202,2)" rx="2" ry="2" />
<text  x="610.70" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="863.9" y="389" width="1.4" height="15.0" fill="rgb(230,1,43)" rx="2" ry="2" />
<text  x="866.86" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="662.3" y="357" width="1.4" height="15.0" fill="rgb(231,71,14)" rx="2" ry="2" />
<text  x="665.29" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::_Variant_base&lt;0ul&gt; (14,492,753 samples, 0.12%)</title><rect x="894.7" y="389" width="1.3" height="15.0" fill="rgb(229,148,18)" rx="2" ry="2" />
<text  x="897.65" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="651.1" y="437" width="1.4" height="15.0" fill="rgb(220,0,17)" rx="2" ry="2" />
<text  x="654.09" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::SetArena (14,492,753 samples, 0.12%)</title><rect x="597.9" y="389" width="1.4" height="15.0" fill="rgb(230,202,25)" rx="2" ry="2" />
<text  x="600.90" y="399.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::CreateService (565,217,367 samples, 4.63%)</title><rect x="849.9" y="629" width="54.5" height="15.0" fill="rgb(232,192,44)" rx="2" ry="2" />
<text  x="852.86" y="639.5" >NS_AC..</text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="691.7" y="501" width="1.4" height="15.0" fill="rgb(225,170,4)" rx="2" ry="2" />
<text  x="694.68" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;int&gt;, true&gt;::_S_cget (14,492,753 samples, 0.12%)</title><rect x="189.2" y="533" width="1.4" height="15.0" fill="rgb(238,179,13)" rx="2" ry="2" />
<text  x="192.17" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (14,492,753 samples, 0.12%)</title><rect x="386.5" y="485" width="1.4" height="15.0" fill="rgb(214,106,36)" rx="2" ry="2" />
<text  x="389.54" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;::operator++ (14,492,753 samples, 0.12%)</title><rect x="889.1" y="373" width="1.4" height="15.0" fill="rgb(241,104,4)" rx="2" ry="2" />
<text  x="892.05" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::_Tuple_impl (14,492,753 samples, 0.12%)</title><rect x="550.3" y="437" width="1.4" height="15.0" fill="rgb(229,213,45)" rx="2" ry="2" />
<text  x="553.31" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_check_len (14,492,753 samples, 0.12%)</title><rect x="933.8" y="517" width="1.4" height="15.0" fill="rgb(250,178,50)" rx="2" ry="2" />
<text  x="936.84" y="527.5" ></text>
</g>
<g >
<title>[unknown] (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="757" width="1.4" height="15.0" fill="rgb(227,108,21)" rx="2" ry="2" />
<text  x="1082.42" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="358.5" y="469" width="1.4" height="15.0" fill="rgb(249,129,2)" rx="2" ry="2" />
<text  x="361.54" y="479.5" ></text>
</g>
<g >
<title>TracerUtil::CheckIsSample (14,492,753 samples, 0.12%)</title><rect x="57.6" y="565" width="1.4" height="15.0" fill="rgb(250,193,32)" rx="2" ry="2" />
<text  x="60.59" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="667.9" y="309" width="1.4" height="15.0" fill="rgb(215,117,28)" rx="2" ry="2" />
<text  x="670.89" y="319.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;google::protobuf::Message const*, std::move_iterator&lt;google::protobuf::Message const**&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="130.4" y="405" width="1.4" height="15.0" fill="rgb(221,8,2)" rx="2" ry="2" />
<text  x="133.38" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="173.8" y="533" width="1.4" height="15.0" fill="rgb(225,98,35)" rx="2" ry="2" />
<text  x="176.77" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="866.7" y="373" width="2.8" height="15.0" fill="rgb(212,124,2)" rx="2" ry="2" />
<text  x="869.65" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::RuntimeContext::GetCurrent (14,492,753 samples, 0.12%)</title><rect x="162.6" y="485" width="1.4" height="15.0" fill="rgb(245,113,19)" rx="2" ry="2" />
<text  x="165.57" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;int&gt; (28,985,506 samples, 0.24%)</title><rect x="227.0" y="421" width="2.8" height="15.0" fill="rgb(225,10,36)" rx="2" ry="2" />
<text  x="229.96" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="597.9" y="453" width="1.4" height="15.0" fill="rgb(254,167,35)" rx="2" ry="2" />
<text  x="600.90" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="74.4" y="389" width="2.8" height="15.0" fill="rgb(210,71,46)" rx="2" ry="2" />
<text  x="77.39" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::SetString (28,985,506 samples, 0.24%)</title><rect x="127.6" y="453" width="2.8" height="15.0" fill="rgb(212,207,39)" rx="2" ry="2" />
<text  x="130.58" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="123.4" y="437" width="1.4" height="15.0" fill="rgb(212,25,32)" rx="2" ry="2" />
<text  x="126.38" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_refdata (14,492,753 samples, 0.12%)</title><rect x="143.0" y="565" width="1.4" height="15.0" fill="rgb(225,172,21)" rx="2" ry="2" />
<text  x="145.98" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="667.9" y="357" width="1.4" height="15.0" fill="rgb(206,124,49)" rx="2" ry="2" />
<text  x="670.89" y="367.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="610.5" y="517" width="1.4" height="15.0" fill="rgb(208,87,48)" rx="2" ry="2" />
<text  x="613.50" y="527.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="179.4" y="613" width="1.4" height="15.0" fill="rgb(246,156,50)" rx="2" ry="2" />
<text  x="182.37" y="623.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Reset (28,985,506 samples, 0.24%)</title><rect x="11.4" y="725" width="2.8" height="15.0" fill="rgb(212,142,52)" rx="2" ry="2" />
<text  x="14.40" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::IsMapFieldInApi (14,492,753 samples, 0.12%)</title><rect x="19.8" y="565" width="1.4" height="15.0" fill="rgb(236,219,6)" rx="2" ry="2" />
<text  x="22.80" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (14,492,753 samples, 0.12%)</title><rect x="516.7" y="421" width="1.4" height="15.0" fill="rgb(227,82,24)" rx="2" ry="2" />
<text  x="519.71" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapField&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (72,463,765 samples, 0.59%)</title><rect x="1071.0" y="773" width="7.0" height="15.0" fill="rgb(252,66,6)" rx="2" ry="2" />
<text  x="1074.02" y="783.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (28,985,506 samples, 0.24%)</title><rect x="876.5" y="341" width="2.8" height="15.0" fill="rgb(243,142,46)" rx="2" ry="2" />
<text  x="879.45" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_internal_key (14,492,753 samples, 0.12%)</title><rect x="152.8" y="405" width="1.4" height="15.0" fill="rgb(231,29,32)" rx="2" ry="2" />
<text  x="155.78" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;int, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="483.1" y="501" width="1.4" height="15.0" fill="rgb(206,87,32)" rx="2" ry="2" />
<text  x="486.12" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="490.1" y="469" width="1.4" height="15.0" fill="rgb(244,215,39)" rx="2" ry="2" />
<text  x="493.12" y="479.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::TriggerEvent (14,492,753 samples, 0.12%)</title><rect x="908.6" y="613" width="1.4" height="15.0" fill="rgb(232,175,3)" rx="2" ry="2" />
<text  x="911.65" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (43,478,259 samples, 0.36%)</title><rect x="304.0" y="421" width="4.1" height="15.0" fill="rgb(251,93,18)" rx="2" ry="2" />
<text  x="306.95" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (202,898,542 samples, 1.66%)</title><rect x="522.3" y="533" width="19.6" height="15.0" fill="rgb(251,48,19)" rx="2" ry="2" />
<text  x="525.31" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="438.3" y="245" width="1.4" height="15.0" fill="rgb(225,189,25)" rx="2" ry="2" />
<text  x="441.33" y="255.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::clear_value (14,492,753 samples, 0.12%)</title><rect x="495.7" y="181" width="1.4" height="15.0" fill="rgb(210,64,51)" rx="2" ry="2" />
<text  x="498.72" y="191.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (14,492,753 samples, 0.12%)</title><rect x="50.6" y="613" width="1.4" height="15.0" fill="rgb(226,152,47)" rx="2" ry="2" />
<text  x="53.59" y="623.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::OnThreadExitList::~OnThreadExitList (14,492,753 samples, 0.12%)</title><rect x="12.8" y="645" width="1.4" height="15.0" fill="rgb(212,176,23)" rx="2" ry="2" />
<text  x="15.80" y="655.5" ></text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="476.1" y="613" width="1.4" height="15.0" fill="rgb(251,44,7)" rx="2" ry="2" />
<text  x="479.12" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::FindHelper&lt;std::string&gt; (43,478,259 samples, 0.36%)</title><rect x="1065.4" y="757" width="4.2" height="15.0" fill="rgb(235,195,32)" rx="2" ry="2" />
<text  x="1068.42" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (28,985,506 samples, 0.24%)</title><rect x="495.7" y="357" width="2.8" height="15.0" fill="rgb(248,107,4)" rx="2" ry="2" />
<text  x="498.72" y="367.5" ></text>
</g>
<g >
<title>Log::WriteLog (14,492,753 samples, 0.12%)</title><rect x="53.4" y="629" width="1.4" height="15.0" fill="rgb(222,217,12)" rx="2" ry="2" />
<text  x="56.39" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="1080.8" y="757" width="1.4" height="15.0" fill="rgb(247,125,45)" rx="2" ry="2" />
<text  x="1083.82" y="767.5" ></text>
</g>
<g >
<title>fmt::v8::detail::parse_replacement_field&lt;char, void fmt::v8::detail::vformat_to&lt;char&gt; (14,492,753 samples, 0.12%)</title><rect x="17.0" y="693" width="1.4" height="15.0" fill="rgb(247,177,15)" rx="2" ry="2" />
<text  x="20.00" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="392.1" y="485" width="1.4" height="15.0" fill="rgb(254,90,11)" rx="2" ry="2" />
<text  x="395.14" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::containing_oneof (14,492,753 samples, 0.12%)</title><rect x="103.8" y="389" width="1.4" height="15.0" fill="rgb(241,8,45)" rx="2" ry="2" />
<text  x="106.78" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::PrintMaybeWithMarker (14,492,753 samples, 0.12%)</title><rect x="211.6" y="469" width="1.4" height="15.0" fill="rgb(218,111,19)" rx="2" ry="2" />
<text  x="214.57" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::MapIterator::MapIterator (14,492,753 samples, 0.12%)</title><rect x="368.3" y="501" width="1.4" height="15.0" fill="rgb(252,32,13)" rx="2" ry="2" />
<text  x="371.34" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map (14,492,753 samples, 0.12%)</title><rect x="24.0" y="533" width="1.4" height="15.0" fill="rgb(229,102,33)" rx="2" ry="2" />
<text  x="27.00" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::BucketNumber&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="896.0" y="501" width="1.4" height="15.0" fill="rgb(241,33,16)" rx="2" ry="2" />
<text  x="899.05" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (57,971,012 samples, 0.47%)</title><rect x="621.7" y="437" width="5.6" height="15.0" fill="rgb(221,179,40)" rx="2" ry="2" />
<text  x="624.70" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::size (14,492,753 samples, 0.12%)</title><rect x="593.7" y="325" width="1.4" height="15.0" fill="rgb(213,97,2)" rx="2" ry="2" />
<text  x="596.70" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="70.2" y="373" width="1.4" height="15.0" fill="rgb(253,115,43)" rx="2" ry="2" />
<text  x="73.19" y="383.5" ></text>
</g>
<g >
<title>std::string::length (14,492,753 samples, 0.12%)</title><rect x="155.6" y="405" width="1.4" height="15.0" fill="rgb(232,94,20)" rx="2" ry="2" />
<text  x="158.58" y="415.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (28,985,506 samples, 0.24%)</title><rect x="572.7" y="501" width="2.8" height="15.0" fill="rgb(254,122,26)" rx="2" ry="2" />
<text  x="575.70" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (811,594,168 samples, 6.64%)</title><rect x="910.0" y="645" width="78.4" height="15.0" fill="rgb(254,194,29)" rx="2" ry="2" />
<text  x="913.05" y="655.5" >google::p..</text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="670.7" y="421" width="1.4" height="15.0" fill="rgb(234,17,14)" rx="2" ry="2" />
<text  x="673.69" y="431.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="533.5" y="261" width="1.4" height="15.0" fill="rgb(207,116,45)" rx="2" ry="2" />
<text  x="536.51" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (43,478,259 samples, 0.36%)</title><rect x="592.3" y="437" width="4.2" height="15.0" fill="rgb(217,143,10)" rx="2" ry="2" />
<text  x="595.30" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::StringTypeHandler::Delete (14,492,753 samples, 0.12%)</title><rect x="1078.0" y="725" width="1.4" height="15.0" fill="rgb(220,98,41)" rx="2" ry="2" />
<text  x="1081.02" y="735.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (14,492,753 samples, 0.12%)</title><rect x="716.9" y="357" width="1.4" height="15.0" fill="rgb(237,40,49)" rx="2" ry="2" />
<text  x="719.88" y="367.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="463.5" y="469" width="1.4" height="15.0" fill="rgb(249,222,16)" rx="2" ry="2" />
<text  x="466.52" y="479.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (14,492,753 samples, 0.12%)</title><rect x="621.7" y="357" width="1.4" height="15.0" fill="rgb(252,45,30)" rx="2" ry="2" />
<text  x="624.70" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;std::string const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="155.6" y="453" width="1.4" height="15.0" fill="rgb(210,134,31)" rx="2" ry="2" />
<text  x="158.58" y="463.5" ></text>
</g>
<g >
<title>DataAgentExporter::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="893.3" y="421" width="1.4" height="15.0" fill="rgb(213,115,5)" rx="2" ry="2" />
<text  x="896.25" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::BackUp (14,492,753 samples, 0.12%)</title><rect x="330.5" y="533" width="1.4" height="15.0" fill="rgb(205,42,16)" rx="2" ry="2" />
<text  x="333.55" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::~AnyValue (14,492,753 samples, 0.12%)</title><rect x="494.3" y="101" width="1.4" height="15.0" fill="rgb(215,57,45)" rx="2" ry="2" />
<text  x="497.32" y="111.5" ></text>
</g>
<g >
<title>__mempcpy_sse2 (14,492,753 samples, 0.12%)</title><rect x="1164.8" y="789" width="1.4" height="15.0" fill="rgb(212,98,10)" rx="2" ry="2" />
<text  x="1167.80" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="499.9" y="421" width="1.4" height="15.0" fill="rgb(232,8,14)" rx="2" ry="2" />
<text  x="502.92" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="693.1" y="405" width="1.4" height="15.0" fill="rgb(242,176,2)" rx="2" ry="2" />
<text  x="696.08" y="415.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="532.1" y="373" width="1.4" height="15.0" fill="rgb(244,168,2)" rx="2" ry="2" />
<text  x="535.11" y="383.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="629" width="1.4" height="15.0" fill="rgb(221,214,16)" rx="2" ry="2" />
<text  x="1030.63" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (101,449,271 samples, 0.83%)</title><rect x="21.2" y="613" width="9.8" height="15.0" fill="rgb(209,61,47)" rx="2" ry="2" />
<text  x="24.20" y="623.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="473.3" y="437" width="1.4" height="15.0" fill="rgb(227,7,5)" rx="2" ry="2" />
<text  x="476.32" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="590.9" y="309" width="1.4" height="15.0" fill="rgb(226,68,19)" rx="2" ry="2" />
<text  x="593.90" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (28,985,506 samples, 0.24%)</title><rect x="698.7" y="517" width="2.8" height="15.0" fill="rgb(217,121,29)" rx="2" ry="2" />
<text  x="701.68" y="527.5" ></text>
</g>
<g >
<title>RPC::DB::BatchAsync (840,579,674 samples, 6.88%)</title><rect x="56.2" y="629" width="81.2" height="15.0" fill="rgb(223,22,21)" rx="2" ry="2" />
<text  x="59.19" y="639.5" >RPC::DB::..</text>
</g>
<g >
<title>RPC::Respond (608,695,626 samples, 4.98%)</title><rect x="417.3" y="661" width="58.8" height="15.0" fill="rgb(237,160,44)" rx="2" ry="2" />
<text  x="420.33" y="671.5" >RPC::R..</text>
</g>
<g >
<title>TBusppDriver::OnTick (28,985,506 samples, 0.24%)</title><rect x="728.1" y="693" width="2.8" height="15.0" fill="rgb(231,19,32)" rx="2" ry="2" />
<text  x="731.08" y="703.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (72,463,765 samples, 0.59%)</title><rect x="504.1" y="469" width="7.0" height="15.0" fill="rgb(234,227,11)" rx="2" ry="2" />
<text  x="507.12" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="574.1" y="421" width="1.4" height="15.0" fill="rgb(254,220,50)" rx="2" ry="2" />
<text  x="577.10" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="629" width="1.4" height="15.0" fill="rgb(205,186,39)" rx="2" ry="2" />
<text  x="1082.42" y="639.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="485" width="1.4" height="15.0" fill="rgb(207,12,18)" rx="2" ry="2" />
<text  x="935.44" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (188,405,789 samples, 1.54%)</title><rect x="425.7" y="581" width="18.2" height="15.0" fill="rgb(252,136,14)" rx="2" ry="2" />
<text  x="428.73" y="591.5" ></text>
</g>
<g >
<title>__vsscanf (86,956,518 samples, 0.71%)</title><rect x="1055.6" y="773" width="8.4" height="15.0" fill="rgb(227,14,1)" rx="2" ry="2" />
<text  x="1058.62" y="783.5" ></text>
</g>
<g >
<title>std::mutex::lock (14,492,753 samples, 0.12%)</title><rect x="50.6" y="549" width="1.4" height="15.0" fill="rgb(220,224,18)" rx="2" ry="2" />
<text  x="53.59" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (57,971,012 samples, 0.47%)</title><rect x="194.8" y="517" width="5.6" height="15.0" fill="rgb(250,48,0)" rx="2" ry="2" />
<text  x="197.77" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TransparentSupport&lt;std::string&gt;::hash::operator (28,985,506 samples, 0.24%)</title><rect x="1066.8" y="725" width="2.8" height="15.0" fill="rgb(238,185,44)" rx="2" ry="2" />
<text  x="1069.82" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;NS_ACO::ThreadID const&amp;&gt;, std::tuple&lt;&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="903.0" y="581" width="1.4" height="15.0" fill="rgb(242,178,49)" rx="2" ry="2" />
<text  x="906.05" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="716.9" y="373" width="1.4" height="15.0" fill="rgb(243,110,36)" rx="2" ry="2" />
<text  x="719.88" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="611.9" y="405" width="1.4" height="15.0" fill="rgb(210,219,11)" rx="2" ry="2" />
<text  x="614.90" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="373.9" y="565" width="1.4" height="15.0" fill="rgb(233,131,5)" rx="2" ry="2" />
<text  x="376.94" y="575.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="896.0" y="469" width="1.4" height="15.0" fill="rgb(244,156,35)" rx="2" ry="2" />
<text  x="899.05" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="687.5" y="405" width="2.8" height="15.0" fill="rgb(217,5,21)" rx="2" ry="2" />
<text  x="690.49" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::FieldsByNumberEq::operator (14,492,753 samples, 0.12%)</title><rect x="406.1" y="389" width="1.4" height="15.0" fill="rgb(233,156,53)" rx="2" ry="2" />
<text  x="409.13" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="536.3" y="373" width="1.4" height="15.0" fill="rgb(234,178,38)" rx="2" ry="2" />
<text  x="539.31" y="383.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="39.4" y="517" width="1.4" height="15.0" fill="rgb(247,177,46)" rx="2" ry="2" />
<text  x="42.40" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::~_Move_ctor_base (14,492,753 samples, 0.12%)</title><rect x="513.9" y="389" width="1.4" height="15.0" fill="rgb(221,201,9)" rx="2" ry="2" />
<text  x="516.91" y="399.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::_InternalParse (57,971,012 samples, 0.47%)</title><rect x="1096.2" y="741" width="5.6" height="15.0" fill="rgb(208,28,32)" rx="2" ry="2" />
<text  x="1099.22" y="751.5" ></text>
</g>
<g >
<title>NS_ACO::ScopeClock::Start (43,478,259 samples, 0.36%)</title><rect x="751.9" y="645" width="4.2" height="15.0" fill="rgb(214,39,23)" rx="2" ry="2" />
<text  x="754.87" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="646.9" y="421" width="1.4" height="15.0" fill="rgb(248,49,32)" rx="2" ry="2" />
<text  x="649.89" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="574.1" y="373" width="1.4" height="15.0" fill="rgb(239,116,10)" rx="2" ry="2" />
<text  x="577.10" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="180.8" y="581" width="1.4" height="15.0" fill="rgb(242,198,47)" rx="2" ry="2" />
<text  x="183.77" y="591.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="334.7" y="517" width="1.4" height="15.0" fill="rgb(238,30,18)" rx="2" ry="2" />
<text  x="337.74" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="554.5" y="437" width="1.4" height="15.0" fill="rgb(245,23,1)" rx="2" ry="2" />
<text  x="557.51" y="447.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (28,985,506 samples, 0.24%)</title><rect x="103.8" y="565" width="2.8" height="15.0" fill="rgb(230,169,46)" rx="2" ry="2" />
<text  x="106.78" y="575.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="441.1" y="405" width="1.4" height="15.0" fill="rgb(207,198,35)" rx="2" ry="2" />
<text  x="444.13" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_grab (14,492,753 samples, 0.12%)</title><rect x="1155.0" y="725" width="1.4" height="15.0" fill="rgb(236,54,14)" rx="2" ry="2" />
<text  x="1158.01" y="735.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="491.5" y="341" width="1.4" height="15.0" fill="rgb(209,21,2)" rx="2" ry="2" />
<text  x="494.52" y="351.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_aux&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="691.7" y="357" width="1.4" height="15.0" fill="rgb(227,193,46)" rx="2" ry="2" />
<text  x="694.68" y="367.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, long, google::protobuf::Message const**, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="984.2" y="517" width="1.4" height="15.0" fill="rgb(214,201,0)" rx="2" ry="2" />
<text  x="987.23" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="635.7" y="421" width="1.4" height="15.0" fill="rgb(221,13,21)" rx="2" ry="2" />
<text  x="638.69" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (14,492,753 samples, 0.12%)</title><rect x="903.0" y="597" width="1.4" height="15.0" fill="rgb(240,24,10)" rx="2" ry="2" />
<text  x="906.05" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::SetStartTime (14,492,753 samples, 0.12%)</title><rect x="95.4" y="469" width="1.4" height="15.0" fill="rgb(251,19,24)" rx="2" ry="2" />
<text  x="98.39" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::clear (14,492,753 samples, 0.12%)</title><rect x="415.9" y="581" width="1.4" height="15.0" fill="rgb(243,130,43)" rx="2" ry="2" />
<text  x="418.93" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="716.9" y="533" width="1.4" height="15.0" fill="rgb(254,4,39)" rx="2" ry="2" />
<text  x="719.88" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapField&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (14,492,753 samples, 0.12%)</title><rect x="1071.0" y="741" width="1.4" height="15.0" fill="rgb(249,19,15)" rx="2" ry="2" />
<text  x="1074.02" y="751.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="651.1" y="373" width="1.4" height="15.0" fill="rgb(244,0,42)" rx="2" ry="2" />
<text  x="654.09" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, opentelemetry::v1::sdk::trace::Recordable*, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="98.2" y="421" width="1.4" height="15.0" fill="rgb(234,202,47)" rx="2" ry="2" />
<text  x="101.19" y="431.5" ></text>
</g>
<g >
<title>std::__mutex_base::__mutex_base (14,492,753 samples, 0.12%)</title><rect x="393.5" y="533" width="1.4" height="15.0" fill="rgb(240,77,51)" rx="2" ry="2" />
<text  x="396.53" y="543.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="520.9" y="517" width="1.4" height="15.0" fill="rgb(223,111,30)" rx="2" ry="2" />
<text  x="523.91" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="534.9" y="421" width="1.4" height="15.0" fill="rgb(205,24,26)" rx="2" ry="2" />
<text  x="537.91" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="266.2" y="357" width="1.4" height="15.0" fill="rgb(211,68,1)" rx="2" ry="2" />
<text  x="269.16" y="367.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1l, 1l&gt;, long, true, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="508.3" y="389" width="1.4" height="15.0" fill="rgb(229,154,1)" rx="2" ry="2" />
<text  x="511.32" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (14,492,753 samples, 0.12%)</title><rect x="670.7" y="485" width="1.4" height="15.0" fill="rgb(239,42,44)" rx="2" ry="2" />
<text  x="673.69" y="495.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="914.2" y="549" width="1.4" height="15.0" fill="rgb(215,211,43)" rx="2" ry="2" />
<text  x="917.25" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,492,753 samples, 0.12%)</title><rect x="15.6" y="677" width="1.4" height="15.0" fill="rgb(245,137,18)" rx="2" ry="2" />
<text  x="18.60" y="687.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (28,985,506 samples, 0.24%)</title><rect x="161.2" y="549" width="2.8" height="15.0" fill="rgb(217,196,33)" rx="2" ry="2" />
<text  x="164.17" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::InstrumentationScope&gt; (14,492,753 samples, 0.12%)</title><rect x="435.5" y="469" width="1.4" height="15.0" fill="rgb(229,74,52)" rx="2" ry="2" />
<text  x="438.53" y="479.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (43,478,259 samples, 0.36%)</title><rect x="427.1" y="549" width="4.2" height="15.0" fill="rgb(247,126,44)" rx="2" ry="2" />
<text  x="430.13" y="559.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="954.8" y="421" width="1.4" height="15.0" fill="rgb(212,38,37)" rx="2" ry="2" />
<text  x="957.84" y="431.5" ></text>
</g>
<g >
<title>tbuspb::protobuf::Arena::CreateMaybeMessage&lt;tbus2::client::PingRes&gt; (14,492,753 samples, 0.12%)</title><rect x="1131.2" y="741" width="1.4" height="15.0" fill="rgb(224,92,21)" rx="2" ry="2" />
<text  x="1134.21" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::erase (28,985,506 samples, 0.24%)</title><rect x="61.8" y="517" width="2.8" height="15.0" fill="rgb(251,163,7)" rx="2" ry="2" />
<text  x="64.79" y="527.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (1,507,246,312 samples, 12.34%)</title><rect x="192.0" y="613" width="145.5" height="15.0" fill="rgb(228,197,11)" rx="2" ry="2" />
<text  x="194.97" y="623.5" >PBInterpreter::Get..</text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="931.0" y="517" width="1.4" height="15.0" fill="rgb(230,193,16)" rx="2" ry="2" />
<text  x="934.04" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="347.3" y="485" width="1.4" height="15.0" fill="rgb(235,210,5)" rx="2" ry="2" />
<text  x="350.34" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (14,492,753 samples, 0.12%)</title><rect x="667.9" y="213" width="1.4" height="15.0" fill="rgb(216,5,5)" rx="2" ry="2" />
<text  x="670.89" y="223.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (347,826,072 samples, 2.85%)</title><rect x="214.4" y="469" width="33.6" height="15.0" fill="rgb(232,109,45)" rx="2" ry="2" />
<text  x="217.37" y="479.5" >go..</text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (130,434,777 samples, 1.07%)</title><rect x="448.1" y="549" width="12.6" height="15.0" fill="rgb(228,209,30)" rx="2" ry="2" />
<text  x="451.13" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="571.3" y="373" width="1.4" height="15.0" fill="rgb(253,217,23)" rx="2" ry="2" />
<text  x="574.30" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="145.8" y="453" width="1.4" height="15.0" fill="rgb(214,194,53)" rx="2" ry="2" />
<text  x="148.78" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::base (14,492,753 samples, 0.12%)</title><rect x="681.9" y="421" width="1.4" height="15.0" fill="rgb(211,51,7)" rx="2" ry="2" />
<text  x="684.89" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="187.8" y="565" width="1.4" height="15.0" fill="rgb(245,119,7)" rx="2" ry="2" />
<text  x="190.77" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Descriptor::options (14,492,753 samples, 0.12%)</title><rect x="413.1" y="453" width="1.4" height="15.0" fill="rgb(215,220,42)" rx="2" ry="2" />
<text  x="416.13" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;::operator (28,985,506 samples, 0.24%)</title><rect x="431.3" y="485" width="2.8" height="15.0" fill="rgb(213,159,53)" rx="2" ry="2" />
<text  x="434.33" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="946.4" y="565" width="1.4" height="15.0" fill="rgb(237,146,45)" rx="2" ry="2" />
<text  x="949.44" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (43,478,259 samples, 0.36%)</title><rect x="672.1" y="517" width="4.2" height="15.0" fill="rgb(231,75,9)" rx="2" ry="2" />
<text  x="675.09" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::_M_get_insert_unique_pos (14,492,753 samples, 0.12%)</title><rect x="376.7" y="549" width="1.4" height="15.0" fill="rgb(212,112,49)" rx="2" ry="2" />
<text  x="379.74" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (28,985,506 samples, 0.24%)</title><rect x="427.1" y="533" width="2.8" height="15.0" fill="rgb(225,21,35)" rx="2" ry="2" />
<text  x="430.13" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="492.9" y="421" width="1.4" height="15.0" fill="rgb(236,63,53)" rx="2" ry="2" />
<text  x="495.92" y="431.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="151.4" y="469" width="1.4" height="15.0" fill="rgb(254,214,33)" rx="2" ry="2" />
<text  x="154.38" y="479.5" ></text>
</g>
<g >
<title>prometheus::Gauge::Change (14,492,753 samples, 0.12%)</title><rect x="844.3" y="597" width="1.4" height="15.0" fill="rgb(237,6,17)" rx="2" ry="2" />
<text  x="847.26" y="607.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;google::protobuf::Message const**&gt; (14,492,753 samples, 0.12%)</title><rect x="131.8" y="357" width="1.4" height="15.0" fill="rgb(206,185,40)" rx="2" ry="2" />
<text  x="134.78" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (188,405,789 samples, 1.54%)</title><rect x="522.3" y="517" width="18.2" height="15.0" fill="rgb(253,103,45)" rx="2" ry="2" />
<text  x="525.31" y="527.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="686.1" y="533" width="1.4" height="15.0" fill="rgb(215,11,46)" rx="2" ry="2" />
<text  x="689.09" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="394.9" y="549" width="1.4" height="15.0" fill="rgb(230,78,51)" rx="2" ry="2" />
<text  x="397.93" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (811,594,168 samples, 6.64%)</title><rect x="910.0" y="613" width="78.4" height="15.0" fill="rgb(247,199,23)" rx="2" ry="2" />
<text  x="913.05" y="623.5" >google::p..</text>
</g>
<g >
<title>RPC::Wait (260,869,554 samples, 2.14%)</title><rect x="541.9" y="565" width="25.2" height="15.0" fill="rgb(206,160,10)" rx="2" ry="2" />
<text  x="544.91" y="575.5" >R..</text>
</g>
<g >
<title>google::protobuf::internal::TaggedStringPtr::as_int (14,492,753 samples, 0.12%)</title><rect x="492.9" y="293" width="1.4" height="15.0" fill="rgb(210,77,25)" rx="2" ry="2" />
<text  x="495.92" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="572.7" y="421" width="1.4" height="15.0" fill="rgb(254,47,35)" rx="2" ry="2" />
<text  x="575.70" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (115,942,024 samples, 0.95%)</title><rect x="590.9" y="501" width="11.2" height="15.0" fill="rgb(254,57,15)" rx="2" ry="2" />
<text  x="593.90" y="511.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (43,478,259 samples, 0.36%)</title><rect x="145.8" y="517" width="4.2" height="15.0" fill="rgb(250,114,7)" rx="2" ry="2" />
<text  x="148.78" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="428.5" y="421" width="1.4" height="15.0" fill="rgb(217,169,25)" rx="2" ry="2" />
<text  x="431.53" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="238.2" y="357" width="1.4" height="15.0" fill="rgb(229,114,39)" rx="2" ry="2" />
<text  x="241.16" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (14,492,753 samples, 0.12%)</title><rect x="1149.4" y="741" width="1.4" height="15.0" fill="rgb(254,117,6)" rx="2" ry="2" />
<text  x="1152.41" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_get_Tp_allocator (14,492,753 samples, 0.12%)</title><rect x="933.8" y="485" width="1.4" height="15.0" fill="rgb(221,192,3)" rx="2" ry="2" />
<text  x="936.84" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="364.1" y="421" width="1.4" height="15.0" fill="rgb(236,108,30)" rx="2" ry="2" />
<text  x="367.14" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="690.3" y="469" width="1.4" height="15.0" fill="rgb(246,46,42)" rx="2" ry="2" />
<text  x="693.28" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="509.7" y="437" width="1.4" height="15.0" fill="rgb(208,53,41)" rx="2" ry="2" />
<text  x="512.72" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="618.9" y="213" width="1.4" height="15.0" fill="rgb(224,222,16)" rx="2" ry="2" />
<text  x="621.90" y="223.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (14,492,753 samples, 0.12%)</title><rect x="840.1" y="661" width="1.4" height="15.0" fill="rgb(212,222,24)" rx="2" ry="2" />
<text  x="843.06" y="671.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::ThreadLocalContextStorage::GetCurrent (14,492,753 samples, 0.12%)</title><rect x="511.1" y="421" width="1.4" height="15.0" fill="rgb(228,129,19)" rx="2" ry="2" />
<text  x="514.12" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="635.7" y="389" width="1.4" height="15.0" fill="rgb(243,177,26)" rx="2" ry="2" />
<text  x="638.69" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize64 (14,492,753 samples, 0.12%)</title><rect x="429.9" y="389" width="1.4" height="15.0" fill="rgb(251,149,29)" rx="2" ry="2" />
<text  x="432.93" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::mutable_value (14,492,753 samples, 0.12%)</title><rect x="442.5" y="485" width="1.4" height="15.0" fill="rgb(209,89,35)" rx="2" ry="2" />
<text  x="445.53" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::GeneratedMessageFactory::GetPrototype (14,492,753 samples, 0.12%)</title><rect x="968.8" y="565" width="1.4" height="15.0" fill="rgb(233,45,50)" rx="2" ry="2" />
<text  x="971.84" y="575.5" ></text>
</g>
<g >
<title>RPC::DepositService::GetSpecifyPropsAsync (420,289,837 samples, 3.44%)</title><rect x="137.4" y="645" width="40.6" height="15.0" fill="rgb(235,151,31)" rx="2" ry="2" />
<text  x="140.38" y="655.5" >RPC..</text>
</g>
<g >
<title>google::protobuf::Reflection::MutableRaw&lt;google::protobuf::internal::MapFieldBase&gt; (14,492,753 samples, 0.12%)</title><rect x="368.3" y="469" width="1.4" height="15.0" fill="rgb(253,7,5)" rx="2" ry="2" />
<text  x="371.34" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::NewString&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="973.0" y="517" width="1.4" height="15.0" fill="rgb(240,89,42)" rx="2" ry="2" />
<text  x="976.04" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="875.1" y="165" width="1.4" height="15.0" fill="rgb(212,108,35)" rx="2" ry="2" />
<text  x="878.05" y="175.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_internal_mutable_value (14,492,753 samples, 0.12%)</title><rect x="442.5" y="469" width="1.4" height="15.0" fill="rgb(233,183,10)" rx="2" ry="2" />
<text  x="445.53" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (57,971,012 samples, 0.47%)</title><rect x="498.5" y="469" width="5.6" height="15.0" fill="rgb(220,178,40)" rx="2" ry="2" />
<text  x="501.52" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="677.7" y="565" width="1.4" height="15.0" fill="rgb(209,21,47)" rx="2" ry="2" />
<text  x="680.69" y="575.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order (14,492,753 samples, 0.12%)</title><rect x="78.6" y="389" width="1.4" height="15.0" fill="rgb(231,93,10)" rx="2" ry="2" />
<text  x="81.59" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::GetCurrentSpan (43,478,259 samples, 0.36%)</title><rect x="511.1" y="469" width="4.2" height="15.0" fill="rgb(236,207,31)" rx="2" ry="2" />
<text  x="514.12" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="519.5" y="533" width="1.4" height="15.0" fill="rgb(253,82,46)" rx="2" ry="2" />
<text  x="522.51" y="543.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="680.5" y="565" width="2.8" height="15.0" fill="rgb(228,14,23)" rx="2" ry="2" />
<text  x="683.49" y="575.5" ></text>
</g>
<g >
<title>TracerUtil::GetTracer (28,985,506 samples, 0.24%)</title><rect x="856.9" y="533" width="2.8" height="15.0" fill="rgb(224,228,20)" rx="2" ry="2" />
<text  x="859.86" y="543.5" ></text>
</g>
<g >
<title>std::string::_M_leak (14,492,753 samples, 0.12%)</title><rect x="165.4" y="341" width="1.4" height="15.0" fill="rgb(240,77,51)" rx="2" ry="2" />
<text  x="168.37" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;NS_ACO::EventID, NS_ACO::EventID, std::_Identity&lt;NS_ACO::EventID&gt;, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;::_M_erase_aux (28,985,506 samples, 0.24%)</title><rect x="185.0" y="565" width="2.8" height="15.0" fill="rgb(209,31,51)" rx="2" ry="2" />
<text  x="187.97" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::Span,  (14,492,753 samples, 0.12%)</title><rect x="394.9" y="533" width="1.4" height="15.0" fill="rgb(224,123,34)" rx="2" ry="2" />
<text  x="397.93" y="543.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="704.3" y="405" width="1.4" height="15.0" fill="rgb(241,178,25)" rx="2" ry="2" />
<text  x="707.28" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::string const, std::string&gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::string const, std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="635.7" y="453" width="1.4" height="15.0" fill="rgb(218,10,31)" rx="2" ry="2" />
<text  x="638.69" y="463.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_service (14,492,753 samples, 0.12%)</title><rect x="140.2" y="597" width="1.4" height="15.0" fill="rgb(244,57,42)" rx="2" ry="2" />
<text  x="143.18" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (28,985,506 samples, 0.24%)</title><rect x="161.2" y="533" width="2.8" height="15.0" fill="rgb(213,165,33)" rx="2" ry="2" />
<text  x="164.17" y="543.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::SwitchContext (14,492,753 samples, 0.12%)</title><rect x="190.6" y="597" width="1.4" height="15.0" fill="rgb(249,37,9)" rx="2" ry="2" />
<text  x="193.57" y="607.5" ></text>
</g>
<g >
<title>std::move&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="234.0" y="405" width="1.4" height="15.0" fill="rgb(214,195,50)" rx="2" ry="2" />
<text  x="236.96" y="415.5" ></text>
</g>
<g >
<title>msg::DBPlayerProfile::~DBPlayerProfile (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="757" width="1.4" height="15.0" fill="rgb(236,139,9)" rx="2" ry="2" />
<text  x="1030.63" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="129.0" y="421" width="1.4" height="15.0" fill="rgb(231,36,5)" rx="2" ry="2" />
<text  x="131.98" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="411.7" y="469" width="1.4" height="15.0" fill="rgb(247,190,41)" rx="2" ry="2" />
<text  x="414.73" y="479.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="474.7" y="501" width="1.4" height="15.0" fill="rgb(241,170,47)" rx="2" ry="2" />
<text  x="477.72" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (14,492,753 samples, 0.12%)</title><rect x="1180.2" y="757" width="1.4" height="15.0" fill="rgb(211,175,44)" rx="2" ry="2" />
<text  x="1183.20" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (43,478,259 samples, 0.36%)</title><rect x="411.7" y="533" width="4.2" height="15.0" fill="rgb(208,150,12)" rx="2" ry="2" />
<text  x="414.73" y="543.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="453.7" y="453" width="2.8" height="15.0" fill="rgb(226,126,6)" rx="2" ry="2" />
<text  x="456.72" y="463.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="201.8" y="469" width="1.4" height="15.0" fill="rgb(237,176,5)" rx="2" ry="2" />
<text  x="204.77" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (43,478,259 samples, 0.36%)</title><rect x="494.3" y="389" width="4.2" height="15.0" fill="rgb(246,211,15)" rx="2" ry="2" />
<text  x="497.32" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (28,985,506 samples, 0.24%)</title><rect x="436.9" y="469" width="2.8" height="15.0" fill="rgb(230,138,43)" rx="2" ry="2" />
<text  x="439.93" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::string, std::pair&lt;std::string const, std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::string&gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (14,492,753 samples, 0.12%)</title><rect x="635.7" y="533" width="1.4" height="15.0" fill="rgb(229,187,50)" rx="2" ry="2" />
<text  x="638.69" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (28,985,506 samples, 0.24%)</title><rect x="617.5" y="405" width="2.8" height="15.0" fill="rgb(236,34,36)" rx="2" ry="2" />
<text  x="620.50" y="415.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_stack] (28,985,506 samples, 0.24%)</title><rect x="1015.0" y="789" width="2.8" height="15.0" fill="rgb(236,31,14)" rx="2" ry="2" />
<text  x="1018.03" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="555.9" y="453" width="1.4" height="15.0" fill="rgb(244,204,0)" rx="2" ry="2" />
<text  x="558.91" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (14,492,753 samples, 0.12%)</title><rect x="319.3" y="501" width="1.4" height="15.0" fill="rgb(254,122,52)" rx="2" ry="2" />
<text  x="322.35" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (28,985,506 samples, 0.24%)</title><rect x="462.1" y="501" width="2.8" height="15.0" fill="rgb(208,8,16)" rx="2" ry="2" />
<text  x="465.12" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="124.8" y="469" width="1.4" height="15.0" fill="rgb(235,160,31)" rx="2" ry="2" />
<text  x="127.78" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::reserve (14,492,753 samples, 0.12%)</title><rect x="343.1" y="517" width="1.4" height="15.0" fill="rgb(245,81,31)" rx="2" ry="2" />
<text  x="346.14" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="364.1" y="485" width="1.4" height="15.0" fill="rgb(222,21,35)" rx="2" ry="2" />
<text  x="367.14" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="21.2" y="565" width="1.4" height="15.0" fill="rgb(237,62,31)" rx="2" ry="2" />
<text  x="24.20" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::InRealOneof (14,492,753 samples, 0.12%)</title><rect x="522.3" y="437" width="1.4" height="15.0" fill="rgb(252,86,15)" rx="2" ry="2" />
<text  x="525.31" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (173,913,036 samples, 1.42%)</title><rect x="644.1" y="469" width="16.8" height="15.0" fill="rgb(213,210,12)" rx="2" ry="2" />
<text  x="647.09" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="653.9" y="437" width="1.4" height="15.0" fill="rgb(241,188,5)" rx="2" ry="2" />
<text  x="656.89" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="415.9" y="597" width="1.4" height="15.0" fill="rgb(252,171,31)" rx="2" ry="2" />
<text  x="418.93" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Descriptor const*, std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="630.1" y="357" width="1.4" height="15.0" fill="rgb(222,225,37)" rx="2" ry="2" />
<text  x="633.09" y="367.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="197.6" y="469" width="1.4" height="15.0" fill="rgb(210,204,28)" rx="2" ry="2" />
<text  x="200.57" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="687.5" y="421" width="2.8" height="15.0" fill="rgb(254,13,42)" rx="2" ry="2" />
<text  x="690.49" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::EnumSize (14,492,753 samples, 0.12%)</title><rect x="429.9" y="421" width="1.4" height="15.0" fill="rgb(211,57,15)" rx="2" ry="2" />
<text  x="432.93" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::GeneratedMessageFactory::GetPrototype (14,492,753 samples, 0.12%)</title><rect x="50.6" y="597" width="1.4" height="15.0" fill="rgb(251,139,53)" rx="2" ry="2" />
<text  x="53.59" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="590.9" y="293" width="1.4" height="15.0" fill="rgb(252,137,29)" rx="2" ry="2" />
<text  x="593.90" y="303.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="693.1" y="389" width="1.4" height="15.0" fill="rgb(243,180,43)" rx="2" ry="2" />
<text  x="696.08" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (28,985,506 samples, 0.24%)</title><rect x="462.1" y="485" width="2.8" height="15.0" fill="rgb(243,55,2)" rx="2" ry="2" />
<text  x="465.12" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (72,463,765 samples, 0.59%)</title><rect x="253.6" y="437" width="7.0" height="15.0" fill="rgb(248,217,33)" rx="2" ry="2" />
<text  x="256.56" y="447.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="502.7" y="389" width="1.4" height="15.0" fill="rgb(225,121,39)" rx="2" ry="2" />
<text  x="505.72" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="421" width="1.4" height="15.0" fill="rgb(207,175,19)" rx="2" ry="2" />
<text  x="935.44" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="14.2" y="693" width="1.4" height="15.0" fill="rgb(236,32,7)" rx="2" ry="2" />
<text  x="17.20" y="703.5" ></text>
</g>
<g >
<title>std::__distance&lt;std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="865.3" y="421" width="1.4" height="15.0" fill="rgb(208,220,54)" rx="2" ry="2" />
<text  x="868.26" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;long, PBInterpreter::MessageDesc, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="31.0" y="677" width="1.4" height="15.0" fill="rgb(232,209,54)" rx="2" ry="2" />
<text  x="34.00" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (28,985,506 samples, 0.24%)</title><rect x="954.8" y="501" width="2.8" height="15.0" fill="rgb(239,117,51)" rx="2" ry="2" />
<text  x="957.84" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="701.5" y="517" width="1.4" height="15.0" fill="rgb(245,187,11)" rx="2" ry="2" />
<text  x="704.48" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::HasBitIndex (14,492,753 samples, 0.12%)</title><rect x="232.6" y="421" width="1.4" height="15.0" fill="rgb(205,149,13)" rx="2" ry="2" />
<text  x="235.56" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="539.1" y="405" width="1.4" height="15.0" fill="rgb(240,100,52)" rx="2" ry="2" />
<text  x="542.11" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span&gt;::Add (14,492,753 samples, 0.12%)</title><rect x="694.5" y="469" width="1.4" height="15.0" fill="rgb(205,26,38)" rx="2" ry="2" />
<text  x="697.48" y="479.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="898.8" y="517" width="1.4" height="15.0" fill="rgb(210,152,38)" rx="2" ry="2" />
<text  x="901.85" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (28,985,506 samples, 0.24%)</title><rect x="611.9" y="453" width="2.8" height="15.0" fill="rgb(238,24,14)" rx="2" ry="2" />
<text  x="614.90" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (28,985,506 samples, 0.24%)</title><rect x="702.9" y="501" width="2.8" height="15.0" fill="rgb(252,213,31)" rx="2" ry="2" />
<text  x="705.88" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::FileDescriptorTables::FindEnumValueByNumber (14,492,753 samples, 0.12%)</title><rect x="406.1" y="501" width="1.4" height="15.0" fill="rgb(254,1,16)" rx="2" ry="2" />
<text  x="409.13" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (43,478,259 samples, 0.36%)</title><rect x="494.3" y="373" width="4.2" height="15.0" fill="rgb(207,169,23)" rx="2" ry="2" />
<text  x="497.32" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::EpsCopyInputStream::ReadString (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="709" width="1.4" height="15.0" fill="rgb(231,167,50)" rx="2" ry="2" />
<text  x="1082.42" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::Span,  (14,492,753 samples, 0.12%)</title><rect x="515.3" y="453" width="1.4" height="15.0" fill="rgb(242,40,4)" rx="2" ry="2" />
<text  x="518.31" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="919.8" y="565" width="1.4" height="15.0" fill="rgb(247,89,2)" rx="2" ry="2" />
<text  x="922.85" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (101,449,271 samples, 0.83%)</title><rect x="884.9" y="469" width="9.8" height="15.0" fill="rgb(228,90,42)" rx="2" ry="2" />
<text  x="887.85" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (14,492,753 samples, 0.12%)</title><rect x="718.3" y="501" width="1.4" height="15.0" fill="rgb(237,133,45)" rx="2" ry="2" />
<text  x="721.28" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="165.4" y="421" width="1.4" height="15.0" fill="rgb(212,221,53)" rx="2" ry="2" />
<text  x="168.37" y="431.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="547.5" y="293" width="1.4" height="15.0" fill="rgb(224,87,22)" rx="2" ry="2" />
<text  x="550.51" y="303.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="956.2" y="341" width="1.4" height="15.0" fill="rgb(250,178,27)" rx="2" ry="2" />
<text  x="959.24" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="439.7" y="485" width="1.4" height="15.0" fill="rgb(220,172,54)" rx="2" ry="2" />
<text  x="442.73" y="495.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1094.8" y="597" width="1.4" height="15.0" fill="rgb(249,25,4)" rx="2" ry="2" />
<text  x="1097.82" y="607.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (101,449,271 samples, 0.83%)</title><rect x="662.3" y="517" width="9.8" height="15.0" fill="rgb(217,203,6)" rx="2" ry="2" />
<text  x="665.29" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (14,492,753 samples, 0.12%)</title><rect x="42.2" y="581" width="1.4" height="15.0" fill="rgb(247,205,12)" rx="2" ry="2" />
<text  x="45.19" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetMapData (14,492,753 samples, 0.12%)</title><rect x="413.1" y="517" width="1.4" height="15.0" fill="rgb(253,214,49)" rx="2" ry="2" />
<text  x="416.13" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (115,942,024 samples, 0.95%)</title><rect x="89.8" y="533" width="11.2" height="15.0" fill="rgb(228,11,31)" rx="2" ry="2" />
<text  x="92.79" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::index (14,492,753 samples, 0.12%)</title><rect x="926.8" y="501" width="1.4" height="15.0" fill="rgb(232,179,21)" rx="2" ry="2" />
<text  x="929.84" y="511.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="357" width="1.4" height="15.0" fill="rgb(212,38,52)" rx="2" ry="2" />
<text  x="652.69" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="165.4" y="437" width="1.4" height="15.0" fill="rgb(243,155,23)" rx="2" ry="2" />
<text  x="168.37" y="447.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="15.6" y="629" width="1.4" height="15.0" fill="rgb(228,33,54)" rx="2" ry="2" />
<text  x="18.60" y="639.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="369.7" y="501" width="1.4" height="15.0" fill="rgb(238,100,29)" rx="2" ry="2" />
<text  x="372.74" y="511.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="653.9" y="421" width="1.4" height="15.0" fill="rgb(216,5,12)" rx="2" ry="2" />
<text  x="656.89" y="431.5" ></text>
</g>
<g >
<title>prometheus::Counter::Increment (14,492,753 samples, 0.12%)</title><rect x="845.7" y="645" width="1.4" height="15.0" fill="rgb(217,121,9)" rx="2" ry="2" />
<text  x="848.66" y="655.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (14,492,753 samples, 0.12%)</title><rect x="666.5" y="245" width="1.4" height="15.0" fill="rgb(218,163,0)" rx="2" ry="2" />
<text  x="669.49" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (14,492,753 samples, 0.12%)</title><rect x="148.6" y="341" width="1.4" height="15.0" fill="rgb(230,41,37)" rx="2" ry="2" />
<text  x="151.58" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::SetIdentity (14,492,753 samples, 0.12%)</title><rect x="443.9" y="517" width="1.4" height="15.0" fill="rgb(250,39,2)" rx="2" ry="2" />
<text  x="446.93" y="527.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="606.3" y="309" width="1.4" height="15.0" fill="rgb(252,102,54)" rx="2" ry="2" />
<text  x="609.30" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="266.2" y="389" width="1.4" height="15.0" fill="rgb(216,161,23)" rx="2" ry="2" />
<text  x="269.16" y="399.5" ></text>
</g>
<g >
<title>msg::DBBatchGetReq::_InternalParse (14,492,753 samples, 0.12%)</title><rect x="1022.0" y="757" width="1.4" height="15.0" fill="rgb(250,210,3)" rx="2" ry="2" />
<text  x="1025.03" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="533.5" y="373" width="1.4" height="15.0" fill="rgb(228,147,6)" rx="2" ry="2" />
<text  x="536.51" y="383.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="73.0" y="357" width="1.4" height="15.0" fill="rgb(236,87,54)" rx="2" ry="2" />
<text  x="75.99" y="367.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="956.2" y="357" width="1.4" height="15.0" fill="rgb(235,192,5)" rx="2" ry="2" />
<text  x="959.24" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (14,492,753 samples, 0.12%)</title><rect x="408.9" y="517" width="1.4" height="15.0" fill="rgb(209,92,13)" rx="2" ry="2" />
<text  x="411.93" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (72,463,765 samples, 0.59%)</title><rect x="557.3" y="453" width="7.0" height="15.0" fill="rgb(215,58,31)" rx="2" ry="2" />
<text  x="560.31" y="463.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::DelParam (14,492,753 samples, 0.12%)</title><rect x="11.4" y="693" width="1.4" height="15.0" fill="rgb(206,6,18)" rx="2" ry="2" />
<text  x="14.40" y="703.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (86,956,518 samples, 0.71%)</title><rect x="870.9" y="453" width="8.4" height="15.0" fill="rgb(247,119,23)" rx="2" ry="2" />
<text  x="873.85" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (28,985,506 samples, 0.24%)</title><rect x="522.3" y="453" width="2.8" height="15.0" fill="rgb(210,184,44)" rx="2" ry="2" />
<text  x="525.31" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (28,985,506 samples, 0.24%)</title><rect x="427.1" y="501" width="2.8" height="15.0" fill="rgb(253,186,49)" rx="2" ry="2" />
<text  x="430.13" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::FastFieldValuePrinterUtf8Escaping::PrintBytes (14,492,753 samples, 0.12%)</title><rect x="639.9" y="421" width="1.4" height="15.0" fill="rgb(235,189,7)" rx="2" ry="2" />
<text  x="642.89" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="869.5" y="373" width="1.4" height="15.0" fill="rgb(223,139,15)" rx="2" ry="2" />
<text  x="872.45" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::__detail::_Select1st, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (14,492,753 samples, 0.12%)</title><rect x="56.2" y="533" width="1.4" height="15.0" fill="rgb(230,73,47)" rx="2" ry="2" />
<text  x="59.19" y="543.5" ></text>
</g>
<g >
<title>std::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (14,492,753 samples, 0.12%)</title><rect x="101.0" y="565" width="1.4" height="15.0" fill="rgb(253,209,9)" rx="2" ry="2" />
<text  x="103.98" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="961.8" y="549" width="1.4" height="15.0" fill="rgb(227,141,41)" rx="2" ry="2" />
<text  x="964.84" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (376,811,578 samples, 3.08%)</title><rect x="337.5" y="597" width="36.4" height="15.0" fill="rgb(205,132,11)" rx="2" ry="2" />
<text  x="340.54" y="607.5" >goo..</text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="863.9" y="325" width="1.4" height="15.0" fill="rgb(230,129,1)" rx="2" ry="2" />
<text  x="866.86" y="335.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare&lt;false&gt;::__lc&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="77.2" y="325" width="1.4" height="15.0" fill="rgb(212,50,32)" rx="2" ry="2" />
<text  x="80.19" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (43,478,259 samples, 0.36%)</title><rect x="36.6" y="629" width="4.2" height="15.0" fill="rgb(215,51,19)" rx="2" ry="2" />
<text  x="39.60" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Add&lt;google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::TypeHandler&gt; (14,492,753 samples, 0.12%)</title><rect x="578.3" y="437" width="1.4" height="15.0" fill="rgb(206,164,35)" rx="2" ry="2" />
<text  x="581.30" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (28,985,506 samples, 0.24%)</title><rect x="687.5" y="469" width="2.8" height="15.0" fill="rgb(218,109,7)" rx="2" ry="2" />
<text  x="690.49" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="645.5" y="437" width="1.4" height="15.0" fill="rgb(212,6,31)" rx="2" ry="2" />
<text  x="648.49" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="593.7" y="357" width="1.4" height="15.0" fill="rgb(209,133,24)" rx="2" ry="2" />
<text  x="596.70" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::~Printer (14,492,753 samples, 0.12%)</title><rect x="634.3" y="517" width="1.4" height="15.0" fill="rgb(208,162,41)" rx="2" ry="2" />
<text  x="637.29" y="527.5" ></text>
</g>
<g >
<title>TracerUtil::GetTracer (14,492,753 samples, 0.12%)</title><rect x="385.1" y="629" width="1.4" height="15.0" fill="rgb(221,190,47)" rx="2" ry="2" />
<text  x="388.14" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (115,942,024 samples, 0.95%)</title><rect x="19.8" y="645" width="11.2" height="15.0" fill="rgb(217,127,24)" rx="2" ry="2" />
<text  x="22.80" y="655.5" ></text>
</g>
<g >
<title>DataAgentExporter::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="509.7" y="421" width="1.4" height="15.0" fill="rgb(235,194,38)" rx="2" ry="2" />
<text  x="512.72" y="431.5" ></text>
</g>
<g >
<title>tbus2::BusidTemplate::Parse (43,478,259 samples, 0.36%)</title><rect x="1122.8" y="773" width="4.2" height="15.0" fill="rgb(211,173,12)" rx="2" ry="2" />
<text  x="1125.81" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::string, char&gt; (14,492,753 samples, 0.12%)</title><rect x="336.1" y="581" width="1.4" height="15.0" fill="rgb(205,55,16)" rx="2" ry="2" />
<text  x="339.14" y="591.5" ></text>
</g>
<g >
<title>std::string::resize (28,985,506 samples, 0.24%)</title><rect x="954.8" y="453" width="2.8" height="15.0" fill="rgb(225,149,37)" rx="2" ry="2" />
<text  x="957.84" y="463.5" ></text>
</g>
<g >
<title>std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="422.9" y="469" width="1.4" height="15.0" fill="rgb(225,210,17)" rx="2" ry="2" />
<text  x="425.93" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map_message_type (14,492,753 samples, 0.12%)</title><rect x="413.1" y="469" width="1.4" height="15.0" fill="rgb(240,127,15)" rx="2" ry="2" />
<text  x="416.13" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="359.9" y="485" width="1.4" height="15.0" fill="rgb(229,210,53)" rx="2" ry="2" />
<text  x="362.94" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="495.7" y="117" width="1.4" height="15.0" fill="rgb(215,38,37)" rx="2" ry="2" />
<text  x="498.72" y="127.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (173,913,036 samples, 1.42%)</title><rect x="644.1" y="501" width="16.8" height="15.0" fill="rgb(237,48,34)" rx="2" ry="2" />
<text  x="647.09" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (43,478,259 samples, 0.36%)</title><rect x="166.8" y="517" width="4.2" height="15.0" fill="rgb(247,67,1)" rx="2" ry="2" />
<text  x="169.77" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="319.3" y="469" width="1.4" height="15.0" fill="rgb(242,24,39)" rx="2" ry="2" />
<text  x="322.35" y="479.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::SwitchContext (28,985,506 samples, 0.24%)</title><rect x="730.9" y="693" width="2.8" height="15.0" fill="rgb(232,171,9)" rx="2" ry="2" />
<text  x="733.88" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::strings::AlphaNum::AlphaNum (14,492,753 samples, 0.12%)</title><rect x="624.5" y="421" width="1.4" height="15.0" fill="rgb(215,105,46)" rx="2" ry="2" />
<text  x="627.50" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (14,492,753 samples, 0.12%)</title><rect x="1159.2" y="789" width="1.4" height="15.0" fill="rgb(239,36,21)" rx="2" ry="2" />
<text  x="1162.21" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="270.4" y="437" width="1.4" height="15.0" fill="rgb(229,229,25)" rx="2" ry="2" />
<text  x="273.36" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (28,985,506 samples, 0.24%)</title><rect x="421.5" y="501" width="2.8" height="15.0" fill="rgb(212,17,7)" rx="2" ry="2" />
<text  x="424.53" y="511.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (14,492,753 samples, 0.12%)</title><rect x="138.8" y="597" width="1.4" height="15.0" fill="rgb(252,206,4)" rx="2" ry="2" />
<text  x="141.78" y="607.5" ></text>
</g>
<g >
<title>std::string::operator[] (14,492,753 samples, 0.12%)</title><rect x="588.1" y="517" width="1.4" height="15.0" fill="rgb(243,65,38)" rx="2" ry="2" />
<text  x="591.10" y="527.5" ></text>
</g>
<g >
<title>NS_ACO::EPP::AfterUse (14,492,753 samples, 0.12%)</title><rect x="11.4" y="677" width="1.4" height="15.0" fill="rgb(233,164,12)" rx="2" ry="2" />
<text  x="14.40" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="64.6" y="357" width="2.8" height="15.0" fill="rgb(222,129,18)" rx="2" ry="2" />
<text  x="67.59" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="537.7" y="373" width="1.4" height="15.0" fill="rgb(217,214,36)" rx="2" ry="2" />
<text  x="540.71" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (43,478,259 samples, 0.36%)</title><rect x="439.7" y="501" width="4.2" height="15.0" fill="rgb(225,30,27)" rx="2" ry="2" />
<text  x="442.73" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_erase_at_end (14,492,753 samples, 0.12%)</title><rect x="456.5" y="501" width="1.4" height="15.0" fill="rgb(234,188,12)" rx="2" ry="2" />
<text  x="459.52" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~_Copy_assign_base (14,492,753 samples, 0.12%)</title><rect x="390.7" y="549" width="1.4" height="15.0" fill="rgb(205,27,52)" rx="2" ry="2" />
<text  x="393.74" y="559.5" ></text>
</g>
<g >
<title>EventParam::OnServiceStop (14,492,753 samples, 0.12%)</title><rect x="11.4" y="661" width="1.4" height="15.0" fill="rgb(212,114,28)" rx="2" ry="2" />
<text  x="14.40" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::MessageOptions::map_entry (14,492,753 samples, 0.12%)</title><rect x="970.2" y="501" width="1.4" height="15.0" fill="rgb(214,131,27)" rx="2" ry="2" />
<text  x="973.24" y="511.5" ></text>
</g>
<g >
<title>GetSvrCtx (14,492,753 samples, 0.12%)</title><rect x="733.7" y="709" width="1.4" height="15.0" fill="rgb(223,218,17)" rx="2" ry="2" />
<text  x="736.68" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::CreateString (28,985,506 samples, 0.24%)</title><rect x="1093.4" y="709" width="2.8" height="15.0" fill="rgb(206,173,46)" rx="2" ry="2" />
<text  x="1096.42" y="719.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="681.9" y="437" width="1.4" height="15.0" fill="rgb(230,66,8)" rx="2" ry="2" />
<text  x="684.89" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="399.1" y="469" width="1.4" height="15.0" fill="rgb(254,78,14)" rx="2" ry="2" />
<text  x="402.13" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="259.2" y="405" width="1.4" height="15.0" fill="rgb(247,161,16)" rx="2" ry="2" />
<text  x="262.16" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (28,985,506 samples, 0.24%)</title><rect x="891.9" y="453" width="2.8" height="15.0" fill="rgb(230,160,41)" rx="2" ry="2" />
<text  x="894.85" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (130,434,777 samples, 1.07%)</title><rect x="883.5" y="533" width="12.5" height="15.0" fill="rgb(231,196,53)" rx="2" ry="2" />
<text  x="886.45" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMessageInternal&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="884.9" y="229" width="1.4" height="15.0" fill="rgb(212,156,16)" rx="2" ry="2" />
<text  x="887.85" y="239.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::OffsetValue (14,492,753 samples, 0.12%)</title><rect x="536.3" y="357" width="1.4" height="15.0" fill="rgb(220,131,26)" rx="2" ry="2" />
<text  x="539.31" y="367.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_refdata (14,492,753 samples, 0.12%)</title><rect x="568.5" y="469" width="1.4" height="15.0" fill="rgb(244,105,27)" rx="2" ry="2" />
<text  x="571.51" y="479.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="723.9" y="677" width="1.4" height="15.0" fill="rgb(254,7,30)" rx="2" ry="2" />
<text  x="726.88" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend (14,492,753 samples, 0.12%)</title><rect x="694.5" y="421" width="1.4" height="15.0" fill="rgb(227,38,18)" rx="2" ry="2" />
<text  x="697.48" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="319.3" y="453" width="1.4" height="15.0" fill="rgb(239,134,27)" rx="2" ry="2" />
<text  x="322.35" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="547.5" y="421" width="1.4" height="15.0" fill="rgb(244,22,20)" rx="2" ry="2" />
<text  x="550.51" y="431.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::~ServerPkgHead (28,985,506 samples, 0.24%)</title><rect x="1185.8" y="773" width="2.8" height="15.0" fill="rgb(236,59,46)" rx="2" ry="2" />
<text  x="1188.80" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, unsigned long, false&gt;::_S_equals (14,492,753 samples, 0.12%)</title><rect x="187.8" y="517" width="1.4" height="15.0" fill="rgb(236,188,51)" rx="2" ry="2" />
<text  x="190.77" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="595.1" y="357" width="1.4" height="15.0" fill="rgb(251,180,23)" rx="2" ry="2" />
<text  x="598.10" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="662.3" y="373" width="1.4" height="15.0" fill="rgb(209,218,34)" rx="2" ry="2" />
<text  x="665.29" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="165.4" y="469" width="1.4" height="15.0" fill="rgb(216,110,7)" rx="2" ry="2" />
<text  x="168.37" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; (14,492,753 samples, 0.12%)</title><rect x="392.1" y="533" width="1.4" height="15.0" fill="rgb(252,183,2)" rx="2" ry="2" />
<text  x="395.14" y="543.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="176.6" y="565" width="1.4" height="15.0" fill="rgb(230,172,11)" rx="2" ry="2" />
<text  x="179.57" y="575.5" ></text>
</g>
<g >
<title>fmt::v8::detail::buffer&lt;char&gt;::try_resize (14,492,753 samples, 0.12%)</title><rect x="476.1" y="581" width="1.4" height="15.0" fill="rgb(213,19,41)" rx="2" ry="2" />
<text  x="479.12" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (289,855,060 samples, 2.37%)</title><rect x="448.1" y="613" width="28.0" height="15.0" fill="rgb(211,21,32)" rx="2" ry="2" />
<text  x="451.13" y="623.5" >g..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::_M_end (14,492,753 samples, 0.12%)</title><rect x="96.8" y="421" width="1.4" height="15.0" fill="rgb(227,172,42)" rx="2" ry="2" />
<text  x="99.79" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (28,985,506 samples, 0.24%)</title><rect x="161.2" y="581" width="2.8" height="15.0" fill="rgb(205,127,40)" rx="2" ry="2" />
<text  x="164.17" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="529.3" y="373" width="1.4" height="15.0" fill="rgb(237,122,13)" rx="2" ry="2" />
<text  x="532.31" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (72,463,765 samples, 0.59%)</title><rect x="872.3" y="389" width="7.0" height="15.0" fill="rgb(235,188,23)" rx="2" ry="2" />
<text  x="875.25" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (246,376,801 samples, 2.02%)</title><rect x="611.9" y="533" width="23.8" height="15.0" fill="rgb(240,136,40)" rx="2" ry="2" />
<text  x="614.90" y="543.5" >g..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (14,492,753 samples, 0.12%)</title><rect x="123.4" y="373" width="1.4" height="15.0" fill="rgb(235,9,18)" rx="2" ry="2" />
<text  x="126.38" y="383.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="618.9" y="197" width="1.4" height="15.0" fill="rgb(236,209,30)" rx="2" ry="2" />
<text  x="621.90" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::push_back (28,985,506 samples, 0.24%)</title><rect x="130.4" y="469" width="2.8" height="15.0" fill="rgb(220,211,26)" rx="2" ry="2" />
<text  x="133.38" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::~map (14,492,753 samples, 0.12%)</title><rect x="712.7" y="565" width="1.4" height="15.0" fill="rgb(237,91,36)" rx="2" ry="2" />
<text  x="715.68" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="343.1" y="453" width="1.4" height="15.0" fill="rgb(226,96,18)" rx="2" ry="2" />
<text  x="346.14" y="463.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (28,985,506 samples, 0.24%)</title><rect x="421.5" y="565" width="2.8" height="15.0" fill="rgb(239,148,48)" rx="2" ry="2" />
<text  x="424.53" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::FieldSize (14,492,753 samples, 0.12%)</title><rect x="922.6" y="581" width="1.4" height="15.0" fill="rgb(211,144,54)" rx="2" ry="2" />
<text  x="925.65" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (43,478,259 samples, 0.36%)</title><rect x="592.3" y="453" width="4.2" height="15.0" fill="rgb(241,102,12)" rx="2" ry="2" />
<text  x="595.30" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="494.3" y="149" width="1.4" height="15.0" fill="rgb(226,130,33)" rx="2" ry="2" />
<text  x="497.32" y="159.5" ></text>
</g>
<g >
<title>google::protobuf::EnumDescriptor::FindValueByNumber (14,492,753 samples, 0.12%)</title><rect x="357.1" y="517" width="1.4" height="15.0" fill="rgb(205,127,34)" rx="2" ry="2" />
<text  x="360.14" y="527.5" ></text>
</g>
<g >
<title>RPC::DB::Batch (1,101,449,228 samples, 9.02%)</title><rect x="478.9" y="629" width="106.4" height="15.0" fill="rgb(217,94,8)" rx="2" ry="2" />
<text  x="481.92" y="639.5" >RPC::DB::Batch</text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="344.5" y="469" width="1.4" height="15.0" fill="rgb(230,50,0)" rx="2" ry="2" />
<text  x="347.54" y="479.5" ></text>
</g>
<g >
<title>std::string::append (28,985,506 samples, 0.24%)</title><rect x="954.8" y="437" width="2.8" height="15.0" fill="rgb(248,76,8)" rx="2" ry="2" />
<text  x="957.84" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;bool&gt; (14,492,753 samples, 0.12%)</title><rect x="287.2" y="405" width="1.4" height="15.0" fill="rgb(226,30,29)" rx="2" ry="2" />
<text  x="290.15" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="1097.6" y="629" width="1.4" height="15.0" fill="rgb(238,75,25)" rx="2" ry="2" />
<text  x="1100.62" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="596.5" y="405" width="1.4" height="15.0" fill="rgb(241,210,32)" rx="2" ry="2" />
<text  x="599.50" y="415.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="52.0" y="629" width="1.4" height="15.0" fill="rgb(221,35,3)" rx="2" ry="2" />
<text  x="54.99" y="639.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::UpdateSystemTime (173,913,036 samples, 1.42%)</title><rect x="799.5" y="645" width="16.8" height="15.0" fill="rgb(235,64,27)" rx="2" ry="2" />
<text  x="802.47" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="620.3" y="405" width="1.4" height="15.0" fill="rgb(223,154,16)" rx="2" ry="2" />
<text  x="623.30" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;char const*, unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="89.8" y="357" width="1.4" height="15.0" fill="rgb(210,24,4)" rx="2" ry="2" />
<text  x="92.79" y="367.5" ></text>
</g>
<g >
<title>TracerUtil::CheckIsSample (14,492,753 samples, 0.12%)</title><rect x="855.5" y="565" width="1.4" height="15.0" fill="rgb(250,19,52)" rx="2" ry="2" />
<text  x="858.46" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="494.3" y="277" width="1.4" height="15.0" fill="rgb(253,215,23)" rx="2" ry="2" />
<text  x="497.32" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="599.3" y="293" width="1.4" height="15.0" fill="rgb(245,78,51)" rx="2" ry="2" />
<text  x="602.30" y="303.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="38.0" y="565" width="1.4" height="15.0" fill="rgb(216,113,40)" rx="2" ry="2" />
<text  x="41.00" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::SetIdentity (14,492,753 samples, 0.12%)</title><rect x="443.9" y="533" width="1.4" height="15.0" fill="rgb(251,55,35)" rx="2" ry="2" />
<text  x="446.93" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="81.4" y="437" width="1.4" height="15.0" fill="rgb(221,78,19)" rx="2" ry="2" />
<text  x="84.39" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::_M_range_initialize&lt;std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="865.3" y="437" width="1.4" height="15.0" fill="rgb(215,153,51)" rx="2" ry="2" />
<text  x="868.26" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::allocator&lt;google::protobuf::Symbol&gt;, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="357.1" y="437" width="1.4" height="15.0" fill="rgb(208,6,28)" rx="2" ry="2" />
<text  x="360.14" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="708.5" y="469" width="1.4" height="15.0" fill="rgb(244,193,39)" rx="2" ry="2" />
<text  x="711.48" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (188,405,789 samples, 1.54%)</title><rect x="522.3" y="501" width="18.2" height="15.0" fill="rgb(248,70,32)" rx="2" ry="2" />
<text  x="525.31" y="511.5" ></text>
</g>
<g >
<title>AcoContext::ServerContext::InnerTick (28,985,506 samples, 0.24%)</title><rect x="728.1" y="709" width="2.8" height="15.0" fill="rgb(247,79,49)" rx="2" ry="2" />
<text  x="731.08" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="599.3" y="309" width="1.4" height="15.0" fill="rgb(228,95,25)" rx="2" ry="2" />
<text  x="602.30" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (14,492,753 samples, 0.12%)</title><rect x="164.0" y="453" width="1.4" height="15.0" fill="rgb(218,78,27)" rx="2" ry="2" />
<text  x="166.97" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (14,492,753 samples, 0.12%)</title><rect x="494.3" y="165" width="1.4" height="15.0" fill="rgb(222,194,25)" rx="2" ry="2" />
<text  x="497.32" y="175.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (28,985,506 samples, 0.24%)</title><rect x="305.3" y="341" width="2.8" height="15.0" fill="rgb(208,61,34)" rx="2" ry="2" />
<text  x="308.35" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (391,304,331 samples, 3.20%)</title><rect x="337.5" y="613" width="37.8" height="15.0" fill="rgb(225,199,48)" rx="2" ry="2" />
<text  x="340.54" y="623.5" >goo..</text>
</g>
<g >
<title>[unknown] (1,434,782,547 samples, 11.74%)</title><rect x="1017.8" y="789" width="138.6" height="15.0" fill="rgb(215,139,45)" rx="2" ry="2" />
<text  x="1020.83" y="799.5" >[unknown]</text>
</g>
<g >
<title>NS_ACO::AcoThread::ResetState (28,985,506 samples, 0.24%)</title><rect x="11.4" y="709" width="2.8" height="15.0" fill="rgb(242,211,5)" rx="2" ry="2" />
<text  x="14.40" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;NS_ACO::EventID, NS_ACO::EventID, std::_Identity&lt;NS_ACO::EventID&gt;, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;::_M_destroy_node (14,492,753 samples, 0.12%)</title><rect x="185.0" y="533" width="1.4" height="15.0" fill="rgb(212,220,38)" rx="2" ry="2" />
<text  x="187.97" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (43,478,259 samples, 0.36%)</title><rect x="448.1" y="501" width="4.2" height="15.0" fill="rgb(213,127,22)" rx="2" ry="2" />
<text  x="451.13" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::strings::AlphaNum::AlphaNum (14,492,753 samples, 0.12%)</title><rect x="470.5" y="501" width="1.4" height="15.0" fill="rgb(210,182,13)" rx="2" ry="2" />
<text  x="473.52" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="623.1" y="341" width="1.4" height="15.0" fill="rgb(238,88,49)" rx="2" ry="2" />
<text  x="626.10" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;AcoLog::ELogPriority, std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="179.4" y="517" width="1.4" height="15.0" fill="rgb(228,60,33)" rx="2" ry="2" />
<text  x="182.37" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="120.6" y="453" width="1.4" height="15.0" fill="rgb(227,203,8)" rx="2" ry="2" />
<text  x="123.58" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="491.5" y="309" width="1.4" height="15.0" fill="rgb(245,108,14)" rx="2" ry="2" />
<text  x="494.52" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="655.3" y="421" width="1.4" height="15.0" fill="rgb(231,16,16)" rx="2" ry="2" />
<text  x="658.29" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="263.4" y="437" width="1.4" height="15.0" fill="rgb(245,107,43)" rx="2" ry="2" />
<text  x="266.36" y="447.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="453" width="1.4" height="15.0" fill="rgb(211,97,17)" rx="2" ry="2" />
<text  x="935.44" y="463.5" ></text>
</g>
<g >
<title>TracerUtil::SpiltTraceParent (14,492,753 samples, 0.12%)</title><rect x="684.7" y="581" width="1.4" height="15.0" fill="rgb(244,34,26)" rx="2" ry="2" />
<text  x="687.69" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="625.9" y="405" width="1.4" height="15.0" fill="rgb(241,58,19)" rx="2" ry="2" />
<text  x="628.90" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="46.4" y="565" width="1.4" height="15.0" fill="rgb(221,58,52)" rx="2" ry="2" />
<text  x="49.39" y="575.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="487.3" y="405" width="1.4" height="15.0" fill="rgb(237,173,26)" rx="2" ry="2" />
<text  x="490.32" y="415.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="1031.8" y="693" width="1.4" height="15.0" fill="rgb(210,12,4)" rx="2" ry="2" />
<text  x="1034.83" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::string, std::string&gt; const&gt;::SearchFrom (14,492,753 samples, 0.12%)</title><rect x="1090.6" y="725" width="1.4" height="15.0" fill="rgb(240,74,44)" rx="2" ry="2" />
<text  x="1093.62" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;int, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt; &gt;::operator[] (14,492,753 samples, 0.12%)</title><rect x="901.6" y="597" width="1.4" height="15.0" fill="rgb(228,215,11)" rx="2" ry="2" />
<text  x="904.65" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,492,753 samples, 0.12%)</title><rect x="840.1" y="629" width="1.4" height="15.0" fill="rgb(216,201,37)" rx="2" ry="2" />
<text  x="843.06" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="404.7" y="501" width="1.4" height="15.0" fill="rgb(244,92,8)" rx="2" ry="2" />
<text  x="407.73" y="511.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="956.2" y="421" width="1.4" height="15.0" fill="rgb(222,135,5)" rx="2" ry="2" />
<text  x="959.24" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (14,492,753 samples, 0.12%)</title><rect x="28.2" y="485" width="1.4" height="15.0" fill="rgb(220,173,25)" rx="2" ry="2" />
<text  x="31.20" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (14,492,753 samples, 0.12%)</title><rect x="22.6" y="533" width="1.4" height="15.0" fill="rgb(226,150,49)" rx="2" ry="2" />
<text  x="25.60" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="537.7" y="421" width="1.4" height="15.0" fill="rgb(232,190,20)" rx="2" ry="2" />
<text  x="540.71" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="672.1" y="341" width="1.4" height="15.0" fill="rgb(215,151,29)" rx="2" ry="2" />
<text  x="675.09" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ExplicitlyConstructed&lt;std::string, 1ul&gt;::Destruct (14,492,753 samples, 0.12%)</title><rect x="411.7" y="485" width="1.4" height="15.0" fill="rgb(213,193,10)" rx="2" ry="2" />
<text  x="414.73" y="495.5" ></text>
</g>
<g >
<title>std::__addressof&lt;double const&gt; (14,492,753 samples, 0.12%)</title><rect x="844.3" y="581" width="1.4" height="15.0" fill="rgb(238,5,14)" rx="2" ry="2" />
<text  x="847.26" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::emplace_back&lt;google::protobuf::Message const*&gt; (28,985,506 samples, 0.24%)</title><rect x="130.4" y="453" width="2.8" height="15.0" fill="rgb(213,224,33)" rx="2" ry="2" />
<text  x="133.38" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="667.9" y="245" width="1.4" height="15.0" fill="rgb(242,202,8)" rx="2" ry="2" />
<text  x="670.89" y="255.5" ></text>
</g>
<g >
<title>GetSvrCtx (14,492,753 samples, 0.12%)</title><rect x="742.1" y="693" width="1.4" height="15.0" fill="rgb(253,30,42)" rx="2" ry="2" />
<text  x="745.08" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt;::_M_addr (14,492,753 samples, 0.12%)</title><rect x="183.6" y="549" width="1.4" height="15.0" fill="rgb(252,176,10)" rx="2" ry="2" />
<text  x="186.57" y="559.5" ></text>
</g>
<g >
<title>std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (144,927,530 samples, 1.19%)</title><rect x="1106.0" y="773" width="14.0" height="15.0" fill="rgb(243,140,51)" rx="2" ry="2" />
<text  x="1109.01" y="783.5" ></text>
</g>
<g >
<title>std::string::_M_copy (14,492,753 samples, 0.12%)</title><rect x="473.3" y="373" width="1.4" height="15.0" fill="rgb(234,104,1)" rx="2" ry="2" />
<text  x="476.32" y="383.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="120.6" y="373" width="1.4" height="15.0" fill="rgb(210,220,17)" rx="2" ry="2" />
<text  x="123.58" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::emplace_back&lt;google::protobuf::FieldDescriptor const*&gt; (28,985,506 samples, 0.24%)</title><rect x="648.3" y="421" width="2.8" height="15.0" fill="rgb(244,180,19)" rx="2" ry="2" />
<text  x="651.29" y="431.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="639.9" y="261" width="1.4" height="15.0" fill="rgb(243,104,51)" rx="2" ry="2" />
<text  x="642.89" y="271.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, unsigned int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::operator[] (14,492,753 samples, 0.12%)</title><rect x="376.7" y="597" width="1.4" height="15.0" fill="rgb(212,168,39)" rx="2" ry="2" />
<text  x="379.74" y="607.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (14,492,753 samples, 0.12%)</title><rect x="1015.0" y="773" width="1.4" height="15.0" fill="rgb(250,49,0)" rx="2" ry="2" />
<text  x="1018.03" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="931.0" y="565" width="1.4" height="15.0" fill="rgb(221,140,4)" rx="2" ry="2" />
<text  x="934.04" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (173,913,036 samples, 1.42%)</title><rect x="35.2" y="661" width="16.8" height="15.0" fill="rgb(217,13,20)" rx="2" ry="2" />
<text  x="38.20" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="453.7" y="437" width="1.4" height="15.0" fill="rgb(240,28,28)" rx="2" ry="2" />
<text  x="456.72" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::vector (14,492,753 samples, 0.12%)</title><rect x="312.3" y="453" width="1.4" height="15.0" fill="rgb(217,149,22)" rx="2" ry="2" />
<text  x="315.35" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="439.7" y="469" width="1.4" height="15.0" fill="rgb(245,13,46)" rx="2" ry="2" />
<text  x="442.73" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::_internal_has_kvlist_value (14,492,753 samples, 0.12%)</title><rect x="687.5" y="325" width="1.4" height="15.0" fill="rgb(230,0,5)" rx="2" ry="2" />
<text  x="690.49" y="335.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="382.3" y="597" width="2.8" height="15.0" fill="rgb(220,223,1)" rx="2" ry="2" />
<text  x="385.34" y="607.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::MapEntryMessageComparator&gt; (86,956,518 samples, 0.71%)</title><rect x="977.2" y="565" width="8.4" height="15.0" fill="rgb(246,28,45)" rx="2" ry="2" />
<text  x="980.24" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="665.1" y="485" width="1.4" height="15.0" fill="rgb(246,189,4)" rx="2" ry="2" />
<text  x="668.09" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="530.7" y="421" width="1.4" height="15.0" fill="rgb(235,197,40)" rx="2" ry="2" />
<text  x="533.71" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="620.3" y="437" width="1.4" height="15.0" fill="rgb(241,101,52)" rx="2" ry="2" />
<text  x="623.30" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (231,884,048 samples, 1.90%)</title><rect x="611.9" y="485" width="22.4" height="15.0" fill="rgb(214,211,37)" rx="2" ry="2" />
<text  x="614.90" y="495.5" >g..</text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="85.6" y="405" width="1.4" height="15.0" fill="rgb(219,157,9)" rx="2" ry="2" />
<text  x="88.59" y="415.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare&lt;false&gt;::__lc&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="691.7" y="341" width="1.4" height="15.0" fill="rgb(243,141,14)" rx="2" ry="2" />
<text  x="694.68" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="64.6" y="373" width="2.8" height="15.0" fill="rgb(244,76,20)" rx="2" ry="2" />
<text  x="67.59" y="383.5" ></text>
</g>
<g >
<title>virtual thunk to std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (28,985,506 samples, 0.24%)</title><rect x="1149.4" y="773" width="2.8" height="15.0" fill="rgb(235,30,38)" rx="2" ry="2" />
<text  x="1152.41" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="639.9" y="341" width="1.4" height="15.0" fill="rgb(236,145,42)" rx="2" ry="2" />
<text  x="642.89" y="351.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (43,478,259 samples, 0.36%)</title><rect x="547.5" y="533" width="4.2" height="15.0" fill="rgb(248,205,6)" rx="2" ry="2" />
<text  x="550.51" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="667.9" y="373" width="1.4" height="15.0" fill="rgb(218,27,31)" rx="2" ry="2" />
<text  x="670.89" y="383.5" ></text>
</g>
<g >
<title>std::string::assign (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="693" width="1.4" height="15.0" fill="rgb(241,180,34)" rx="2" ry="2" />
<text  x="1082.42" y="703.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="991.2" y="661" width="1.4" height="15.0" fill="rgb(231,78,11)" rx="2" ry="2" />
<text  x="994.23" y="671.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (231,884,048 samples, 1.90%)</title><rect x="861.1" y="485" width="22.4" height="15.0" fill="rgb(215,117,20)" rx="2" ry="2" />
<text  x="864.06" y="495.5" >D..</text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="666.5" y="373" width="1.4" height="15.0" fill="rgb(237,52,0)" rx="2" ry="2" />
<text  x="669.49" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (28,985,506 samples, 0.24%)</title><rect x="940.8" y="501" width="2.8" height="15.0" fill="rgb(249,104,15)" rx="2" ry="2" />
<text  x="943.84" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="123.4" y="469" width="1.4" height="15.0" fill="rgb(233,185,35)" rx="2" ry="2" />
<text  x="126.38" y="479.5" ></text>
</g>
<g >
<title>AcoContext::CheckSignal (28,985,506 samples, 0.24%)</title><rect x="719.7" y="709" width="2.8" height="15.0" fill="rgb(244,182,49)" rx="2" ry="2" />
<text  x="722.68" y="719.5" ></text>
</g>
<g >
<title>TracerUtil::NewSpan (405,797,084 samples, 3.32%)</title><rect x="856.9" y="565" width="39.1" height="15.0" fill="rgb(232,58,3)" rx="2" ry="2" />
<text  x="859.86" y="575.5" >Tra..</text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="646.9" y="389" width="1.4" height="15.0" fill="rgb(220,98,54)" rx="2" ry="2" />
<text  x="649.89" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="428.5" y="405" width="1.4" height="15.0" fill="rgb(230,73,32)" rx="2" ry="2" />
<text  x="431.53" y="415.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="509.7" y="405" width="1.4" height="15.0" fill="rgb(212,76,53)" rx="2" ry="2" />
<text  x="512.72" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;std::string const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="670.7" y="437" width="1.4" height="15.0" fill="rgb(232,56,25)" rx="2" ry="2" />
<text  x="673.69" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (28,985,506 samples, 0.24%)</title><rect x="630.1" y="453" width="2.8" height="15.0" fill="rgb(208,214,12)" rx="2" ry="2" />
<text  x="633.09" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="478.9" y="517" width="1.4" height="15.0" fill="rgb(236,206,23)" rx="2" ry="2" />
<text  x="481.92" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::FastFieldValuePrinterUtf8Escaping::PrintBytes (14,492,753 samples, 0.12%)</title><rect x="609.1" y="421" width="1.4" height="15.0" fill="rgb(238,10,29)" rx="2" ry="2" />
<text  x="612.10" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="266.2" y="373" width="1.4" height="15.0" fill="rgb(240,175,17)" rx="2" ry="2" />
<text  x="269.16" y="383.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="403.3" y="469" width="1.4" height="15.0" fill="rgb(245,79,13)" rx="2" ry="2" />
<text  x="406.33" y="479.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="352.9" y="405" width="1.4" height="15.0" fill="rgb(242,83,5)" rx="2" ry="2" />
<text  x="355.94" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_realloc_insert&lt;google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="115.0" y="437" width="1.4" height="15.0" fill="rgb(219,51,44)" rx="2" ry="2" />
<text  x="117.98" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="386.5" y="453" width="1.4" height="15.0" fill="rgb(248,17,47)" rx="2" ry="2" />
<text  x="389.54" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="352.9" y="421" width="1.4" height="15.0" fill="rgb(239,101,22)" rx="2" ry="2" />
<text  x="355.94" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetInt32 (14,492,753 samples, 0.12%)</title><rect x="103.8" y="453" width="1.4" height="15.0" fill="rgb(223,177,31)" rx="2" ry="2" />
<text  x="106.78" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="502.7" y="437" width="1.4" height="15.0" fill="rgb(252,44,5)" rx="2" ry="2" />
<text  x="505.72" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::TraceState,  (14,492,753 samples, 0.12%)</title><rect x="516.7" y="453" width="1.4" height="15.0" fill="rgb(212,219,42)" rx="2" ry="2" />
<text  x="519.71" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (289,855,060 samples, 2.37%)</title><rect x="448.1" y="597" width="28.0" height="15.0" fill="rgb(250,116,0)" rx="2" ry="2" />
<text  x="451.13" y="607.5" >g..</text>
</g>
<g >
<title>std::unique_ptr&lt;opentelemetry::v1::trace::SpanContext, std::default_delete&lt;opentelemetry::v1::trace::SpanContext&gt; &gt;::~unique_ptr (14,492,753 samples, 0.12%)</title><rect x="519.5" y="421" width="1.4" height="15.0" fill="rgb(211,14,5)" rx="2" ry="2" />
<text  x="522.51" y="431.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="886.3" y="261" width="1.4" height="15.0" fill="rgb(223,94,44)" rx="2" ry="2" />
<text  x="889.25" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="666.5" y="389" width="1.4" height="15.0" fill="rgb(240,179,28)" rx="2" ry="2" />
<text  x="669.49" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="98.2" y="453" width="1.4" height="15.0" fill="rgb(218,103,5)" rx="2" ry="2" />
<text  x="101.19" y="463.5" ></text>
</g>
<g >
<title>SetTimeVal (14,492,753 samples, 0.12%)</title><rect x="816.3" y="645" width="1.4" height="15.0" fill="rgb(254,146,45)" rx="2" ry="2" />
<text  x="819.26" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::IsMapFieldInApi (14,492,753 samples, 0.12%)</title><rect x="413.1" y="501" width="1.4" height="15.0" fill="rgb(249,117,45)" rx="2" ry="2" />
<text  x="416.13" y="511.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (14,492,753 samples, 0.12%)</title><rect x="484.5" y="549" width="1.4" height="15.0" fill="rgb(212,174,26)" rx="2" ry="2" />
<text  x="487.52" y="559.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="309" width="1.4" height="15.0" fill="rgb(252,180,29)" rx="2" ry="2" />
<text  x="652.69" y="319.5" ></text>
</g>
<g >
<title>std::string::_M_check (14,492,753 samples, 0.12%)</title><rect x="855.5" y="517" width="1.4" height="15.0" fill="rgb(213,227,47)" rx="2" ry="2" />
<text  x="858.46" y="527.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (28,985,506 samples, 0.24%)</title><rect x="572.7" y="453" width="2.8" height="15.0" fill="rgb(241,86,0)" rx="2" ry="2" />
<text  x="575.70" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="403.3" y="485" width="1.4" height="15.0" fill="rgb(224,47,3)" rx="2" ry="2" />
<text  x="406.33" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (130,434,777 samples, 1.07%)</title><rect x="883.5" y="501" width="12.5" height="15.0" fill="rgb(243,177,46)" rx="2" ry="2" />
<text  x="886.45" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="147.2" y="405" width="1.4" height="15.0" fill="rgb(205,123,28)" rx="2" ry="2" />
<text  x="150.18" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (28,985,506 samples, 0.24%)</title><rect x="84.2" y="437" width="2.8" height="15.0" fill="rgb(206,38,31)" rx="2" ry="2" />
<text  x="87.19" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="985.6" y="565" width="1.4" height="15.0" fill="rgb(248,25,51)" rx="2" ry="2" />
<text  x="988.63" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="39.4" y="533" width="1.4" height="15.0" fill="rgb(248,116,24)" rx="2" ry="2" />
<text  x="42.40" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, int&gt;, std::_Select1st&lt;std::pair&lt;int const, int&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="847.1" y="613" width="1.4" height="15.0" fill="rgb(218,101,45)" rx="2" ry="2" />
<text  x="850.06" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MutexLock::MutexLock (14,492,753 samples, 0.12%)</title><rect x="50.6" y="581" width="1.4" height="15.0" fill="rgb(236,146,47)" rx="2" ry="2" />
<text  x="53.59" y="591.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="469" width="1.4" height="15.0" fill="rgb(207,134,28)" rx="2" ry="2" />
<text  x="344.74" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::allocator&lt;google::protobuf::Symbol&gt;, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="357.1" y="469" width="1.4" height="15.0" fill="rgb(248,212,46)" rx="2" ry="2" />
<text  x="360.14" y="479.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="880.7" y="357" width="1.4" height="15.0" fill="rgb(252,221,28)" rx="2" ry="2" />
<text  x="883.65" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (14,492,753 samples, 0.12%)</title><rect x="590.9" y="261" width="1.4" height="15.0" fill="rgb(229,205,0)" rx="2" ry="2" />
<text  x="593.90" y="271.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (43,478,259 samples, 0.36%)</title><rect x="386.5" y="613" width="4.2" height="15.0" fill="rgb(240,83,23)" rx="2" ry="2" />
<text  x="389.54" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (1,217,391,252 samples, 9.96%)</title><rect x="201.8" y="517" width="117.5" height="15.0" fill="rgb(247,211,35)" rx="2" ry="2" />
<text  x="204.77" y="527.5" >google::protob..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (14,492,753 samples, 0.12%)</title><rect x="854.1" y="565" width="1.4" height="15.0" fill="rgb(249,203,28)" rx="2" ry="2" />
<text  x="857.06" y="575.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::GetDescriptor (14,492,753 samples, 0.12%)</title><rect x="134.6" y="549" width="1.4" height="15.0" fill="rgb(212,149,11)" rx="2" ry="2" />
<text  x="137.58" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt;::operator (28,985,506 samples, 0.24%)</title><rect x="238.2" y="373" width="2.8" height="15.0" fill="rgb(232,31,5)" rx="2" ry="2" />
<text  x="241.16" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MapEnd (14,492,753 samples, 0.12%)</title><rect x="970.2" y="565" width="1.4" height="15.0" fill="rgb(215,150,31)" rx="2" ry="2" />
<text  x="973.24" y="575.5" ></text>
</g>
<g >
<title>std::_List_base&lt;std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="851.3" y="565" width="1.4" height="15.0" fill="rgb(243,64,16)" rx="2" ry="2" />
<text  x="854.26" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="842.9" y="565" width="1.4" height="15.0" fill="rgb(222,3,24)" rx="2" ry="2" />
<text  x="845.86" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::Message const**&gt;, google::protobuf::Message const**, google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="131.8" y="405" width="1.4" height="15.0" fill="rgb(242,101,14)" rx="2" ry="2" />
<text  x="134.78" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="116.4" y="453" width="1.4" height="15.0" fill="rgb(228,124,15)" rx="2" ry="2" />
<text  x="119.38" y="463.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="109.4" y="405" width="1.4" height="15.0" fill="rgb(211,48,16)" rx="2" ry="2" />
<text  x="112.38" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (14,492,753 samples, 0.12%)</title><rect x="298.4" y="389" width="1.4" height="15.0" fill="rgb(228,129,0)" rx="2" ry="2" />
<text  x="301.35" y="399.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (14,492,753 samples, 0.12%)</title><rect x="691.7" y="517" width="1.4" height="15.0" fill="rgb(220,148,2)" rx="2" ry="2" />
<text  x="694.68" y="527.5" ></text>
</g>
<g >
<title>tbuspb::protobuf::MessageLite::ParseFromArray (14,492,753 samples, 0.12%)</title><rect x="1183.0" y="789" width="1.4" height="15.0" fill="rgb(212,77,0)" rx="2" ry="2" />
<text  x="1186.00" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_S_key (14,492,753 samples, 0.12%)</title><rect x="904.4" y="533" width="1.4" height="15.0" fill="rgb(246,218,0)" rx="2" ry="2" />
<text  x="907.45" y="543.5" ></text>
</g>
<g >
<title>std::string::empty (14,492,753 samples, 0.12%)</title><rect x="147.2" y="389" width="1.4" height="15.0" fill="rgb(214,205,49)" rx="2" ry="2" />
<text  x="150.18" y="399.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="123.4" y="405" width="1.4" height="15.0" fill="rgb(244,180,51)" rx="2" ry="2" />
<text  x="126.38" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="569.9" y="437" width="2.8" height="15.0" fill="rgb(240,36,2)" rx="2" ry="2" />
<text  x="572.91" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (28,985,506 samples, 0.24%)</title><rect x="581.1" y="565" width="2.8" height="15.0" fill="rgb(254,149,36)" rx="2" ry="2" />
<text  x="584.10" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::SetString (28,985,506 samples, 0.24%)</title><rect x="971.6" y="549" width="2.8" height="15.0" fill="rgb(247,42,47)" rx="2" ry="2" />
<text  x="974.64" y="559.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="600.7" y="341" width="1.4" height="15.0" fill="rgb(245,183,42)" rx="2" ry="2" />
<text  x="603.70" y="351.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (14,492,753 samples, 0.12%)</title><rect x="1166.2" y="789" width="1.4" height="15.0" fill="rgb(211,195,12)" rx="2" ry="2" />
<text  x="1169.20" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="718.3" y="565" width="1.4" height="15.0" fill="rgb(206,213,14)" rx="2" ry="2" />
<text  x="721.28" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::_internal_attributes (14,492,753 samples, 0.12%)</title><rect x="427.1" y="405" width="1.4" height="15.0" fill="rgb(205,177,22)" rx="2" ry="2" />
<text  x="430.13" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::MapKey::MapKey (14,492,753 samples, 0.12%)</title><rect x="658.1" y="421" width="1.4" height="15.0" fill="rgb(248,224,5)" rx="2" ry="2" />
<text  x="661.09" y="431.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (14,492,753 samples, 0.12%)</title><rect x="50.6" y="533" width="1.4" height="15.0" fill="rgb(247,209,22)" rx="2" ry="2" />
<text  x="53.59" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::InstrumentationScope&gt; (14,492,753 samples, 0.12%)</title><rect x="67.4" y="373" width="1.4" height="15.0" fill="rgb(246,143,40)" rx="2" ry="2" />
<text  x="70.39" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="705.7" y="453" width="1.4" height="15.0" fill="rgb(252,206,48)" rx="2" ry="2" />
<text  x="708.68" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (14,492,753 samples, 0.12%)</title><rect x="554.5" y="421" width="1.4" height="15.0" fill="rgb(225,7,21)" rx="2" ry="2" />
<text  x="557.51" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="1013.6" y="757" width="1.4" height="15.0" fill="rgb(236,40,26)" rx="2" ry="2" />
<text  x="1016.63" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::construct&lt;google::protobuf::FieldDescriptor const*, google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="22.6" y="501" width="1.4" height="15.0" fill="rgb(211,77,8)" rx="2" ry="2" />
<text  x="25.60" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (28,985,506 samples, 0.24%)</title><rect x="637.1" y="453" width="2.8" height="15.0" fill="rgb(220,122,11)" rx="2" ry="2" />
<text  x="640.09" y="463.5" ></text>
</g>
<g >
<title>std::string::_Alloc_hider::~_Alloc_hider (14,492,753 samples, 0.12%)</title><rect x="309.5" y="405" width="1.4" height="15.0" fill="rgb(238,10,36)" rx="2" ry="2" />
<text  x="312.55" y="415.5" ></text>
</g>
<g >
<title>Log::WriteLog (14,492,753 samples, 0.12%)</title><rect x="380.9" y="581" width="1.4" height="15.0" fill="rgb(223,127,35)" rx="2" ry="2" />
<text  x="383.94" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map (14,492,753 samples, 0.12%)</title><rect x="413.1" y="485" width="1.4" height="15.0" fill="rgb(224,220,2)" rx="2" ry="2" />
<text  x="416.13" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::string, std::string&gt; const&gt;::SearchFrom (14,492,753 samples, 0.12%)</title><rect x="1089.2" y="709" width="1.4" height="15.0" fill="rgb(206,56,29)" rx="2" ry="2" />
<text  x="1092.22" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::LengthDelimitedSize (14,492,753 samples, 0.12%)</title><rect x="665.1" y="469" width="1.4" height="15.0" fill="rgb(244,106,53)" rx="2" ry="2" />
<text  x="668.09" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (28,985,506 samples, 0.24%)</title><rect x="873.7" y="325" width="2.8" height="15.0" fill="rgb(246,176,10)" rx="2" ry="2" />
<text  x="876.65" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (43,478,259 samples, 0.36%)</title><rect x="637.1" y="501" width="4.2" height="15.0" fill="rgb(215,90,35)" rx="2" ry="2" />
<text  x="640.09" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_M_deallocate (14,492,753 samples, 0.12%)</title><rect x="372.5" y="501" width="1.4" height="15.0" fill="rgb(224,222,6)" rx="2" ry="2" />
<text  x="375.54" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="611.9" y="437" width="1.4" height="15.0" fill="rgb(217,99,28)" rx="2" ry="2" />
<text  x="614.90" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="152.8" y="485" width="1.4" height="15.0" fill="rgb(226,61,18)" rx="2" ry="2" />
<text  x="155.78" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TransparentSupport&lt;std::string&gt;::ImplicitConvert&lt;void&gt; (14,492,753 samples, 0.12%)</title><rect x="1066.8" y="709" width="1.4" height="15.0" fill="rgb(243,181,4)" rx="2" ry="2" />
<text  x="1069.82" y="719.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::DaemonRoutineChecker_CheckIsNeedUpdateCOClock (14,492,753 samples, 0.12%)</title><rect x="798.1" y="645" width="1.4" height="15.0" fill="rgb(243,39,16)" rx="2" ry="2" />
<text  x="801.07" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="624.5" y="405" width="1.4" height="15.0" fill="rgb(207,88,51)" rx="2" ry="2" />
<text  x="627.50" y="415.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_heap] (28,985,506 samples, 0.24%)</title><rect x="1089.2" y="741" width="2.8" height="15.0" fill="rgb(221,214,19)" rx="2" ry="2" />
<text  x="1092.22" y="751.5" ></text>
</g>
<g >
<title>std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (57,971,012 samples, 0.47%)</title><rect x="1111.6" y="741" width="5.6" height="15.0" fill="rgb(254,146,45)" rx="2" ry="2" />
<text  x="1114.61" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (43,478,259 samples, 0.36%)</title><rect x="70.2" y="405" width="4.2" height="15.0" fill="rgb(252,167,1)" rx="2" ry="2" />
<text  x="73.19" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (43,478,259 samples, 0.36%)</title><rect x="392.1" y="581" width="4.2" height="15.0" fill="rgb(222,119,26)" rx="2" ry="2" />
<text  x="395.14" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="438.3" y="213" width="1.4" height="15.0" fill="rgb(238,146,36)" rx="2" ry="2" />
<text  x="441.33" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::get (14,492,753 samples, 0.12%)</title><rect x="627.3" y="421" width="1.4" height="15.0" fill="rgb(241,26,39)" rx="2" ry="2" />
<text  x="630.30" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="164.0" y="469" width="1.4" height="15.0" fill="rgb(237,86,28)" rx="2" ry="2" />
<text  x="166.97" y="479.5" ></text>
</g>
<g >
<title>AcoStatistic::DumpTo (14,492,753 samples, 0.12%)</title><rect x="723.9" y="693" width="1.4" height="15.0" fill="rgb(236,121,3)" rx="2" ry="2" />
<text  x="726.88" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;NS_ACO::EventID, NS_ACO::EventID, std::_Identity&lt;NS_ACO::EventID&gt;, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;::_M_put_node (14,492,753 samples, 0.12%)</title><rect x="186.4" y="533" width="1.4" height="15.0" fill="rgb(211,1,40)" rx="2" ry="2" />
<text  x="189.37" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="366.9" y="517" width="1.4" height="15.0" fill="rgb(213,227,49)" rx="2" ry="2" />
<text  x="369.94" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::containing_oneof (14,492,753 samples, 0.12%)</title><rect x="287.2" y="357" width="1.4" height="15.0" fill="rgb(238,132,17)" rx="2" ry="2" />
<text  x="290.15" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="666.5" y="341" width="1.4" height="15.0" fill="rgb(248,122,41)" rx="2" ry="2" />
<text  x="669.49" y="351.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="52.0" y="693" width="1.4" height="15.0" fill="rgb(209,141,35)" rx="2" ry="2" />
<text  x="54.99" y="703.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="694.5" y="389" width="1.4" height="15.0" fill="rgb(235,37,41)" rx="2" ry="2" />
<text  x="697.48" y="399.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="707.1" y="421" width="1.4" height="15.0" fill="rgb(235,130,1)" rx="2" ry="2" />
<text  x="710.08" y="431.5" ></text>
</g>
<g >
<title>msg::DBBatchGetReq::~DBBatchGetReq (14,492,753 samples, 0.12%)</title><rect x="1078.0" y="773" width="1.4" height="15.0" fill="rgb(233,43,25)" rx="2" ry="2" />
<text  x="1081.02" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="705.7" y="501" width="1.4" height="15.0" fill="rgb(244,215,38)" rx="2" ry="2" />
<text  x="708.68" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (28,985,506 samples, 0.24%)</title><rect x="208.8" y="453" width="2.8" height="15.0" fill="rgb(217,111,1)" rx="2" ry="2" />
<text  x="211.77" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="61.8" y="389" width="1.4" height="15.0" fill="rgb(236,67,32)" rx="2" ry="2" />
<text  x="64.79" y="399.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (14,492,753 samples, 0.12%)</title><rect x="330.5" y="469" width="1.4" height="15.0" fill="rgb(225,135,29)" rx="2" ry="2" />
<text  x="333.55" y="479.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="169.6" y="485" width="1.4" height="15.0" fill="rgb(205,15,32)" rx="2" ry="2" />
<text  x="172.57" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="123.4" y="389" width="1.4" height="15.0" fill="rgb(237,205,18)" rx="2" ry="2" />
<text  x="126.38" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (43,478,259 samples, 0.36%)</title><rect x="469.1" y="533" width="4.2" height="15.0" fill="rgb(215,224,46)" rx="2" ry="2" />
<text  x="472.12" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map_message_type (14,492,753 samples, 0.12%)</title><rect x="970.2" y="517" width="1.4" height="15.0" fill="rgb(213,208,5)" rx="2" ry="2" />
<text  x="973.24" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::Message const**&gt; (14,492,753 samples, 0.12%)</title><rect x="984.2" y="485" width="1.4" height="15.0" fill="rgb(249,40,10)" rx="2" ry="2" />
<text  x="987.23" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="618.9" y="341" width="1.4" height="15.0" fill="rgb(247,126,41)" rx="2" ry="2" />
<text  x="621.90" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (43,478,259 samples, 0.36%)</title><rect x="43.6" y="613" width="4.2" height="15.0" fill="rgb(207,24,11)" rx="2" ry="2" />
<text  x="46.59" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="361.3" y="501" width="1.4" height="15.0" fill="rgb(243,95,3)" rx="2" ry="2" />
<text  x="364.34" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (231,884,048 samples, 1.90%)</title><rect x="611.9" y="501" width="22.4" height="15.0" fill="rgb(212,67,14)" rx="2" ry="2" />
<text  x="614.90" y="511.5" >g..</text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="120.6" y="437" width="1.4" height="15.0" fill="rgb(226,150,38)" rx="2" ry="2" />
<text  x="123.58" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::CEscape (14,492,753 samples, 0.12%)</title><rect x="530.7" y="389" width="1.4" height="15.0" fill="rgb(226,33,15)" rx="2" ry="2" />
<text  x="533.71" y="399.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="642.7" y="485" width="1.4" height="15.0" fill="rgb(237,68,12)" rx="2" ry="2" />
<text  x="645.69" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (28,985,506 samples, 0.24%)</title><rect x="203.2" y="469" width="2.8" height="15.0" fill="rgb(231,73,29)" rx="2" ry="2" />
<text  x="206.17" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator* (14,492,753 samples, 0.12%)</title><rect x="11.4" y="549" width="1.4" height="15.0" fill="rgb(206,108,11)" rx="2" ry="2" />
<text  x="14.40" y="559.5" ></text>
</g>
<g >
<title>tbuspp_queue_write (14,492,753 samples, 0.12%)</title><rect x="1184.4" y="789" width="1.4" height="15.0" fill="rgb(225,129,45)" rx="2" ry="2" />
<text  x="1187.40" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="585.3" y="549" width="1.4" height="15.0" fill="rgb(243,36,53)" rx="2" ry="2" />
<text  x="588.30" y="559.5" ></text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="610.5" y="485" width="1.4" height="15.0" fill="rgb(224,144,50)" rx="2" ry="2" />
<text  x="613.50" y="495.5" ></text>
</g>
<g >
<title>TBusppUtil::ReceiveTBusppMsg (14,492,753 samples, 0.12%)</title><rect x="1002.4" y="709" width="1.4" height="15.0" fill="rgb(217,117,50)" rx="2" ry="2" />
<text  x="1005.43" y="719.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="81.4" y="469" width="1.4" height="15.0" fill="rgb(222,165,46)" rx="2" ry="2" />
<text  x="84.39" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (14,492,753 samples, 0.12%)</title><rect x="446.7" y="517" width="1.4" height="15.0" fill="rgb(240,22,17)" rx="2" ry="2" />
<text  x="449.73" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::~vector (14,492,753 samples, 0.12%)</title><rect x="996.8" y="661" width="1.4" height="15.0" fill="rgb(236,180,37)" rx="2" ry="2" />
<text  x="999.83" y="671.5" ></text>
</g>
<g >
<title>void fmt::v8::detail::vformat_to&lt;char&gt; (14,492,753 samples, 0.12%)</title><rect x="477.5" y="629" width="1.4" height="15.0" fill="rgb(248,17,9)" rx="2" ry="2" />
<text  x="480.52" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="138.8" y="517" width="1.4" height="15.0" fill="rgb(229,85,1)" rx="2" ry="2" />
<text  x="141.78" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="585.3" y="581" width="1.4" height="15.0" fill="rgb(224,111,52)" rx="2" ry="2" />
<text  x="588.30" y="591.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (14,492,753 samples, 0.12%)</title><rect x="179.4" y="629" width="1.4" height="15.0" fill="rgb(210,122,46)" rx="2" ry="2" />
<text  x="182.37" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (28,985,506 samples, 0.24%)</title><rect x="421.5" y="549" width="2.8" height="15.0" fill="rgb(236,199,25)" rx="2" ry="2" />
<text  x="424.53" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,275,361,877 samples, 84.10%)</title><rect x="14.2" y="741" width="992.4" height="15.0" fill="rgb(223,181,37)" rx="2" ry="2" />
<text  x="17.20" y="751.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="28.2" y="517" width="1.4" height="15.0" fill="rgb(249,83,52)" rx="2" ry="2" />
<text  x="31.20" y="527.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="109.4" y="421" width="1.4" height="15.0" fill="rgb(252,42,37)" rx="2" ry="2" />
<text  x="112.38" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::resource::v1::Resource&gt; (14,492,753 samples, 0.12%)</title><rect x="152.8" y="469" width="1.4" height="15.0" fill="rgb(245,206,14)" rx="2" ry="2" />
<text  x="155.78" y="479.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="277.4" y="277" width="1.4" height="15.0" fill="rgb(215,26,32)" rx="2" ry="2" />
<text  x="280.35" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="36.6" y="549" width="1.4" height="15.0" fill="rgb(245,219,9)" rx="2" ry="2" />
<text  x="39.60" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="80.0" y="469" width="1.4" height="15.0" fill="rgb(240,7,37)" rx="2" ry="2" />
<text  x="82.99" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="705.7" y="469" width="1.4" height="15.0" fill="rgb(224,25,2)" rx="2" ry="2" />
<text  x="708.68" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::operator++ (14,492,753 samples, 0.12%)</title><rect x="38.0" y="533" width="1.4" height="15.0" fill="rgb(222,58,50)" rx="2" ry="2" />
<text  x="41.00" y="543.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="169.6" y="453" width="1.4" height="15.0" fill="rgb(246,41,28)" rx="2" ry="2" />
<text  x="172.57" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~_Variant_storage (14,492,753 samples, 0.12%)</title><rect x="390.7" y="501" width="1.4" height="15.0" fill="rgb(215,120,18)" rx="2" ry="2" />
<text  x="393.74" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="515.3" y="469" width="1.4" height="15.0" fill="rgb(232,226,32)" rx="2" ry="2" />
<text  x="518.31" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="427.1" y="437" width="2.8" height="15.0" fill="rgb(210,81,21)" rx="2" ry="2" />
<text  x="430.13" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="52.0" y="645" width="1.4" height="15.0" fill="rgb(232,60,3)" rx="2" ry="2" />
<text  x="54.99" y="655.5" ></text>
</g>
<g >
<title>ExternalTalentUpGradeService::operator (3,768,115,780 samples, 30.84%)</title><rect x="53.4" y="677" width="363.9" height="15.0" fill="rgb(254,76,40)" rx="2" ry="2" />
<text  x="56.39" y="687.5" >ExternalTalentUpGradeService::operator</text>
</g>
<g >
<title>std::string::insert (14,492,753 samples, 0.12%)</title><rect x="610.5" y="501" width="1.4" height="15.0" fill="rgb(235,89,1)" rx="2" ry="2" />
<text  x="613.50" y="511.5" ></text>
</g>
<g >
<title>RPC::Respond (391,304,331 samples, 3.20%)</title><rect x="378.1" y="645" width="37.8" height="15.0" fill="rgb(242,149,6)" rx="2" ry="2" />
<text  x="381.14" y="655.5" >RPC..</text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="438.3" y="405" width="1.4" height="15.0" fill="rgb(230,6,48)" rx="2" ry="2" />
<text  x="441.33" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="596.5" y="341" width="1.4" height="15.0" fill="rgb(214,83,54)" rx="2" ry="2" />
<text  x="599.50" y="351.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="915.6" y="549" width="2.8" height="15.0" fill="rgb(223,17,20)" rx="2" ry="2" />
<text  x="918.65" y="559.5" ></text>
</g>
<g >
<title>NS_ACO::ScopeClock::GetCPUDiff (14,492,753 samples, 0.12%)</title><rect x="774.3" y="645" width="1.4" height="15.0" fill="rgb(237,72,21)" rx="2" ry="2" />
<text  x="777.27" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MutableField&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="711.3" y="453" width="1.4" height="15.0" fill="rgb(223,205,21)" rx="2" ry="2" />
<text  x="714.28" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (28,985,506 samples, 0.24%)</title><rect x="669.3" y="501" width="2.8" height="15.0" fill="rgb(243,138,34)" rx="2" ry="2" />
<text  x="672.29" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MapBegin (14,492,753 samples, 0.12%)</title><rect x="658.1" y="437" width="1.4" height="15.0" fill="rgb(254,42,34)" rx="2" ry="2" />
<text  x="661.09" y="447.5" ></text>
</g>
<g >
<title>std::string::reserve (28,985,506 samples, 0.24%)</title><rect x="1176.0" y="773" width="2.8" height="15.0" fill="rgb(232,14,37)" rx="2" ry="2" />
<text  x="1179.00" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="116.4" y="469" width="1.4" height="15.0" fill="rgb(221,62,37)" rx="2" ry="2" />
<text  x="119.38" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="502.7" y="309" width="1.4" height="15.0" fill="rgb(229,83,24)" rx="2" ry="2" />
<text  x="505.72" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::FieldOptions::weak (14,492,753 samples, 0.12%)</title><rect x="225.6" y="421" width="1.4" height="15.0" fill="rgb(223,56,4)" rx="2" ry="2" />
<text  x="228.56" y="431.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="112.2" y="437" width="1.4" height="15.0" fill="rgb(226,40,15)" rx="2" ry="2" />
<text  x="115.18" y="447.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="199.0" y="453" width="1.4" height="15.0" fill="rgb(253,15,14)" rx="2" ry="2" />
<text  x="201.97" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="484.5" y="485" width="1.4" height="15.0" fill="rgb(238,145,12)" rx="2" ry="2" />
<text  x="487.52" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="1188.6" y="773" width="1.4" height="15.0" fill="rgb(230,66,51)" rx="2" ry="2" />
<text  x="1191.60" y="783.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="942.2" y="373" width="1.4" height="15.0" fill="rgb(218,203,48)" rx="2" ry="2" />
<text  x="945.24" y="383.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="655.3" y="325" width="1.4" height="15.0" fill="rgb(237,18,46)" rx="2" ry="2" />
<text  x="658.29" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="863.9" y="421" width="1.4" height="15.0" fill="rgb(247,52,34)" rx="2" ry="2" />
<text  x="866.86" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ParseContext::ParseContext&lt;google::protobuf::stringpiece_internal::StringPiece&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="988.4" y="613" width="1.4" height="15.0" fill="rgb(244,42,49)" rx="2" ry="2" />
<text  x="991.43" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (72,463,765 samples, 0.59%)</title><rect x="117.8" y="485" width="7.0" height="15.0" fill="rgb(243,163,35)" rx="2" ry="2" />
<text  x="120.78" y="495.5" ></text>
</g>
<g >
<title>TracerUtil::CheckIsSample (14,492,753 samples, 0.12%)</title><rect x="568.5" y="565" width="1.4" height="15.0" fill="rgb(227,201,8)" rx="2" ry="2" />
<text  x="571.51" y="575.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (14,492,753 samples, 0.12%)</title><rect x="450.9" y="453" width="1.4" height="15.0" fill="rgb(209,180,49)" rx="2" ry="2" />
<text  x="453.93" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="495.7" y="165" width="1.4" height="15.0" fill="rgb(236,155,21)" rx="2" ry="2" />
<text  x="498.72" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;::_M_addr (14,492,753 samples, 0.12%)</title><rect x="61.8" y="373" width="1.4" height="15.0" fill="rgb(227,101,21)" rx="2" ry="2" />
<text  x="64.79" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::Symbol::parent_number_key (14,492,753 samples, 0.12%)</title><rect x="406.1" y="373" width="1.4" height="15.0" fill="rgb(249,50,33)" rx="2" ry="2" />
<text  x="409.13" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::ReleaseRecordable (14,492,753 samples, 0.12%)</title><rect x="859.7" y="501" width="1.4" height="15.0" fill="rgb(241,17,23)" rx="2" ry="2" />
<text  x="862.66" y="511.5" ></text>
</g>
<g >
<title>TalentUtil::UpdateTalentPointNtf (449,275,343 samples, 3.68%)</title><rect x="676.3" y="661" width="43.4" height="15.0" fill="rgb(253,223,16)" rx="2" ry="2" />
<text  x="679.29" y="671.5" >Tale..</text>
</g>
<g >
<title>[unknown] (57,971,012 samples, 0.47%)</title><rect x="1127.0" y="757" width="5.6" height="15.0" fill="rgb(214,46,23)" rx="2" ry="2" />
<text  x="1130.01" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (28,985,506 samples, 0.24%)</title><rect x="164.0" y="549" width="2.8" height="15.0" fill="rgb(250,154,44)" rx="2" ry="2" />
<text  x="166.97" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="386.5" y="501" width="1.4" height="15.0" fill="rgb(233,27,29)" rx="2" ry="2" />
<text  x="389.54" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (159,420,283 samples, 1.30%)</title><rect x="460.7" y="549" width="15.4" height="15.0" fill="rgb(225,25,49)" rx="2" ry="2" />
<text  x="463.72" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~_Move_ctor_base (14,492,753 samples, 0.12%)</title><rect x="390.7" y="533" width="1.4" height="15.0" fill="rgb(210,227,15)" rx="2" ry="2" />
<text  x="393.74" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="569.9" y="421" width="2.8" height="15.0" fill="rgb(208,221,50)" rx="2" ry="2" />
<text  x="572.91" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="145.8" y="341" width="1.4" height="15.0" fill="rgb(231,113,1)" rx="2" ry="2" />
<text  x="148.78" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::equal_range (14,492,753 samples, 0.12%)</title><rect x="63.2" y="485" width="1.4" height="15.0" fill="rgb(253,187,0)" rx="2" ry="2" />
<text  x="66.19" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="316.5" y="469" width="1.4" height="15.0" fill="rgb(229,94,17)" rx="2" ry="2" />
<text  x="319.55" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (72,463,765 samples, 0.59%)</title><rect x="621.7" y="453" width="7.0" height="15.0" fill="rgb(236,195,15)" rx="2" ry="2" />
<text  x="624.70" y="463.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="508.3" y="405" width="1.4" height="15.0" fill="rgb(210,15,18)" rx="2" ry="2" />
<text  x="511.32" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (28,985,506 samples, 0.24%)</title><rect x="164.0" y="565" width="2.8" height="15.0" fill="rgb(211,183,37)" rx="2" ry="2" />
<text  x="166.97" y="575.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="45.0" y="501" width="1.4" height="15.0" fill="rgb(214,221,18)" rx="2" ry="2" />
<text  x="47.99" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="264.8" y="373" width="1.4" height="15.0" fill="rgb(235,129,19)" rx="2" ry="2" />
<text  x="267.76" y="383.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="169.6" y="421" width="1.4" height="15.0" fill="rgb(205,68,31)" rx="2" ry="2" />
<text  x="172.57" y="431.5" ></text>
</g>
<g >
<title>msg::DBSetReq::_InternalParse (14,492,753 samples, 0.12%)</title><rect x="1020.6" y="757" width="1.4" height="15.0" fill="rgb(210,64,18)" rx="2" ry="2" />
<text  x="1023.63" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (130,434,777 samples, 1.07%)</title><rect x="355.7" y="533" width="12.6" height="15.0" fill="rgb(224,145,29)" rx="2" ry="2" />
<text  x="358.74" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::find&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="896.0" y="565" width="1.4" height="15.0" fill="rgb(225,49,24)" rx="2" ry="2" />
<text  x="899.05" y="575.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="618.9" y="309" width="1.4" height="15.0" fill="rgb(226,15,1)" rx="2" ry="2" />
<text  x="621.90" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::FastInt32ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="959.0" y="533" width="1.4" height="15.0" fill="rgb(235,9,35)" rx="2" ry="2" />
<text  x="962.04" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::MapIterator::MapIterator (14,492,753 samples, 0.12%)</title><rect x="631.5" y="437" width="1.4" height="15.0" fill="rgb(250,3,11)" rx="2" ry="2" />
<text  x="634.49" y="447.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="446.7" y="501" width="1.4" height="15.0" fill="rgb(212,56,47)" rx="2" ry="2" />
<text  x="449.73" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::trace::DefaultSpan*,  (14,492,753 samples, 0.12%)</title><rect x="701.5" y="453" width="1.4" height="15.0" fill="rgb(231,228,48)" rx="2" ry="2" />
<text  x="704.48" y="463.5" ></text>
</g>
<g >
<title>Log::WriteLog (28,985,506 samples, 0.24%)</title><rect x="541.9" y="501" width="2.8" height="15.0" fill="rgb(244,148,22)" rx="2" ry="2" />
<text  x="544.91" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::~InstrumentationScope (14,492,753 samples, 0.12%)</title><rect x="666.5" y="293" width="1.4" height="15.0" fill="rgb(228,15,20)" rx="2" ry="2" />
<text  x="669.49" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="382.3" y="517" width="1.4" height="15.0" fill="rgb(232,3,0)" rx="2" ry="2" />
<text  x="385.34" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (28,985,506 samples, 0.24%)</title><rect x="702.9" y="517" width="2.8" height="15.0" fill="rgb(243,173,47)" rx="2" ry="2" />
<text  x="705.88" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="609.1" y="373" width="1.4" height="15.0" fill="rgb(244,180,38)" rx="2" ry="2" />
<text  x="612.10" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (246,376,801 samples, 2.02%)</title><rect x="859.7" y="517" width="23.8" height="15.0" fill="rgb(218,213,36)" rx="2" ry="2" />
<text  x="862.66" y="527.5" >o..</text>
</g>
<g >
<title>google::protobuf::FindPtrOrNull&lt;std::unordered_map&lt;google::protobuf::Descriptor const*, google::protobuf::Message const*, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="968.8" y="549" width="1.4" height="15.0" fill="rgb(221,8,1)" rx="2" ry="2" />
<text  x="971.84" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="575.5" y="437" width="2.8" height="15.0" fill="rgb(253,35,18)" rx="2" ry="2" />
<text  x="578.50" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="495.7" y="133" width="1.4" height="15.0" fill="rgb(209,104,0)" rx="2" ry="2" />
<text  x="498.72" y="143.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_impl&lt;std::string const*, std::string const*, __gnu_cxx::__ops::_Iter_less_iter&gt; (14,492,753 samples, 0.12%)</title><rect x="586.7" y="357" width="1.4" height="15.0" fill="rgb(247,47,47)" rx="2" ry="2" />
<text  x="589.70" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="627.3" y="373" width="1.4" height="15.0" fill="rgb(225,229,0)" rx="2" ry="2" />
<text  x="630.30" y="383.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::MakeProtection (14,492,753 samples, 0.12%)</title><rect x="732.3" y="661" width="1.4" height="15.0" fill="rgb(214,20,1)" rx="2" ry="2" />
<text  x="735.28" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="606.3" y="325" width="1.4" height="15.0" fill="rgb(219,27,0)" rx="2" ry="2" />
<text  x="609.30" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (43,478,259 samples, 0.36%)</title><rect x="949.2" y="517" width="4.2" height="15.0" fill="rgb(239,99,38)" rx="2" ry="2" />
<text  x="952.24" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (347,826,072 samples, 2.85%)</title><rect x="214.4" y="453" width="33.6" height="15.0" fill="rgb(233,9,40)" rx="2" ry="2" />
<text  x="217.37" y="463.5" >go..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (43,478,259 samples, 0.36%)</title><rect x="274.6" y="373" width="4.2" height="15.0" fill="rgb(221,193,14)" rx="2" ry="2" />
<text  x="277.56" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="386.5" y="389" width="1.4" height="15.0" fill="rgb(209,215,36)" rx="2" ry="2" />
<text  x="389.54" y="399.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="886.3" y="277" width="1.4" height="15.0" fill="rgb(254,10,50)" rx="2" ry="2" />
<text  x="889.25" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="26.8" y="485" width="1.4" height="15.0" fill="rgb(205,88,17)" rx="2" ry="2" />
<text  x="29.80" y="495.5" ></text>
</g>
<g >
<title>PBInterpreter::GetMessageString (28,985,506 samples, 0.24%)</title><rect x="445.3" y="613" width="2.8" height="15.0" fill="rgb(232,148,26)" rx="2" ry="2" />
<text  x="448.33" y="623.5" ></text>
</g>
<g >
<title>QueueMap::InQueueEP (14,492,753 samples, 0.12%)</title><rect x="904.4" y="613" width="1.4" height="15.0" fill="rgb(235,15,41)" rx="2" ry="2" />
<text  x="907.45" y="623.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="1155.0" y="741" width="1.4" height="15.0" fill="rgb(251,136,38)" rx="2" ry="2" />
<text  x="1158.01" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::SerializeToArrayImpl (14,492,753 samples, 0.12%)</title><rect x="491.5" y="421" width="1.4" height="15.0" fill="rgb(205,35,6)" rx="2" ry="2" />
<text  x="494.52" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, PBInterpreter::MessageDesc&gt;, std::_Select1st&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="641.3" y="501" width="1.4" height="15.0" fill="rgb(240,5,31)" rx="2" ry="2" />
<text  x="644.29" y="511.5" ></text>
</g>
<g >
<title>tbuspp_queue_peek (14,492,753 samples, 0.12%)</title><rect x="1142.4" y="741" width="1.4" height="15.0" fill="rgb(252,178,0)" rx="2" ry="2" />
<text  x="1145.41" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (28,985,506 samples, 0.24%)</title><rect x="155.6" y="501" width="2.8" height="15.0" fill="rgb(223,208,29)" rx="2" ry="2" />
<text  x="158.58" y="511.5" ></text>
</g>
<g >
<title>msg::Prop::~Prop (57,971,012 samples, 0.47%)</title><rect x="1082.2" y="773" width="5.6" height="15.0" fill="rgb(233,226,41)" rx="2" ry="2" />
<text  x="1085.22" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, PBInterpreter::MessageDesc&gt;, std::_Select1st&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, PBInterpreter::MessageDesc&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="641.3" y="485" width="1.4" height="15.0" fill="rgb(217,169,26)" rx="2" ry="2" />
<text  x="644.29" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="364.1" y="437" width="1.4" height="15.0" fill="rgb(212,138,23)" rx="2" ry="2" />
<text  x="367.14" y="447.5" ></text>
</g>
<g >
<title>RPC::GetServiceHead (14,492,753 samples, 0.12%)</title><rect x="676.3" y="629" width="1.4" height="15.0" fill="rgb(209,122,11)" rx="2" ry="2" />
<text  x="679.29" y="639.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="561.5" y="261" width="1.4" height="15.0" fill="rgb(207,100,15)" rx="2" ry="2" />
<text  x="564.51" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRepeatedField&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="548.9" y="405" width="1.4" height="15.0" fill="rgb(222,104,33)" rx="2" ry="2" />
<text  x="551.91" y="415.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="707.1" y="437" width="1.4" height="15.0" fill="rgb(214,187,54)" rx="2" ry="2" />
<text  x="710.08" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (43,478,259 samples, 0.36%)</title><rect x="672.1" y="549" width="4.2" height="15.0" fill="rgb(242,196,27)" rx="2" ry="2" />
<text  x="675.09" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (28,985,506 samples, 0.24%)</title><rect x="637.1" y="389" width="2.8" height="15.0" fill="rgb(227,56,19)" rx="2" ry="2" />
<text  x="640.09" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="704.3" y="421" width="1.4" height="15.0" fill="rgb(217,147,2)" rx="2" ry="2" />
<text  x="707.28" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="936.6" y="533" width="1.4" height="15.0" fill="rgb(229,150,19)" rx="2" ry="2" />
<text  x="939.64" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="618.9" y="229" width="1.4" height="15.0" fill="rgb(240,60,54)" rx="2" ry="2" />
<text  x="621.90" y="239.5" ></text>
</g>
<g >
<title>prometheus::Gauge::Increment (14,492,753 samples, 0.12%)</title><rect x="78.6" y="437" width="1.4" height="15.0" fill="rgb(211,141,19)" rx="2" ry="2" />
<text  x="81.59" y="447.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (28,985,506 samples, 0.24%)</title><rect x="77.2" y="501" width="2.8" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="80.19" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="366.9" y="469" width="1.4" height="15.0" fill="rgb(207,116,48)" rx="2" ry="2" />
<text  x="369.94" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="869.5" y="341" width="1.4" height="15.0" fill="rgb(224,157,20)" rx="2" ry="2" />
<text  x="872.45" y="351.5" ></text>
</g>
<g >
<title>RPC::RequestAndWait (782,608,662 samples, 6.41%)</title><rect x="586.7" y="581" width="75.6" height="15.0" fill="rgb(224,23,26)" rx="2" ry="2" />
<text  x="589.70" y="591.5" >RPC::Req..</text>
</g>
<g >
<title>google::protobuf::Descriptor::full_name (14,492,753 samples, 0.12%)</title><rect x="192.0" y="549" width="1.4" height="15.0" fill="rgb(228,55,35)" rx="2" ry="2" />
<text  x="194.97" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MutableMapData (14,492,753 samples, 0.12%)</title><rect x="368.3" y="485" width="1.4" height="15.0" fill="rgb(221,188,16)" rx="2" ry="2" />
<text  x="371.34" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (246,376,801 samples, 2.02%)</title><rect x="110.8" y="501" width="23.8" height="15.0" fill="rgb(237,110,10)" rx="2" ry="2" />
<text  x="113.78" y="511.5" >g..</text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::Span&gt; (14,492,753 samples, 0.12%)</title><rect x="148.6" y="421" width="1.4" height="15.0" fill="rgb(246,96,44)" rx="2" ry="2" />
<text  x="151.58" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::CopyValue (28,985,506 samples, 0.24%)</title><rect x="974.4" y="565" width="2.8" height="15.0" fill="rgb(230,78,22)" rx="2" ry="2" />
<text  x="977.44" y="575.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="11.4" y="645" width="1.4" height="15.0" fill="rgb(228,99,18)" rx="2" ry="2" />
<text  x="14.40" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::Message::DebugString (14,492,753 samples, 0.12%)</title><rect x="415.9" y="661" width="1.4" height="15.0" fill="rgb(249,17,52)" rx="2" ry="2" />
<text  x="418.93" y="671.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="639.9" y="293" width="1.4" height="15.0" fill="rgb(254,36,37)" rx="2" ry="2" />
<text  x="642.89" y="303.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (28,985,506 samples, 0.24%)</title><rect x="298.4" y="405" width="2.8" height="15.0" fill="rgb(213,169,30)" rx="2" ry="2" />
<text  x="301.35" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::InstrumentationScope&gt; (14,492,753 samples, 0.12%)</title><rect x="147.2" y="421" width="1.4" height="15.0" fill="rgb(230,156,14)" rx="2" ry="2" />
<text  x="150.18" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="347.3" y="517" width="1.4" height="15.0" fill="rgb(249,108,15)" rx="2" ry="2" />
<text  x="350.34" y="527.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="606.3" y="261" width="1.4" height="15.0" fill="rgb(237,144,45)" rx="2" ry="2" />
<text  x="609.30" y="271.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="963.2" y="533" width="1.4" height="15.0" fill="rgb(208,144,39)" rx="2" ry="2" />
<text  x="966.24" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="609.1" y="405" width="1.4" height="15.0" fill="rgb(249,204,8)" rx="2" ry="2" />
<text  x="612.10" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::string, std::variant&lt;bool, int, unsigned int, long, double, std::string, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::variant&lt;bool, int, unsigned int, long, double, std::string, std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;, std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;, std::vector&lt;long, std::allocator&lt;long&gt; &gt;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, unsigned long, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::begin (14,492,753 samples, 0.12%)</title><rect x="882.1" y="421" width="1.4" height="15.0" fill="rgb(224,144,18)" rx="2" ry="2" />
<text  x="885.05" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::add_attributes (14,492,753 samples, 0.12%)</title><rect x="82.8" y="453" width="1.4" height="15.0" fill="rgb(229,156,17)" rx="2" ry="2" />
<text  x="85.79" y="463.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="642.7" y="421" width="1.4" height="15.0" fill="rgb(240,200,1)" rx="2" ry="2" />
<text  x="645.69" y="431.5" ></text>
</g>
<g >
<title>RPC::RPCSync&lt;EventParam&gt; (927,536,192 samples, 7.59%)</title><rect x="586.7" y="597" width="89.6" height="15.0" fill="rgb(229,53,51)" rx="2" ry="2" />
<text  x="589.70" y="607.5" >RPC::RPCSy..</text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="15.6" y="645" width="1.4" height="15.0" fill="rgb(245,125,29)" rx="2" ry="2" />
<text  x="18.60" y="655.5" ></text>
</g>
<g >
<title>std::pair&lt;NS_ACO::ThreadID const, int&gt;::pair&lt;NS_ACO::ThreadID const&amp;, 0ul&gt; (14,492,753 samples, 0.12%)</title><rect x="903.0" y="517" width="1.4" height="15.0" fill="rgb(219,199,53)" rx="2" ry="2" />
<text  x="906.05" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="529.3" y="405" width="1.4" height="15.0" fill="rgb(220,165,27)" rx="2" ry="2" />
<text  x="532.31" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_move (14,492,753 samples, 0.12%)</title><rect x="610.5" y="421" width="1.4" height="15.0" fill="rgb(222,125,8)" rx="2" ry="2" />
<text  x="613.50" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Recordable::Recordable (14,492,753 samples, 0.12%)</title><rect x="581.1" y="469" width="1.4" height="15.0" fill="rgb(241,40,10)" rx="2" ry="2" />
<text  x="584.10" y="479.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="487.3" y="469" width="1.4" height="15.0" fill="rgb(214,108,39)" rx="2" ry="2" />
<text  x="490.32" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (14,492,753 samples, 0.12%)</title><rect x="145.8" y="501" width="1.4" height="15.0" fill="rgb(232,223,46)" rx="2" ry="2" />
<text  x="148.78" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;google::protobuf::FieldDescriptor const*, std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::_M_end (14,492,753 samples, 0.12%)</title><rect x="46.4" y="549" width="1.4" height="15.0" fill="rgb(231,83,37)" rx="2" ry="2" />
<text  x="49.39" y="559.5" ></text>
</g>
<g >
<title>tbus2::MQ::LockMsgBuf (14,492,753 samples, 0.12%)</title><rect x="1143.8" y="741" width="1.4" height="15.0" fill="rgb(243,199,21)" rx="2" ry="2" />
<text  x="1146.81" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="915.6" y="533" width="1.4" height="15.0" fill="rgb(244,74,40)" rx="2" ry="2" />
<text  x="918.65" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="596.5" y="357" width="1.4" height="15.0" fill="rgb(232,52,49)" rx="2" ry="2" />
<text  x="599.50" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="291.4" y="437" width="1.4" height="15.0" fill="rgb(229,45,33)" rx="2" ry="2" />
<text  x="294.35" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="354.3" y="517" width="1.4" height="15.0" fill="rgb(252,45,20)" rx="2" ry="2" />
<text  x="357.34" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="708.5" y="485" width="1.4" height="15.0" fill="rgb(229,143,30)" rx="2" ry="2" />
<text  x="711.48" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="89.8" y="469" width="1.4" height="15.0" fill="rgb(251,173,17)" rx="2" ry="2" />
<text  x="92.79" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;google::protobuf::Message const*&gt;::allocator (14,492,753 samples, 0.12%)</title><rect x="632.9" y="421" width="1.4" height="15.0" fill="rgb(237,102,49)" rx="2" ry="2" />
<text  x="635.89" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::SetAttribute (14,492,753 samples, 0.12%)</title><rect x="89.8" y="405" width="1.4" height="15.0" fill="rgb(210,14,20)" rx="2" ry="2" />
<text  x="92.79" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (28,985,506 samples, 0.24%)</title><rect x="529.3" y="453" width="2.8" height="15.0" fill="rgb(219,133,23)" rx="2" ry="2" />
<text  x="532.31" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;opentelemetry::v1::trace::Span,  (14,492,753 samples, 0.12%)</title><rect x="519.5" y="517" width="1.4" height="15.0" fill="rgb(237,47,36)" rx="2" ry="2" />
<text  x="522.51" y="527.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="623.1" y="357" width="1.4" height="15.0" fill="rgb(233,31,16)" rx="2" ry="2" />
<text  x="626.10" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="373" width="1.4" height="15.0" fill="rgb(234,13,17)" rx="2" ry="2" />
<text  x="652.69" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::value_case (14,492,753 samples, 0.12%)</title><rect x="868.1" y="325" width="1.4" height="15.0" fill="rgb(210,140,30)" rx="2" ry="2" />
<text  x="871.05" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="688.9" y="373" width="1.4" height="15.0" fill="rgb(223,69,52)" rx="2" ry="2" />
<text  x="691.88" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="77.2" y="421" width="1.4" height="15.0" fill="rgb(236,210,31)" rx="2" ry="2" />
<text  x="80.19" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintBool (28,985,506 samples, 0.24%)</title><rect x="292.8" y="437" width="2.8" height="15.0" fill="rgb(208,121,38)" rx="2" ry="2" />
<text  x="295.75" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="534.9" y="437" width="1.4" height="15.0" fill="rgb(207,213,17)" rx="2" ry="2" />
<text  x="537.91" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapField&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (28,985,506 samples, 0.24%)</title><rect x="1153.6" y="757" width="2.8" height="15.0" fill="rgb(243,100,22)" rx="2" ry="2" />
<text  x="1156.61" y="767.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (231,884,048 samples, 1.90%)</title><rect x="141.6" y="597" width="22.4" height="15.0" fill="rgb(233,35,42)" rx="2" ry="2" />
<text  x="144.58" y="607.5" >T..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="596.5" y="373" width="1.4" height="15.0" fill="rgb(251,64,11)" rx="2" ry="2" />
<text  x="599.50" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFromString (14,492,753 samples, 0.12%)</title><rect x="54.8" y="629" width="1.4" height="15.0" fill="rgb(219,34,1)" rx="2" ry="2" />
<text  x="57.79" y="639.5" ></text>
</g>
<g >
<title>std::string::empty (14,492,753 samples, 0.12%)</title><rect x="863.9" y="309" width="1.4" height="15.0" fill="rgb(207,8,41)" rx="2" ry="2" />
<text  x="866.86" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~vector (14,492,753 samples, 0.12%)</title><rect x="372.5" y="533" width="1.4" height="15.0" fill="rgb(231,93,12)" rx="2" ry="2" />
<text  x="375.54" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;NS_ACO::AcoEventManager::OnThreadExitList&gt;::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="12.8" y="661" width="1.4" height="15.0" fill="rgb(236,32,37)" rx="2" ry="2" />
<text  x="15.80" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::string&gt;::max_size (14,492,753 samples, 0.12%)</title><rect x="995.4" y="597" width="1.4" height="15.0" fill="rgb(224,106,14)" rx="2" ry="2" />
<text  x="998.43" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::RuntimeContext::GetValue (14,492,753 samples, 0.12%)</title><rect x="162.6" y="501" width="1.4" height="15.0" fill="rgb(219,69,39)" rx="2" ry="2" />
<text  x="165.57" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (14,492,753 samples, 0.12%)</title><rect x="600.7" y="469" width="1.4" height="15.0" fill="rgb(242,3,50)" rx="2" ry="2" />
<text  x="603.70" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetInt32 (14,492,753 samples, 0.12%)</title><rect x="358.5" y="517" width="1.4" height="15.0" fill="rgb(214,52,10)" rx="2" ry="2" />
<text  x="361.54" y="527.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (202,898,542 samples, 1.66%)</title><rect x="396.3" y="629" width="19.6" height="15.0" fill="rgb(240,126,6)" rx="2" ry="2" />
<text  x="399.33" y="639.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (101,449,271 samples, 0.83%)</title><rect x="662.3" y="549" width="9.8" height="15.0" fill="rgb(246,105,10)" rx="2" ry="2" />
<text  x="665.29" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (86,956,518 samples, 0.71%)</title><rect x="68.8" y="485" width="8.4" height="15.0" fill="rgb(237,19,7)" rx="2" ry="2" />
<text  x="71.79" y="495.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (28,985,506 samples, 0.24%)</title><rect x="431.3" y="549" width="2.8" height="15.0" fill="rgb(219,185,36)" rx="2" ry="2" />
<text  x="434.33" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::string, char&gt; (14,492,753 samples, 0.12%)</title><rect x="898.8" y="549" width="1.4" height="15.0" fill="rgb(252,73,23)" rx="2" ry="2" />
<text  x="901.85" y="559.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="421.5" y="581" width="2.8" height="15.0" fill="rgb(249,102,1)" rx="2" ry="2" />
<text  x="424.53" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="368.3" y="453" width="1.4" height="15.0" fill="rgb(217,64,7)" rx="2" ry="2" />
<text  x="371.34" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (289,855,060 samples, 2.37%)</title><rect x="106.6" y="549" width="28.0" height="15.0" fill="rgb(206,67,8)" rx="2" ry="2" />
<text  x="109.58" y="559.5" >g..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::PrintMaybeWithMarker (14,492,753 samples, 0.12%)</title><rect x="967.4" y="581" width="1.4" height="15.0" fill="rgb(238,46,45)" rx="2" ry="2" />
<text  x="970.44" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (188,405,789 samples, 1.54%)</title><rect x="522.3" y="485" width="18.2" height="15.0" fill="rgb(252,184,12)" rx="2" ry="2" />
<text  x="525.31" y="495.5" ></text>
</g>
<g >
<title>RPC::RPCSync&lt;EventParam&gt; (1,101,449,228 samples, 9.02%)</title><rect x="478.9" y="597" width="106.4" height="15.0" fill="rgb(219,19,34)" rx="2" ry="2" />
<text  x="481.92" y="607.5" >RPC::RPCSync&lt;..</text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="716.9" y="389" width="1.4" height="15.0" fill="rgb(229,45,41)" rx="2" ry="2" />
<text  x="719.88" y="399.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="85.6" y="389" width="1.4" height="15.0" fill="rgb(213,65,53)" rx="2" ry="2" />
<text  x="88.59" y="399.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (14,492,753 samples, 0.12%)</title><rect x="1097.6" y="677" width="1.4" height="15.0" fill="rgb(212,75,16)" rx="2" ry="2" />
<text  x="1100.62" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;unsigned long&gt; (14,492,753 samples, 0.12%)</title><rect x="452.3" y="485" width="1.4" height="15.0" fill="rgb(224,135,11)" rx="2" ry="2" />
<text  x="455.33" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (188,405,789 samples, 1.54%)</title><rect x="425.7" y="613" width="18.2" height="15.0" fill="rgb(215,203,22)" rx="2" ry="2" />
<text  x="428.73" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="19.8" y="613" width="1.4" height="15.0" fill="rgb(215,49,15)" rx="2" ry="2" />
<text  x="22.80" y="623.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="1114.4" y="677" width="1.4" height="15.0" fill="rgb(211,50,7)" rx="2" ry="2" />
<text  x="1117.41" y="687.5" ></text>
</g>
<g >
<title>msg::ServerPkg::mutable_head (14,492,753 samples, 0.12%)</title><rect x="102.4" y="581" width="1.4" height="15.0" fill="rgb(217,92,33)" rx="2" ry="2" />
<text  x="105.38" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::TraceId::ToLowerBase16 (14,492,753 samples, 0.12%)</title><rect x="589.5" y="517" width="1.4" height="15.0" fill="rgb(207,221,18)" rx="2" ry="2" />
<text  x="592.50" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="670.7" y="453" width="1.4" height="15.0" fill="rgb(232,26,4)" rx="2" ry="2" />
<text  x="673.69" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;google::protobuf::FieldDescriptor const*&gt;::construct&lt;google::protobuf::FieldDescriptor const*, google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="399.1" y="485" width="1.4" height="15.0" fill="rgb(240,200,35)" rx="2" ry="2" />
<text  x="402.13" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="840.1" y="517" width="1.4" height="15.0" fill="rgb(215,218,29)" rx="2" ry="2" />
<text  x="843.06" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (14,492,753 samples, 0.12%)</title><rect x="1012.2" y="693" width="1.4" height="15.0" fill="rgb(207,142,5)" rx="2" ry="2" />
<text  x="1015.23" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (28,985,506 samples, 0.24%)</title><rect x="305.3" y="325" width="2.8" height="15.0" fill="rgb(216,192,27)" rx="2" ry="2" />
<text  x="308.35" y="335.5" ></text>
</g>
<g >
<title>RPC::Wait (260,869,554 samples, 2.14%)</title><rect x="637.1" y="565" width="25.2" height="15.0" fill="rgb(230,30,7)" rx="2" ry="2" />
<text  x="640.09" y="575.5" >R..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="403.3" y="533" width="2.8" height="15.0" fill="rgb(207,69,38)" rx="2" ry="2" />
<text  x="406.33" y="543.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="708.5" y="437" width="1.4" height="15.0" fill="rgb(220,190,13)" rx="2" ry="2" />
<text  x="711.48" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="533.5" y="341" width="1.4" height="15.0" fill="rgb(210,142,53)" rx="2" ry="2" />
<text  x="536.51" y="351.5" ></text>
</g>
<g >
<title>std::move_backward&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="453" width="1.4" height="15.0" fill="rgb(226,6,4)" rx="2" ry="2" />
<text  x="344.74" y="463.5" ></text>
</g>
<g >
<title>[unknown] (57,971,012 samples, 0.47%)</title><rect x="1082.2" y="757" width="5.6" height="15.0" fill="rgb(217,61,19)" rx="2" ry="2" />
<text  x="1085.22" y="767.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;google::protobuf::Message const**&gt; (14,492,753 samples, 0.12%)</title><rect x="984.2" y="469" width="1.4" height="15.0" fill="rgb(209,79,9)" rx="2" ry="2" />
<text  x="987.23" y="479.5" ></text>
</g>
<g >
<title>std::string::size (28,985,506 samples, 0.24%)</title><rect x="943.6" y="517" width="2.8" height="15.0" fill="rgb(215,181,15)" rx="2" ry="2" />
<text  x="946.64" y="527.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; (14,492,753 samples, 0.12%)</title><rect x="197.6" y="501" width="1.4" height="15.0" fill="rgb(228,168,47)" rx="2" ry="2" />
<text  x="200.57" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;google::protobuf::FieldDescriptor const*&gt;::max_size (14,492,753 samples, 0.12%)</title><rect x="523.7" y="405" width="1.4" height="15.0" fill="rgb(228,64,28)" rx="2" ry="2" />
<text  x="526.71" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::Span (14,492,753 samples, 0.12%)</title><rect x="893.3" y="389" width="1.4" height="15.0" fill="rgb(223,30,18)" rx="2" ry="2" />
<text  x="896.25" y="399.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="718.3" y="517" width="1.4" height="15.0" fill="rgb(234,117,54)" rx="2" ry="2" />
<text  x="721.28" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="96.8" y="485" width="1.4" height="15.0" fill="rgb(233,166,39)" rx="2" ry="2" />
<text  x="99.79" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="862.5" y="325" width="1.4" height="15.0" fill="rgb(222,63,49)" rx="2" ry="2" />
<text  x="865.46" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="171.0" y="485" width="1.4" height="15.0" fill="rgb(222,224,18)" rx="2" ry="2" />
<text  x="173.97" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (115,942,024 samples, 0.95%)</title><rect x="935.2" y="565" width="11.2" height="15.0" fill="rgb(220,46,43)" rx="2" ry="2" />
<text  x="938.24" y="575.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service (57,971,012 samples, 0.47%)</title><rect x="679.1" y="581" width="5.6" height="15.0" fill="rgb(232,28,2)" rx="2" ry="2" />
<text  x="682.09" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="344.5" y="517" width="1.4" height="15.0" fill="rgb(218,122,48)" rx="2" ry="2" />
<text  x="347.54" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="667.9" y="341" width="1.4" height="15.0" fill="rgb(238,134,24)" rx="2" ry="2" />
<text  x="670.89" y="351.5" ></text>
</g>
<g >
<title>std::to_string (14,492,753 samples, 0.12%)</title><rect x="898.8" y="565" width="1.4" height="15.0" fill="rgb(245,220,11)" rx="2" ry="2" />
<text  x="901.85" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (28,985,506 samples, 0.24%)</title><rect x="74.4" y="373" width="2.8" height="15.0" fill="rgb(224,17,4)" rx="2" ry="2" />
<text  x="77.39" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (28,985,506 samples, 0.24%)</title><rect x="687.5" y="485" width="2.8" height="15.0" fill="rgb(214,24,15)" rx="2" ry="2" />
<text  x="690.49" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="599.3" y="469" width="1.4" height="15.0" fill="rgb(213,134,26)" rx="2" ry="2" />
<text  x="602.30" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="427.1" y="453" width="2.8" height="15.0" fill="rgb(240,20,46)" rx="2" ry="2" />
<text  x="430.13" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="501.3" y="389" width="1.4" height="15.0" fill="rgb(217,172,6)" rx="2" ry="2" />
<text  x="504.32" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::AssignDescriptors (14,492,753 samples, 0.12%)</title><rect x="659.5" y="389" width="1.4" height="15.0" fill="rgb(254,133,3)" rx="2" ry="2" />
<text  x="662.49" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (28,985,506 samples, 0.24%)</title><rect x="529.3" y="437" width="2.8" height="15.0" fill="rgb(216,100,13)" rx="2" ry="2" />
<text  x="532.31" y="447.5" ></text>
</g>
<g >
<title>tlog_category_log_in (28,985,506 samples, 0.24%)</title><rect x="1145.2" y="773" width="2.8" height="15.0" fill="rgb(208,89,24)" rx="2" ry="2" />
<text  x="1148.21" y="783.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="352.9" y="389" width="1.4" height="15.0" fill="rgb(241,22,4)" rx="2" ry="2" />
<text  x="355.94" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::_internal_string_value (14,492,753 samples, 0.12%)</title><rect x="66.0" y="309" width="1.4" height="15.0" fill="rgb(228,13,53)" rx="2" ry="2" />
<text  x="68.99" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::label (14,492,753 samples, 0.12%)</title><rect x="921.2" y="565" width="1.4" height="15.0" fill="rgb(223,142,44)" rx="2" ry="2" />
<text  x="924.25" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="115.0" y="485" width="1.4" height="15.0" fill="rgb(230,227,38)" rx="2" ry="2" />
<text  x="117.98" y="495.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="694.5" y="405" width="1.4" height="15.0" fill="rgb(254,205,2)" rx="2" ry="2" />
<text  x="697.48" y="415.5" ></text>
</g>
<g >
<title>RPC::RPCAsync (840,579,674 samples, 6.88%)</title><rect x="56.2" y="613" width="81.2" height="15.0" fill="rgb(216,197,18)" rx="2" ry="2" />
<text  x="59.19" y="623.5" >RPC::RPCA..</text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="442.5" y="405" width="1.4" height="15.0" fill="rgb(253,151,50)" rx="2" ry="2" />
<text  x="445.53" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="494.3" y="213" width="1.4" height="15.0" fill="rgb(232,13,12)" rx="2" ry="2" />
<text  x="497.32" y="223.5" ></text>
</g>
<g >
<title>google::protobuf::MapKey::SetType (14,492,753 samples, 0.12%)</title><rect x="414.5" y="485" width="1.4" height="15.0" fill="rgb(228,24,25)" rx="2" ry="2" />
<text  x="417.53" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="600.7" y="373" width="1.4" height="15.0" fill="rgb(219,167,39)" rx="2" ry="2" />
<text  x="603.70" y="383.5" ></text>
</g>
<g >
<title>tbus2::Endpoint::RecvMsg (14,492,753 samples, 0.12%)</title><rect x="1134.0" y="725" width="1.4" height="15.0" fill="rgb(234,201,49)" rx="2" ry="2" />
<text  x="1137.01" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, int&gt;, std::_Select1st&lt;std::pair&lt;int const, int&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="847.1" y="629" width="1.4" height="15.0" fill="rgb(208,124,34)" rx="2" ry="2" />
<text  x="850.06" y="639.5" ></text>
</g>
<g >
<title>RPC::Request (652,173,885 samples, 5.34%)</title><rect x="478.9" y="565" width="63.0" height="15.0" fill="rgb(208,213,16)" rx="2" ry="2" />
<text  x="481.92" y="575.5" >RPC::R..</text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="877.9" y="149" width="1.4" height="15.0" fill="rgb(209,65,30)" rx="2" ry="2" />
<text  x="880.85" y="159.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span&gt;::~RepeatedPtrField (28,985,506 samples, 0.24%)</title><rect x="873.7" y="277" width="2.8" height="15.0" fill="rgb(238,62,35)" rx="2" ry="2" />
<text  x="876.65" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;opentelemetry::v1::trace::DefaultSpan*,  (14,492,753 samples, 0.12%)</title><rect x="394.9" y="501" width="1.4" height="15.0" fill="rgb(217,120,40)" rx="2" ry="2" />
<text  x="397.93" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::operator[] (14,492,753 samples, 0.12%)</title><rect x="726.7" y="693" width="1.4" height="15.0" fill="rgb(254,56,6)" rx="2" ry="2" />
<text  x="729.68" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (188,405,789 samples, 1.54%)</title><rect x="397.7" y="597" width="18.2" height="15.0" fill="rgb(234,93,9)" rx="2" ry="2" />
<text  x="400.73" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::string&gt; &gt;::allocate (28,985,506 samples, 0.24%)</title><rect x="994.0" y="613" width="2.8" height="15.0" fill="rgb(221,102,48)" rx="2" ry="2" />
<text  x="997.03" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline (28,985,506 samples, 0.24%)</title><rect x="1030.4" y="725" width="2.8" height="15.0" fill="rgb(237,76,34)" rx="2" ry="2" />
<text  x="1033.43" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstPointerAtOffset&lt;bool&gt; (14,492,753 samples, 0.12%)</title><rect x="338.9" y="469" width="1.4" height="15.0" fill="rgb(234,178,44)" rx="2" ry="2" />
<text  x="341.94" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="618.9" y="389" width="1.4" height="15.0" fill="rgb(213,91,21)" rx="2" ry="2" />
<text  x="621.90" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::value_case (14,492,753 samples, 0.12%)</title><rect x="145.8" y="325" width="1.4" height="15.0" fill="rgb(229,141,51)" rx="2" ry="2" />
<text  x="148.78" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="502.7" y="421" width="1.4" height="15.0" fill="rgb(219,221,50)" rx="2" ry="2" />
<text  x="505.72" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, MetricsObj&lt;prometheus::Counter&gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, MetricsObj&lt;prometheus::Counter&gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, MetricsObj&lt;prometheus::Counter&gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="383.7" y="549" width="1.4" height="15.0" fill="rgb(232,10,38)" rx="2" ry="2" />
<text  x="386.74" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32 (14,492,753 samples, 0.12%)</title><rect x="75.8" y="341" width="1.4" height="15.0" fill="rgb(246,139,49)" rx="2" ry="2" />
<text  x="78.79" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::tuple&lt;google::protobuf::TextFormat::FastFieldValuePrinter const*, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt;, true&gt; (14,492,753 samples, 0.12%)</title><rect x="550.3" y="453" width="1.4" height="15.0" fill="rgb(245,163,27)" rx="2" ry="2" />
<text  x="553.31" y="463.5" ></text>
</g>
<g >
<title>[unknown] (86,956,518 samples, 0.71%)</title><rect x="1024.8" y="773" width="8.4" height="15.0" fill="rgb(207,98,48)" rx="2" ry="2" />
<text  x="1027.83" y="783.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::~Span (28,985,506 samples, 0.24%)</title><rect x="873.7" y="229" width="2.8" height="15.0" fill="rgb(237,137,22)" rx="2" ry="2" />
<text  x="876.65" y="239.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (347,826,072 samples, 2.85%)</title><rect x="19.8" y="709" width="33.6" height="15.0" fill="rgb(216,76,37)" rx="2" ry="2" />
<text  x="22.80" y="719.5" >op..</text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::TraceState&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="519.5" y="373" width="1.4" height="15.0" fill="rgb(236,14,10)" rx="2" ry="2" />
<text  x="522.51" y="383.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="352.9" y="357" width="1.4" height="15.0" fill="rgb(239,198,26)" rx="2" ry="2" />
<text  x="355.94" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="574.1" y="389" width="1.4" height="15.0" fill="rgb(253,219,12)" rx="2" ry="2" />
<text  x="577.10" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~vector (28,985,506 samples, 0.24%)</title><rect x="313.7" y="453" width="2.8" height="15.0" fill="rgb(238,193,19)" rx="2" ry="2" />
<text  x="316.75" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::~_Copy_assign_base (14,492,753 samples, 0.12%)</title><rect x="513.9" y="405" width="1.4" height="15.0" fill="rgb(221,86,45)" rx="2" ry="2" />
<text  x="516.91" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="875.1" y="117" width="1.4" height="15.0" fill="rgb(225,144,24)" rx="2" ry="2" />
<text  x="878.05" y="127.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (28,985,506 samples, 0.24%)</title><rect x="866.7" y="389" width="2.8" height="15.0" fill="rgb(212,69,50)" rx="2" ry="2" />
<text  x="869.65" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;google::protobuf::Message const**&gt;, google::protobuf::Message const**&gt; (14,492,753 samples, 0.12%)</title><rect x="131.8" y="373" width="1.4" height="15.0" fill="rgb(223,197,8)" rx="2" ry="2" />
<text  x="134.78" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (115,942,024 samples, 0.95%)</title><rect x="590.9" y="533" width="11.2" height="15.0" fill="rgb(218,123,1)" rx="2" ry="2" />
<text  x="593.90" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::strings::AlphaNum::AlphaNum (14,492,753 samples, 0.12%)</title><rect x="308.1" y="421" width="1.4" height="15.0" fill="rgb(249,86,29)" rx="2" ry="2" />
<text  x="311.15" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="466.3" y="501" width="1.4" height="15.0" fill="rgb(221,202,15)" rx="2" ry="2" />
<text  x="469.32" y="511.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (28,985,506 samples, 0.24%)</title><rect x="1111.6" y="677" width="2.8" height="15.0" fill="rgb(214,47,49)" rx="2" ry="2" />
<text  x="1114.61" y="687.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (57,971,012 samples, 0.47%)</title><rect x="884.9" y="421" width="5.6" height="15.0" fill="rgb(234,117,45)" rx="2" ry="2" />
<text  x="887.85" y="431.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="487.3" y="501" width="1.4" height="15.0" fill="rgb(248,83,39)" rx="2" ry="2" />
<text  x="490.32" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map (14,492,753 samples, 0.12%)</title><rect x="970.2" y="533" width="1.4" height="15.0" fill="rgb(214,137,21)" rx="2" ry="2" />
<text  x="973.24" y="543.5" ></text>
</g>
<g >
<title>RPC::RequestAndWait (927,536,192 samples, 7.59%)</title><rect x="478.9" y="581" width="89.6" height="15.0" fill="rgb(252,196,21)" rx="2" ry="2" />
<text  x="481.92" y="591.5" >RPC::Reque..</text>
</g>
<g >
<title>std::_Hash_bytes (14,492,753 samples, 0.12%)</title><rect x="896.0" y="453" width="1.4" height="15.0" fill="rgb(208,5,21)" rx="2" ry="2" />
<text  x="899.05" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,492,753 samples, 0.12%)</title><rect x="480.3" y="517" width="1.4" height="15.0" fill="rgb(243,40,37)" rx="2" ry="2" />
<text  x="483.32" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="670.7" y="469" width="1.4" height="15.0" fill="rgb(254,120,44)" rx="2" ry="2" />
<text  x="673.69" y="479.5" ></text>
</g>
<g >
<title>TracerUtil::SpiltTraceParent (14,492,753 samples, 0.12%)</title><rect x="424.3" y="613" width="1.4" height="15.0" fill="rgb(217,203,5)" rx="2" ry="2" />
<text  x="427.33" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="264.8" y="421" width="2.8" height="15.0" fill="rgb(235,137,24)" rx="2" ry="2" />
<text  x="267.76" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::ReleaseRecordable (28,985,506 samples, 0.24%)</title><rect x="61.8" y="533" width="2.8" height="15.0" fill="rgb(219,176,1)" rx="2" ry="2" />
<text  x="64.79" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MapEnd (14,492,753 samples, 0.12%)</title><rect x="368.3" y="517" width="1.4" height="15.0" fill="rgb(252,145,17)" rx="2" ry="2" />
<text  x="371.34" y="527.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="462.1" y="357" width="1.4" height="15.0" fill="rgb(249,12,4)" rx="2" ry="2" />
<text  x="465.12" y="367.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (28,985,506 samples, 0.24%)</title><rect x="680.5" y="533" width="2.8" height="15.0" fill="rgb(214,84,32)" rx="2" ry="2" />
<text  x="683.49" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (28,985,506 samples, 0.24%)</title><rect x="569.9" y="469" width="2.8" height="15.0" fill="rgb(208,55,45)" rx="2" ry="2" />
<text  x="572.91" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="705.7" y="485" width="1.4" height="15.0" fill="rgb(223,33,5)" rx="2" ry="2" />
<text  x="708.68" y="495.5" ></text>
</g>
<g >
<title>msg::ServerPkg::_internal_mutable_head (14,492,753 samples, 0.12%)</title><rect x="102.4" y="565" width="1.4" height="15.0" fill="rgb(209,152,12)" rx="2" ry="2" />
<text  x="105.38" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::call_once&lt;std::once_flag&amp;, void  (14,492,753 samples, 0.12%)</title><rect x="450.9" y="469" width="1.4" height="15.0" fill="rgb(231,206,10)" rx="2" ry="2" />
<text  x="453.93" y="479.5" ></text>
</g>
<g >
<title>ExternalTalentUpGradeService::CalUpGradeTalent (14,492,753 samples, 0.12%)</title><rect x="376.7" y="661" width="1.4" height="15.0" fill="rgb(217,63,53)" rx="2" ry="2" />
<text  x="379.74" y="671.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="341.7" y="485" width="1.4" height="15.0" fill="rgb(238,19,24)" rx="2" ry="2" />
<text  x="344.74" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::Add (14,492,753 samples, 0.12%)</title><rect x="884.9" y="309" width="1.4" height="15.0" fill="rgb(215,65,17)" rx="2" ry="2" />
<text  x="887.85" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (86,956,518 samples, 0.71%)</title><rect x="68.8" y="469" width="8.4" height="15.0" fill="rgb(254,168,8)" rx="2" ry="2" />
<text  x="71.79" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (28,985,506 samples, 0.24%)</title><rect x="547.5" y="453" width="2.8" height="15.0" fill="rgb(231,143,26)" rx="2" ry="2" />
<text  x="550.51" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (724,637,650 samples, 5.93%)</title><rect x="918.4" y="597" width="70.0" height="15.0" fill="rgb(251,151,4)" rx="2" ry="2" />
<text  x="921.45" y="607.5" >google:..</text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::MapEntryMessageComparator&gt; (14,492,753 samples, 0.12%)</title><rect x="474.7" y="517" width="1.4" height="15.0" fill="rgb(250,122,6)" rx="2" ry="2" />
<text  x="477.72" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::GetArenaForAllocation (14,492,753 samples, 0.12%)</title><rect x="127.6" y="437" width="1.4" height="15.0" fill="rgb(230,127,48)" rx="2" ry="2" />
<text  x="130.58" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::emplace_back&lt;google::protobuf::Message const*&gt; (14,492,753 samples, 0.12%)</title><rect x="565.7" y="421" width="1.4" height="15.0" fill="rgb(206,156,38)" rx="2" ry="2" />
<text  x="568.71" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::instrumentationscope::InstrumentationScope::equal (14,492,753 samples, 0.12%)</title><rect x="856.9" y="501" width="1.4" height="15.0" fill="rgb(252,122,28)" rx="2" ry="2" />
<text  x="859.86" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (28,985,506 samples, 0.24%)</title><rect x="716.9" y="581" width="2.8" height="15.0" fill="rgb(220,131,0)" rx="2" ry="2" />
<text  x="719.88" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, NS_ACO::ThreadID const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="903.0" y="501" width="1.4" height="15.0" fill="rgb(225,53,35)" rx="2" ry="2" />
<text  x="906.05" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="842.9" y="581" width="1.4" height="15.0" fill="rgb(212,162,34)" rx="2" ry="2" />
<text  x="845.86" y="591.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_impl&lt;std::string const*, std::string const*, __gnu_cxx::__ops::_Iter_less_iter&gt; (14,492,753 samples, 0.12%)</title><rect x="691.7" y="325" width="1.4" height="15.0" fill="rgb(234,161,23)" rx="2" ry="2" />
<text  x="694.68" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::stringpiece_internal::StringPiece::operator[] (14,492,753 samples, 0.12%)</title><rect x="326.3" y="453" width="1.4" height="15.0" fill="rgb(222,202,28)" rx="2" ry="2" />
<text  x="329.35" y="463.5" ></text>
</g>
<g >
<title>TBusppDriver::ProcEventParam (637,681,132 samples, 5.22%)</title><rect x="848.5" y="661" width="61.5" height="15.0" fill="rgb(247,95,18)" rx="2" ry="2" />
<text  x="851.46" y="671.5" >TBuspp..</text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (28,985,506 samples, 0.24%)</title><rect x="206.0" y="469" width="2.8" height="15.0" fill="rgb(207,61,43)" rx="2" ry="2" />
<text  x="208.97" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Destroy&lt;google::protobuf::RepeatedPtrField&lt;std::string&gt;::TypeHandler&gt; (14,492,753 samples, 0.12%)</title><rect x="1078.0" y="741" width="1.4" height="15.0" fill="rgb(246,111,23)" rx="2" ry="2" />
<text  x="1081.02" y="751.5" ></text>
</g>
<g >
<title>std::call_once&lt;google::protobuf::internal::AssignDescriptors (14,492,753 samples, 0.12%)</title><rect x="659.5" y="373" width="1.4" height="15.0" fill="rgb(224,27,24)" rx="2" ry="2" />
<text  x="662.49" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="569.9" y="405" width="2.8" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="572.91" y="415.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::MakeProtection (14,492,753 samples, 0.12%)</title><rect x="750.5" y="661" width="1.4" height="15.0" fill="rgb(215,226,39)" rx="2" ry="2" />
<text  x="753.47" y="671.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_is_leaked (14,492,753 samples, 0.12%)</title><rect x="175.2" y="549" width="1.4" height="15.0" fill="rgb(210,21,39)" rx="2" ry="2" />
<text  x="178.17" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="147.2" y="501" width="2.8" height="15.0" fill="rgb(235,18,35)" rx="2" ry="2" />
<text  x="150.18" y="511.5" ></text>
</g>
<g >
<title>TracerUtil::SpliceTraceParent (14,492,753 samples, 0.12%)</title><rect x="60.4" y="565" width="1.4" height="15.0" fill="rgb(229,175,8)" rx="2" ry="2" />
<text  x="63.39" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::vector (14,492,753 samples, 0.12%)</title><rect x="133.2" y="485" width="1.4" height="15.0" fill="rgb(215,51,12)" rx="2" ry="2" />
<text  x="136.18" y="495.5" ></text>
</g>
<g >
<title>[unknown] (14,492,753 samples, 0.12%)</title><rect x="1087.8" y="757" width="1.4" height="15.0" fill="rgb(248,24,45)" rx="2" ry="2" />
<text  x="1090.82" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="494.3" y="341" width="1.4" height="15.0" fill="rgb(246,197,46)" rx="2" ry="2" />
<text  x="497.32" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~_Vector_base (14,492,753 samples, 0.12%)</title><rect x="329.1" y="501" width="1.4" height="15.0" fill="rgb(208,3,2)" rx="2" ry="2" />
<text  x="332.15" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::UnknownFieldSet::ClearFallback (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="677" width="1.4" height="15.0" fill="rgb(248,203,41)" rx="2" ry="2" />
<text  x="1030.63" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::Message::~Message (14,492,753 samples, 0.12%)</title><rect x="669.3" y="469" width="1.4" height="15.0" fill="rgb(231,152,50)" rx="2" ry="2" />
<text  x="672.29" y="479.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadPool::Free (28,985,506 samples, 0.24%)</title><rect x="11.4" y="741" width="2.8" height="15.0" fill="rgb(229,71,12)" rx="2" ry="2" />
<text  x="14.40" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="877.9" y="245" width="1.4" height="15.0" fill="rgb(252,5,27)" rx="2" ry="2" />
<text  x="880.85" y="255.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldLite&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (14,492,753 samples, 0.12%)</title><rect x="172.4" y="453" width="1.4" height="15.0" fill="rgb(233,31,33)" rx="2" ry="2" />
<text  x="175.37" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (86,956,518 samples, 0.71%)</title><rect x="68.8" y="453" width="8.4" height="15.0" fill="rgb(219,204,7)" rx="2" ry="2" />
<text  x="71.79" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="625.9" y="421" width="1.4" height="15.0" fill="rgb(247,66,3)" rx="2" ry="2" />
<text  x="628.90" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="455.1" y="437" width="1.4" height="15.0" fill="rgb(229,59,45)" rx="2" ry="2" />
<text  x="458.12" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="306.7" y="309" width="1.4" height="15.0" fill="rgb(224,132,6)" rx="2" ry="2" />
<text  x="309.75" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="494.3" y="181" width="1.4" height="15.0" fill="rgb(221,189,53)" rx="2" ry="2" />
<text  x="497.32" y="191.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="1019.2" y="741" width="1.4" height="15.0" fill="rgb(235,34,53)" rx="2" ry="2" />
<text  x="1022.23" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (14,492,753 samples, 0.12%)</title><rect x="578.3" y="501" width="1.4" height="15.0" fill="rgb(220,188,4)" rx="2" ry="2" />
<text  x="581.30" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (14,492,753 samples, 0.12%)</title><rect x="655.3" y="437" width="1.4" height="15.0" fill="rgb(222,192,42)" rx="2" ry="2" />
<text  x="658.29" y="447.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (130,434,777 samples, 1.07%)</title><rect x="235.4" y="421" width="12.6" height="15.0" fill="rgb(218,190,26)" rx="2" ry="2" />
<text  x="238.36" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::string, std::allocator&lt;std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="77.2" y="373" width="1.4" height="15.0" fill="rgb(228,105,39)" rx="2" ry="2" />
<text  x="80.19" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::Message::MaybeComputeUnknownFieldsSize (14,492,753 samples, 0.12%)</title><rect x="67.4" y="341" width="1.4" height="15.0" fill="rgb(251,130,26)" rx="2" ry="2" />
<text  x="70.39" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="80.0" y="485" width="1.4" height="15.0" fill="rgb(242,8,28)" rx="2" ry="2" />
<text  x="82.99" y="495.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::InertToRunnableQueue (72,463,765 samples, 0.59%)</title><rect x="828.9" y="677" width="7.0" height="15.0" fill="rgb(212,115,6)" rx="2" ry="2" />
<text  x="831.86" y="687.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="704.3" y="453" width="1.4" height="15.0" fill="rgb(235,179,23)" rx="2" ry="2" />
<text  x="707.28" y="463.5" ></text>
</g>
<g >
<title>__gthread_once (14,492,753 samples, 0.12%)</title><rect x="450.9" y="437" width="1.4" height="15.0" fill="rgb(237,181,16)" rx="2" ry="2" />
<text  x="453.93" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::SpanContext::IsValid (14,492,753 samples, 0.12%)</title><rect x="582.5" y="501" width="1.4" height="15.0" fill="rgb(243,122,33)" rx="2" ry="2" />
<text  x="585.50" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (14,492,753 samples, 0.12%)</title><rect x="103.8" y="485" width="1.4" height="15.0" fill="rgb(235,148,11)" rx="2" ry="2" />
<text  x="106.78" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::Descriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::MessagePrinter const, std::default_delete&lt;google::protobuf::TextFormat::MessagePrinter const&gt; &gt;, std::less&lt;google::protobuf::Descriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::MessagePrinter const, std::default_delete&lt;google::protobuf::TextFormat::MessagePrinter const&gt; &gt; &gt; &gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="464.9" y="517" width="1.4" height="15.0" fill="rgb(225,102,17)" rx="2" ry="2" />
<text  x="467.92" y="527.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="708.5" y="405" width="1.4" height="15.0" fill="rgb(219,26,16)" rx="2" ry="2" />
<text  x="711.48" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (43,478,259 samples, 0.36%)</title><rect x="494.3" y="469" width="4.2" height="15.0" fill="rgb(210,43,15)" rx="2" ry="2" />
<text  x="497.32" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="148.6" y="389" width="1.4" height="15.0" fill="rgb(228,43,43)" rx="2" ry="2" />
<text  x="151.58" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="607.7" y="421" width="1.4" height="15.0" fill="rgb(218,7,20)" rx="2" ry="2" />
<text  x="610.70" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="877.9" y="165" width="1.4" height="15.0" fill="rgb(216,48,44)" rx="2" ry="2" />
<text  x="880.85" y="175.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (43,478,259 samples, 0.36%)</title><rect x="494.3" y="453" width="4.2" height="15.0" fill="rgb(242,105,38)" rx="2" ry="2" />
<text  x="497.32" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (28,985,506 samples, 0.24%)</title><rect x="604.9" y="389" width="2.8" height="15.0" fill="rgb(220,136,34)" rx="2" ry="2" />
<text  x="607.90" y="399.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="879.3" y="373" width="1.4" height="15.0" fill="rgb(223,44,30)" rx="2" ry="2" />
<text  x="882.25" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (115,942,024 samples, 0.95%)</title><rect x="89.8" y="517" width="11.2" height="15.0" fill="rgb(209,40,27)" rx="2" ry="2" />
<text  x="92.79" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;AcoLog::ELogPriority, std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="840.1" y="549" width="1.4" height="15.0" fill="rgb(244,19,50)" rx="2" ry="2" />
<text  x="843.06" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="716.9" y="565" width="1.4" height="15.0" fill="rgb(216,162,32)" rx="2" ry="2" />
<text  x="719.88" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (14,492,753 samples, 0.12%)</title><rect x="89.8" y="421" width="1.4" height="15.0" fill="rgb(216,19,41)" rx="2" ry="2" />
<text  x="92.79" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ExplicitlyConstructed&lt;std::string, 1ul&gt;::DefaultConstruct (14,492,753 samples, 0.12%)</title><rect x="414.5" y="469" width="1.4" height="15.0" fill="rgb(236,118,6)" rx="2" ry="2" />
<text  x="417.53" y="479.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::Message const**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="982.8" y="533" width="2.8" height="15.0" fill="rgb(215,203,20)" rx="2" ry="2" />
<text  x="985.84" y="543.5" ></text>
</g>
<g >
<title>__memcpy_ssse3 (14,492,753 samples, 0.12%)</title><rect x="473.3" y="357" width="1.4" height="15.0" fill="rgb(232,210,7)" rx="2" ry="2" />
<text  x="476.32" y="367.5" ></text>
</g>
<g >
<title>__strlen_sse42 (28,985,506 samples, 0.24%)</title><rect x="1106.0" y="741" width="2.8" height="15.0" fill="rgb(225,132,7)" rx="2" ry="2" />
<text  x="1109.01" y="751.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (144,927,530 samples, 1.19%)</title><rect x="164.0" y="597" width="14.0" height="15.0" fill="rgb(249,181,29)" rx="2" ry="2" />
<text  x="166.97" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (14,492,753 samples, 0.12%)</title><rect x="508.3" y="373" width="1.4" height="15.0" fill="rgb(241,116,7)" rx="2" ry="2" />
<text  x="511.32" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="53.4" y="645" width="1.4" height="15.0" fill="rgb(225,52,54)" rx="2" ry="2" />
<text  x="56.39" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (101,449,271 samples, 0.83%)</title><rect x="936.6" y="549" width="9.8" height="15.0" fill="rgb(249,115,22)" rx="2" ry="2" />
<text  x="939.64" y="559.5" ></text>
</g>
<g >
<title>std::string::resize (14,492,753 samples, 0.12%)</title><rect x="327.7" y="389" width="1.4" height="15.0" fill="rgb(232,176,47)" rx="2" ry="2" />
<text  x="330.75" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="875.1" y="53" width="1.4" height="15.0" fill="rgb(207,142,5)" rx="2" ry="2" />
<text  x="878.05" y="63.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFrom&lt; (14,492,753 samples, 0.12%)</title><rect x="988.4" y="645" width="1.4" height="15.0" fill="rgb(226,199,33)" rx="2" ry="2" />
<text  x="991.43" y="655.5" ></text>
</g>
<g >
<title>fmt::v8::basic_format_context&lt;fmt::v8::appender, char&gt;::out (14,492,753 samples, 0.12%)</title><rect x="905.8" y="597" width="1.4" height="15.0" fill="rgb(227,97,14)" rx="2" ry="2" />
<text  x="908.85" y="607.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::MapEntryMessageComparator&gt; (14,492,753 samples, 0.12%)</title><rect x="369.7" y="517" width="1.4" height="15.0" fill="rgb(224,73,7)" rx="2" ry="2" />
<text  x="372.74" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="288.6" y="389" width="1.4" height="15.0" fill="rgb(220,150,20)" rx="2" ry="2" />
<text  x="291.55" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="942.2" y="485" width="1.4" height="15.0" fill="rgb(247,117,12)" rx="2" ry="2" />
<text  x="945.24" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (14,492,753 samples, 0.12%)</title><rect x="708.5" y="453" width="1.4" height="15.0" fill="rgb(229,61,34)" rx="2" ry="2" />
<text  x="711.48" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::add_scope_spans (14,492,753 samples, 0.12%)</title><rect x="578.3" y="485" width="1.4" height="15.0" fill="rgb(251,68,32)" rx="2" ry="2" />
<text  x="581.30" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::string const, std::string&gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::string const, std::string&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="635.7" y="469" width="1.4" height="15.0" fill="rgb(214,148,9)" rx="2" ry="2" />
<text  x="638.69" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="590.9" y="389" width="1.4" height="15.0" fill="rgb(245,96,17)" rx="2" ry="2" />
<text  x="593.90" y="399.5" ></text>
</g>
<g >
<title>_itoa_word (14,492,753 samples, 0.12%)</title><rect x="1052.8" y="757" width="1.4" height="15.0" fill="rgb(211,176,51)" rx="2" ry="2" />
<text  x="1055.82" y="767.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (14,492,753 samples, 0.12%)</title><rect x="53.4" y="661" width="1.4" height="15.0" fill="rgb(252,117,27)" rx="2" ry="2" />
<text  x="56.39" y="671.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="642.7" y="453" width="1.4" height="15.0" fill="rgb(206,184,17)" rx="2" ry="2" />
<text  x="645.69" y="463.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service_local (14,492,753 samples, 0.12%)</title><rect x="596.5" y="469" width="1.4" height="15.0" fill="rgb(253,1,47)" rx="2" ry="2" />
<text  x="599.50" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="386.5" y="373" width="1.4" height="15.0" fill="rgb(230,196,3)" rx="2" ry="2" />
<text  x="389.54" y="383.5" ></text>
</g>
<g >
<title>std::string::substr (14,492,753 samples, 0.12%)</title><rect x="855.5" y="549" width="1.4" height="15.0" fill="rgb(216,204,33)" rx="2" ry="2" />
<text  x="858.46" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased (14,492,753 samples, 0.12%)</title><rect x="662.3" y="293" width="1.4" height="15.0" fill="rgb(208,175,28)" rx="2" ry="2" />
<text  x="665.29" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (72,463,765 samples, 0.59%)</title><rect x="603.5" y="485" width="7.0" height="15.0" fill="rgb(241,27,43)" rx="2" ry="2" />
<text  x="606.50" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (43,478,259 samples, 0.36%)</title><rect x="672.1" y="501" width="4.2" height="15.0" fill="rgb(238,184,49)" rx="2" ry="2" />
<text  x="675.09" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="168.2" y="469" width="1.4" height="15.0" fill="rgb(244,165,48)" rx="2" ry="2" />
<text  x="171.17" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="715.5" y="613" width="4.2" height="15.0" fill="rgb(230,221,39)" rx="2" ry="2" />
<text  x="718.48" y="623.5" ></text>
</g>
<g >
<title>TracerUtil::SpliceTraceParent (14,492,753 samples, 0.12%)</title><rect x="589.5" y="533" width="1.4" height="15.0" fill="rgb(209,130,43)" rx="2" ry="2" />
<text  x="592.50" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::FieldNumberSorter::operator (14,492,753 samples, 0.12%)</title><rect x="242.4" y="373" width="1.4" height="15.0" fill="rgb(227,180,5)" rx="2" ry="2" />
<text  x="245.36" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::LengthDelimitedSize (28,985,506 samples, 0.24%)</title><rect x="74.4" y="357" width="2.8" height="15.0" fill="rgb(249,58,38)" rx="2" ry="2" />
<text  x="77.39" y="367.5" ></text>
</g>
<g >
<title>msg::DBBatchGetRes::_InternalParse (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="741" width="1.4" height="15.0" fill="rgb(222,125,42)" rx="2" ry="2" />
<text  x="1082.42" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::VarintParse&lt;unsigned long&gt; (28,985,506 samples, 0.24%)</title><rect x="1099.0" y="725" width="2.8" height="15.0" fill="rgb(241,167,16)" rx="2" ry="2" />
<text  x="1102.02" y="735.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_impl&lt;std::string const*, std::string const*, __gnu_cxx::__ops::_Iter_less_iter&gt; (14,492,753 samples, 0.12%)</title><rect x="77.2" y="309" width="1.4" height="15.0" fill="rgb(236,18,43)" rx="2" ry="2" />
<text  x="80.19" y="319.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="877.9" y="181" width="1.4" height="15.0" fill="rgb(211,29,13)" rx="2" ry="2" />
<text  x="880.85" y="191.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="662.3" y="389" width="1.4" height="15.0" fill="rgb(226,223,45)" rx="2" ry="2" />
<text  x="665.29" y="399.5" ></text>
</g>
<g >
<title>TalentRes::CanUpGradeTalent (14,492,753 samples, 0.12%)</title><rect x="376.7" y="645" width="1.4" height="15.0" fill="rgb(219,206,17)" rx="2" ry="2" />
<text  x="379.74" y="655.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="306.7" y="293" width="1.4" height="15.0" fill="rgb(226,188,7)" rx="2" ry="2" />
<text  x="309.75" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (14,492,753 samples, 0.12%)</title><rect x="551.7" y="437" width="1.4" height="15.0" fill="rgb(223,200,25)" rx="2" ry="2" />
<text  x="554.71" y="447.5" ></text>
</g>
<g >
<title>std::string::_M_check_length (14,492,753 samples, 0.12%)</title><rect x="352.9" y="373" width="1.4" height="15.0" fill="rgb(229,33,12)" rx="2" ry="2" />
<text  x="355.94" y="383.5" ></text>
</g>
<g >
<title>restore_context (14,492,753 samples, 0.12%)</title><rect x="835.9" y="677" width="1.4" height="15.0" fill="rgb(227,25,2)" rx="2" ry="2" />
<text  x="838.86" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetUInt64 (14,492,753 samples, 0.12%)</title><rect x="359.9" y="517" width="1.4" height="15.0" fill="rgb(208,19,35)" rx="2" ry="2" />
<text  x="362.94" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (130,434,777 samples, 1.07%)</title><rect x="935.2" y="581" width="12.6" height="15.0" fill="rgb(252,66,12)" rx="2" ry="2" />
<text  x="938.24" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="267.6" y="373" width="1.4" height="15.0" fill="rgb(252,64,31)" rx="2" ry="2" />
<text  x="270.56" y="383.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="547.5" y="245" width="1.4" height="15.0" fill="rgb(218,142,29)" rx="2" ry="2" />
<text  x="550.51" y="255.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="588.1" y="485" width="1.4" height="15.0" fill="rgb(234,222,37)" rx="2" ry="2" />
<text  x="591.10" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;int, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="382.3" y="549" width="1.4" height="15.0" fill="rgb(254,197,35)" rx="2" ry="2" />
<text  x="385.34" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="171.0" y="501" width="1.4" height="15.0" fill="rgb(207,179,8)" rx="2" ry="2" />
<text  x="173.97" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMessageInternal&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="442.5" y="421" width="1.4" height="15.0" fill="rgb(207,167,29)" rx="2" ry="2" />
<text  x="445.53" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;::base (28,985,506 samples, 0.24%)</title><rect x="235.4" y="373" width="2.8" height="15.0" fill="rgb(227,181,37)" rx="2" ry="2" />
<text  x="238.36" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::DeleteOutOfLineHelper&lt;google::protobuf::UnknownFieldSet&gt; (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="741" width="1.4" height="15.0" fill="rgb(220,124,3)" rx="2" ry="2" />
<text  x="1030.63" y="751.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (28,985,506 samples, 0.24%)</title><rect x="666.5" y="501" width="2.8" height="15.0" fill="rgb(227,35,41)" rx="2" ry="2" />
<text  x="669.49" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (28,985,506 samples, 0.24%)</title><rect x="569.9" y="485" width="2.8" height="15.0" fill="rgb(254,221,34)" rx="2" ry="2" />
<text  x="572.91" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="681.9" y="485" width="1.4" height="15.0" fill="rgb(232,110,11)" rx="2" ry="2" />
<text  x="684.89" y="495.5" ></text>
</g>
<g >
<title>fmt::v8::detail::write&lt;char, fmt::v8::appender&gt; (14,492,753 samples, 0.12%)</title><rect x="18.4" y="693" width="1.4" height="15.0" fill="rgb(220,220,9)" rx="2" ry="2" />
<text  x="21.40" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="457.9" y="517" width="1.4" height="15.0" fill="rgb(231,207,9)" rx="2" ry="2" />
<text  x="460.92" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::CopyKey (28,985,506 samples, 0.24%)</title><rect x="127.6" y="469" width="2.8" height="15.0" fill="rgb(236,172,36)" rx="2" ry="2" />
<text  x="130.58" y="479.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (101,449,271 samples, 0.83%)</title><rect x="569.9" y="517" width="9.8" height="15.0" fill="rgb(245,210,25)" rx="2" ry="2" />
<text  x="572.91" y="527.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (86,956,518 samples, 0.71%)</title><rect x="977.2" y="549" width="8.4" height="15.0" fill="rgb(254,112,42)" rx="2" ry="2" />
<text  x="980.24" y="559.5" ></text>
</g>
<g >
<title>TracerUtil::CreateTraceSpan (405,797,084 samples, 3.32%)</title><rect x="856.9" y="549" width="39.1" height="15.0" fill="rgb(243,191,28)" rx="2" ry="2" />
<text  x="859.86" y="559.5" >Tra..</text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="558.7" y="389" width="1.4" height="15.0" fill="rgb(218,109,25)" rx="2" ry="2" />
<text  x="561.71" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (289,855,060 samples, 2.37%)</title><rect x="106.6" y="533" width="28.0" height="15.0" fill="rgb(242,113,18)" rx="2" ry="2" />
<text  x="109.58" y="543.5" >g..</text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="609.1" y="389" width="1.4" height="15.0" fill="rgb(205,151,52)" rx="2" ry="2" />
<text  x="612.10" y="399.5" ></text>
</g>
<g >
<title>RPC::RPCSync&lt;msg::DBSetRes, EventParam&gt; (927,536,192 samples, 7.59%)</title><rect x="586.7" y="613" width="89.6" height="15.0" fill="rgb(252,92,15)" rx="2" ry="2" />
<text  x="589.70" y="623.5" >RPC::RPCSy..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="32.4" y="677" width="1.4" height="15.0" fill="rgb(239,31,32)" rx="2" ry="2" />
<text  x="35.40" y="687.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="197.6" y="453" width="1.4" height="15.0" fill="rgb(240,107,2)" rx="2" ry="2" />
<text  x="200.57" y="463.5" ></text>
</g>
<g >
<title>std::move&lt;google::protobuf::FieldDescriptor const*&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="246.6" y="373" width="1.4" height="15.0" fill="rgb(225,61,1)" rx="2" ry="2" />
<text  x="249.56" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="64.6" y="389" width="2.8" height="15.0" fill="rgb(248,100,52)" rx="2" ry="2" />
<text  x="67.59" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="45.0" y="517" width="1.4" height="15.0" fill="rgb(234,218,24)" rx="2" ry="2" />
<text  x="47.99" y="527.5" ></text>
</g>
<g >
<title>std::function&lt;void  (28,985,506 samples, 0.24%)</title><rect x="541.9" y="533" width="2.8" height="15.0" fill="rgb(211,117,40)" rx="2" ry="2" />
<text  x="544.91" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="666.5" y="261" width="1.4" height="15.0" fill="rgb(219,217,11)" rx="2" ry="2" />
<text  x="669.49" y="271.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (14,492,753 samples, 0.12%)</title><rect x="602.1" y="517" width="1.4" height="15.0" fill="rgb(228,26,7)" rx="2" ry="2" />
<text  x="605.10" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (101,449,271 samples, 0.83%)</title><rect x="166.8" y="581" width="9.8" height="15.0" fill="rgb(221,136,3)" rx="2" ry="2" />
<text  x="169.77" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="693.1" y="293" width="1.4" height="15.0" fill="rgb(221,152,33)" rx="2" ry="2" />
<text  x="696.08" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::CreateString (14,492,753 samples, 0.12%)</title><rect x="155.6" y="421" width="1.4" height="15.0" fill="rgb(238,19,49)" rx="2" ry="2" />
<text  x="158.58" y="431.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (333,333,319 samples, 2.73%)</title><rect x="488.7" y="549" width="32.2" height="15.0" fill="rgb(247,67,31)" rx="2" ry="2" />
<text  x="491.72" y="559.5" >Tr..</text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;google::protobuf::Descriptor const*, std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, std::__detail::_Select1st, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, unsigned long, false&gt;::_S_equals (14,492,753 samples, 0.12%)</title><rect x="630.1" y="325" width="1.4" height="15.0" fill="rgb(231,212,30)" rx="2" ry="2" />
<text  x="633.09" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="932.4" y="437" width="1.4" height="15.0" fill="rgb(250,170,40)" rx="2" ry="2" />
<text  x="935.44" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::resource::v1::Resource&gt; (28,985,506 samples, 0.24%)</title><rect x="866.7" y="421" width="2.8" height="15.0" fill="rgb(244,77,5)" rx="2" ry="2" />
<text  x="869.65" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::TraceId::operator!= (14,492,753 samples, 0.12%)</title><rect x="582.5" y="469" width="1.4" height="15.0" fill="rgb(241,82,50)" rx="2" ry="2" />
<text  x="585.50" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (86,956,518 samples, 0.71%)</title><rect x="910.0" y="597" width="8.4" height="15.0" fill="rgb(248,59,17)" rx="2" ry="2" />
<text  x="913.05" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (28,985,506 samples, 0.24%)</title><rect x="436.9" y="485" width="2.8" height="15.0" fill="rgb(226,157,53)" rx="2" ry="2" />
<text  x="439.93" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (43,478,259 samples, 0.36%)</title><rect x="698.7" y="581" width="4.2" height="15.0" fill="rgb(247,44,35)" rx="2" ry="2" />
<text  x="701.68" y="591.5" ></text>
</g>
<g >
<title>std::string::data (14,492,753 samples, 0.12%)</title><rect x="1066.8" y="677" width="1.4" height="15.0" fill="rgb(248,114,7)" rx="2" ry="2" />
<text  x="1069.82" y="687.5" ></text>
</g>
<g >
<title>std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::string const*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="681.9" y="453" width="1.4" height="15.0" fill="rgb(229,120,36)" rx="2" ry="2" />
<text  x="684.89" y="463.5" ></text>
</g>
<g >
<title>__gthread_once (14,492,753 samples, 0.12%)</title><rect x="134.6" y="501" width="1.4" height="15.0" fill="rgb(226,59,18)" rx="2" ry="2" />
<text  x="137.58" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (14,492,753 samples, 0.12%)</title><rect x="610.5" y="453" width="1.4" height="15.0" fill="rgb(232,120,0)" rx="2" ry="2" />
<text  x="613.50" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="616.1" y="453" width="1.4" height="15.0" fill="rgb(242,228,52)" rx="2" ry="2" />
<text  x="619.10" y="463.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="39.4" y="549" width="1.4" height="15.0" fill="rgb(233,39,45)" rx="2" ry="2" />
<text  x="42.40" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="288.6" y="373" width="1.4" height="15.0" fill="rgb(220,162,31)" rx="2" ry="2" />
<text  x="291.55" y="383.5" ></text>
</g>
<g >
<title>std::string::get_allocator (14,492,753 samples, 0.12%)</title><rect x="1174.6" y="773" width="1.4" height="15.0" fill="rgb(205,113,18)" rx="2" ry="2" />
<text  x="1177.60" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::Span&gt; (14,492,753 samples, 0.12%)</title><rect x="429.9" y="453" width="1.4" height="15.0" fill="rgb(244,71,49)" rx="2" ry="2" />
<text  x="432.93" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="49.2" y="565" width="1.4" height="15.0" fill="rgb(214,68,7)" rx="2" ry="2" />
<text  x="52.19" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (43,478,259 samples, 0.36%)</title><rect x="879.3" y="469" width="4.2" height="15.0" fill="rgb(206,74,24)" rx="2" ry="2" />
<text  x="882.25" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (43,478,259 samples, 0.36%)</title><rect x="879.3" y="453" width="4.2" height="15.0" fill="rgb(235,79,19)" rx="2" ry="2" />
<text  x="882.25" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::EnumDescriptor::FindValueByNumber (14,492,753 samples, 0.12%)</title><rect x="406.1" y="517" width="1.4" height="15.0" fill="rgb(205,205,2)" rx="2" ry="2" />
<text  x="409.13" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (14,492,753 samples, 0.12%)</title><rect x="707.1" y="485" width="1.4" height="15.0" fill="rgb(214,69,21)" rx="2" ry="2" />
<text  x="710.08" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (14,492,753 samples, 0.12%)</title><rect x="961.8" y="533" width="1.4" height="15.0" fill="rgb(207,69,25)" rx="2" ry="2" />
<text  x="964.84" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::EnumValueDescriptor::name (14,492,753 samples, 0.12%)</title><rect x="285.8" y="437" width="1.4" height="15.0" fill="rgb(243,188,23)" rx="2" ry="2" />
<text  x="288.75" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::InternalSwap (14,492,753 samples, 0.12%)</title><rect x="389.3" y="517" width="1.4" height="15.0" fill="rgb(243,35,26)" rx="2" ry="2" />
<text  x="392.34" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::stringpiece_internal::StringPiece::size (14,492,753 samples, 0.12%)</title><rect x="324.9" y="437" width="1.4" height="15.0" fill="rgb(214,173,10)" rx="2" ry="2" />
<text  x="327.95" y="447.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="327.7" y="357" width="1.4" height="15.0" fill="rgb(215,116,10)" rx="2" ry="2" />
<text  x="330.75" y="367.5" ></text>
</g>
<g >
<title>RPC::Respond (391,304,331 samples, 3.20%)</title><rect x="378.1" y="661" width="37.8" height="15.0" fill="rgb(222,131,20)" rx="2" ry="2" />
<text  x="381.14" y="671.5" >RPC..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::WriteIndent (28,985,506 samples, 0.24%)</title><rect x="276.0" y="357" width="2.8" height="15.0" fill="rgb(216,110,45)" rx="2" ry="2" />
<text  x="278.95" y="367.5" ></text>
</g>
<g >
<title>std::string::compare (14,492,753 samples, 0.12%)</title><rect x="691.7" y="277" width="1.4" height="15.0" fill="rgb(212,166,44)" rx="2" ry="2" />
<text  x="694.68" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="617.5" y="421" width="2.8" height="15.0" fill="rgb(233,192,54)" rx="2" ry="2" />
<text  x="620.50" y="431.5" ></text>
</g>
<g >
<title>std::call_once&lt;google::protobuf::internal::AssignDescriptors (14,492,753 samples, 0.12%)</title><rect x="134.6" y="517" width="1.4" height="15.0" fill="rgb(245,15,8)" rx="2" ry="2" />
<text  x="137.58" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="655.3" y="389" width="1.4" height="15.0" fill="rgb(233,145,52)" rx="2" ry="2" />
<text  x="658.29" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::FieldOptions::weak (14,492,753 samples, 0.12%)</title><rect x="256.4" y="421" width="1.4" height="15.0" fill="rgb(214,212,7)" rx="2" ry="2" />
<text  x="259.36" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="547.5" y="405" width="1.4" height="15.0" fill="rgb(217,21,41)" rx="2" ry="2" />
<text  x="550.51" y="415.5" ></text>
</g>
<g >
<title>__nanosleep_nocancel (14,492,753 samples, 0.12%)</title><rect x="821.9" y="661" width="1.4" height="15.0" fill="rgb(238,138,28)" rx="2" ry="2" />
<text  x="824.86" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="151.4" y="453" width="1.4" height="15.0" fill="rgb(232,55,17)" rx="2" ry="2" />
<text  x="154.38" y="463.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::GetParam (14,492,753 samples, 0.12%)</title><rect x="676.3" y="597" width="1.4" height="15.0" fill="rgb(244,219,29)" rx="2" ry="2" />
<text  x="679.29" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const**, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="649.7" y="389" width="1.4" height="15.0" fill="rgb(250,145,40)" rx="2" ry="2" />
<text  x="652.69" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (86,956,518 samples, 0.71%)</title><rect x="910.0" y="581" width="8.4" height="15.0" fill="rgb(248,123,44)" rx="2" ry="2" />
<text  x="913.05" y="591.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="442.5" y="389" width="1.4" height="15.0" fill="rgb(222,21,52)" rx="2" ry="2" />
<text  x="445.53" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::add_attributes (14,492,753 samples, 0.12%)</title><rect x="884.9" y="341" width="1.4" height="15.0" fill="rgb(239,7,29)" rx="2" ry="2" />
<text  x="887.85" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="380.9" y="613" width="1.4" height="15.0" fill="rgb(217,219,6)" rx="2" ry="2" />
<text  x="383.94" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::containing_oneof (14,492,753 samples, 0.12%)</title><rect x="259.2" y="373" width="1.4" height="15.0" fill="rgb(226,39,28)" rx="2" ry="2" />
<text  x="262.16" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteEnumToArray (14,492,753 samples, 0.12%)</title><rect x="428.5" y="373" width="1.4" height="15.0" fill="rgb(228,200,1)" rx="2" ry="2" />
<text  x="431.53" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (14,492,753 samples, 0.12%)</title><rect x="718.3" y="533" width="1.4" height="15.0" fill="rgb(252,10,25)" rx="2" ry="2" />
<text  x="721.28" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_check_len (14,492,753 samples, 0.12%)</title><rect x="648.3" y="405" width="1.4" height="15.0" fill="rgb(247,116,29)" rx="2" ry="2" />
<text  x="651.29" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="271.8" y="421" width="1.4" height="15.0" fill="rgb(231,8,54)" rx="2" ry="2" />
<text  x="274.76" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="564.3" y="421" width="1.4" height="15.0" fill="rgb(220,197,0)" rx="2" ry="2" />
<text  x="567.31" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="495.7" y="197" width="1.4" height="15.0" fill="rgb(215,139,47)" rx="2" ry="2" />
<text  x="498.72" y="207.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="171.0" y="453" width="1.4" height="15.0" fill="rgb(229,96,7)" rx="2" ry="2" />
<text  x="173.97" y="463.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (14,492,753 samples, 0.12%)</title><rect x="204.6" y="437" width="1.4" height="15.0" fill="rgb(227,220,52)" rx="2" ry="2" />
<text  x="207.57" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="152.8" y="421" width="1.4" height="15.0" fill="rgb(239,208,47)" rx="2" ry="2" />
<text  x="155.78" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (28,985,506 samples, 0.24%)</title><rect x="43.6" y="533" width="2.8" height="15.0" fill="rgb(214,4,11)" rx="2" ry="2" />
<text  x="46.59" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::SpanContext::SpanContext (14,492,753 samples, 0.12%)</title><rect x="512.5" y="437" width="1.4" height="15.0" fill="rgb(234,208,32)" rx="2" ry="2" />
<text  x="515.51" y="447.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::GetParam (14,492,753 samples, 0.12%)</title><rect x="483.1" y="517" width="1.4" height="15.0" fill="rgb(208,165,24)" rx="2" ry="2" />
<text  x="486.12" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="561.5" y="357" width="1.4" height="15.0" fill="rgb(226,82,42)" rx="2" ry="2" />
<text  x="564.51" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (14,492,753 samples, 0.12%)</title><rect x="520.9" y="485" width="1.4" height="15.0" fill="rgb(217,191,23)" rx="2" ry="2" />
<text  x="523.91" y="495.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="963.2" y="549" width="1.4" height="15.0" fill="rgb(217,171,48)" rx="2" ry="2" />
<text  x="966.24" y="559.5" ></text>
</g>
<g >
<title>__gthread_once (14,492,753 samples, 0.12%)</title><rect x="204.6" y="421" width="1.4" height="15.0" fill="rgb(231,15,41)" rx="2" ry="2" />
<text  x="207.57" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="484.5" y="469" width="1.4" height="15.0" fill="rgb(217,78,23)" rx="2" ry="2" />
<text  x="487.52" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::OnEnd (130,434,777 samples, 1.07%)</title><rect x="491.5" y="501" width="12.6" height="15.0" fill="rgb(207,120,28)" rx="2" ry="2" />
<text  x="494.52" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::MapIterator::~MapIterator (14,492,753 samples, 0.12%)</title><rect x="411.7" y="517" width="1.4" height="15.0" fill="rgb(228,52,5)" rx="2" ry="2" />
<text  x="414.73" y="527.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::OnExitSchedule (14,492,753 samples, 0.12%)</title><rect x="730.9" y="677" width="1.4" height="15.0" fill="rgb(243,5,33)" rx="2" ry="2" />
<text  x="733.88" y="687.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="15.6" y="613" width="1.4" height="15.0" fill="rgb(226,192,18)" rx="2" ry="2" />
<text  x="18.60" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Utf8DebugString (43,478,259 samples, 0.36%)</title><rect x="637.1" y="517" width="4.2" height="15.0" fill="rgb(210,201,36)" rx="2" ry="2" />
<text  x="640.09" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::internal::call_once&lt;std::once_flag&amp;, void  (28,985,506 samples, 0.24%)</title><rect x="206.0" y="437" width="2.8" height="15.0" fill="rgb(227,139,29)" rx="2" ry="2" />
<text  x="208.97" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="386.5" y="437" width="1.4" height="15.0" fill="rgb(237,106,54)" rx="2" ry="2" />
<text  x="389.54" y="447.5" ></text>
</g>
<g >
<title>[unknown] (72,463,765 samples, 0.59%)</title><rect x="1071.0" y="757" width="7.0" height="15.0" fill="rgb(229,213,8)" rx="2" ry="2" />
<text  x="1074.02" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (72,463,765 samples, 0.59%)</title><rect x="304.0" y="437" width="6.9" height="15.0" fill="rgb(234,87,19)" rx="2" ry="2" />
<text  x="306.95" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (14,492,753 samples, 0.12%)</title><rect x="42.2" y="613" width="1.4" height="15.0" fill="rgb(242,198,9)" rx="2" ry="2" />
<text  x="45.19" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="165.4" y="453" width="1.4" height="15.0" fill="rgb(237,154,4)" rx="2" ry="2" />
<text  x="168.37" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="345.9" y="533" width="4.2" height="15.0" fill="rgb(211,75,51)" rx="2" ry="2" />
<text  x="348.94" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="145.8" y="405" width="1.4" height="15.0" fill="rgb(249,23,0)" rx="2" ry="2" />
<text  x="148.78" y="415.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="642.7" y="517" width="1.4" height="15.0" fill="rgb(247,132,30)" rx="2" ry="2" />
<text  x="645.69" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="77.2" y="405" width="1.4" height="15.0" fill="rgb(233,168,15)" rx="2" ry="2" />
<text  x="80.19" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::allocator&lt;google::protobuf::Symbol&gt;, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="406.1" y="469" width="1.4" height="15.0" fill="rgb(251,88,49)" rx="2" ry="2" />
<text  x="409.13" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="491.5" y="373" width="1.4" height="15.0" fill="rgb(221,125,24)" rx="2" ry="2" />
<text  x="494.52" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (115,942,024 samples, 0.95%)</title><rect x="590.9" y="517" width="11.2" height="15.0" fill="rgb(232,80,28)" rx="2" ry="2" />
<text  x="593.90" y="527.5" ></text>
</g>
<g >
<title>LogRecorder::Record (14,492,753 samples, 0.12%)</title><rect x="840.1" y="597" width="1.4" height="15.0" fill="rgb(252,59,3)" rx="2" ry="2" />
<text  x="843.06" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;NS_ACO::EventID&gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="185.0" y="501" width="1.4" height="15.0" fill="rgb(216,47,14)" rx="2" ry="2" />
<text  x="187.97" y="511.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolHistogram (14,492,753 samples, 0.12%)</title><rect x="180.8" y="613" width="1.4" height="15.0" fill="rgb(250,160,25)" rx="2" ry="2" />
<text  x="183.77" y="623.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (217,391,295 samples, 1.78%)</title><rect x="424.3" y="629" width="21.0" height="15.0" fill="rgb(206,153,14)" rx="2" ry="2" />
<text  x="427.33" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="695.9" y="437" width="1.4" height="15.0" fill="rgb(223,138,35)" rx="2" ry="2" />
<text  x="698.88" y="447.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="1180.2" y="789" width="1.4" height="15.0" fill="rgb(242,197,41)" rx="2" ry="2" />
<text  x="1183.20" y="799.5" ></text>
</g>
<g >
<title>recv (14,492,753 samples, 0.12%)</title><rect x="1132.6" y="725" width="1.4" height="15.0" fill="rgb(211,122,41)" rx="2" ry="2" />
<text  x="1135.61" y="735.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::ProtoResource (57,971,012 samples, 0.47%)</title><rect x="82.8" y="485" width="5.6" height="15.0" fill="rgb(246,93,34)" rx="2" ry="2" />
<text  x="85.79" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, opentelemetry::v1::nostd::span&lt;std::pair&lt;opentelemetry::v1::trace::SpanContext, std::initializer_list&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::variant&lt;bool, int, long, unsigned int, double, char const*, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, opentelemetry::v1::nostd::span&lt;bool const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned int const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;double const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, 18446744073709551615ul&gt;, unsigned long, opentelemetry::v1::nostd::span&lt;unsigned long const, 18446744073709551615ul&gt;, opentelemetry::v1::nostd::span&lt;unsigned char const, 18446744073709551615ul&gt; &gt; &gt; &gt; &gt; const, 18446744073709551615ul&gt;,  (14,492,753 samples, 0.12%)</title><rect x="443.9" y="581" width="1.4" height="15.0" fill="rgb(233,174,23)" rx="2" ry="2" />
<text  x="446.93" y="591.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="38.0" y="549" width="1.4" height="15.0" fill="rgb(236,49,29)" rx="2" ry="2" />
<text  x="41.00" y="559.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (159,420,283 samples, 1.30%)</title><rect x="504.1" y="485" width="15.4" height="15.0" fill="rgb(219,22,49)" rx="2" ry="2" />
<text  x="507.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (14,492,753 samples, 0.12%)</title><rect x="376.7" y="565" width="1.4" height="15.0" fill="rgb(232,54,15)" rx="2" ry="2" />
<text  x="379.74" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="257.8" y="405" width="1.4" height="15.0" fill="rgb(214,99,51)" rx="2" ry="2" />
<text  x="260.76" y="415.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="645" width="1.4" height="15.0" fill="rgb(209,129,15)" rx="2" ry="2" />
<text  x="1030.63" y="655.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (115,942,024 samples, 0.95%)</title><rect x="89.8" y="565" width="11.2" height="15.0" fill="rgb(206,199,50)" rx="2" ry="2" />
<text  x="92.79" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::SetIdentity (14,492,753 samples, 0.12%)</title><rect x="94.0" y="485" width="1.4" height="15.0" fill="rgb(228,205,35)" rx="2" ry="2" />
<text  x="96.99" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="145.8" y="357" width="1.4" height="15.0" fill="rgb(216,228,2)" rx="2" ry="2" />
<text  x="148.78" y="367.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (28,985,506 samples, 0.24%)</title><rect x="666.5" y="421" width="2.8" height="15.0" fill="rgb(232,164,27)" rx="2" ry="2" />
<text  x="669.49" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (14,492,753 samples, 0.12%)</title><rect x="201.8" y="485" width="1.4" height="15.0" fill="rgb(234,187,10)" rx="2" ry="2" />
<text  x="204.77" y="495.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, long, google::protobuf::Message const**, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::MapEntryMessageComparator&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="474.7" y="469" width="1.4" height="15.0" fill="rgb(207,197,47)" rx="2" ry="2" />
<text  x="477.72" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="129.0" y="437" width="1.4" height="15.0" fill="rgb(223,1,5)" rx="2" ry="2" />
<text  x="131.98" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="26.8" y="501" width="1.4" height="15.0" fill="rgb(219,97,14)" rx="2" ry="2" />
<text  x="29.80" y="511.5" ></text>
</g>
<g >
<title>RPC::RPCNotify (391,304,331 samples, 3.20%)</title><rect x="677.7" y="613" width="37.8" height="15.0" fill="rgb(243,99,4)" rx="2" ry="2" />
<text  x="680.69" y="623.5" >RPC..</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (202,898,542 samples, 1.66%)</title><rect x="614.7" y="469" width="19.6" height="15.0" fill="rgb(225,134,35)" rx="2" ry="2" />
<text  x="617.70" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (1,101,449,228 samples, 9.02%)</title><rect x="213.0" y="485" width="106.3" height="15.0" fill="rgb(250,47,34)" rx="2" ry="2" />
<text  x="215.97" y="495.5" >google::proto..</text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::resource::v1::Resource&gt; (14,492,753 samples, 0.12%)</title><rect x="145.8" y="421" width="1.4" height="15.0" fill="rgb(247,87,11)" rx="2" ry="2" />
<text  x="148.78" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (28,985,506 samples, 0.24%)</title><rect x="147.2" y="485" width="2.8" height="15.0" fill="rgb(209,6,11)" rx="2" ry="2" />
<text  x="150.18" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (14,492,753 samples, 0.12%)</title><rect x="462.1" y="453" width="1.4" height="15.0" fill="rgb(241,132,33)" rx="2" ry="2" />
<text  x="465.12" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapedLength (14,492,753 samples, 0.12%)</title><rect x="530.7" y="357" width="1.4" height="15.0" fill="rgb(237,183,47)" rx="2" ry="2" />
<text  x="533.71" y="367.5" ></text>
</g>
<g >
<title>tbus2::MQ::PeekMsg (57,971,012 samples, 0.47%)</title><rect x="1136.8" y="741" width="5.6" height="15.0" fill="rgb(225,36,32)" rx="2" ry="2" />
<text  x="1139.81" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapeAndAppend (14,492,753 samples, 0.12%)</title><rect x="530.7" y="373" width="1.4" height="15.0" fill="rgb(228,148,41)" rx="2" ry="2" />
<text  x="533.71" y="383.5" ></text>
</g>
<g >
<title>TracerUtil::GetTracer (14,492,753 samples, 0.12%)</title><rect x="141.6" y="581" width="1.4" height="15.0" fill="rgb(220,73,44)" rx="2" ry="2" />
<text  x="144.58" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="168.2" y="485" width="1.4" height="15.0" fill="rgb(232,151,9)" rx="2" ry="2" />
<text  x="171.17" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_leak (14,492,753 samples, 0.12%)</title><rect x="424.3" y="581" width="1.4" height="15.0" fill="rgb(205,37,11)" rx="2" ry="2" />
<text  x="427.33" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintField (57,971,012 samples, 0.47%)</title><rect x="264.8" y="437" width="5.6" height="15.0" fill="rgb(227,227,22)" rx="2" ry="2" />
<text  x="267.76" y="447.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;google::protobuf::Symbol, google::protobuf::(anonymous namespace)::FieldsByNumberHash, google::protobuf::(anonymous namespace)::FieldsByNumberEq, std::allocator&lt;google::protobuf::Symbol&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="357.1" y="485" width="1.4" height="15.0" fill="rgb(244,156,15)" rx="2" ry="2" />
<text  x="360.14" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::FieldSize (14,492,753 samples, 0.12%)</title><rect x="194.8" y="501" width="1.4" height="15.0" fill="rgb(242,95,32)" rx="2" ry="2" />
<text  x="197.77" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::LengthDelimitedSize (14,492,753 samples, 0.12%)</title><rect x="71.6" y="357" width="1.4" height="15.0" fill="rgb(250,25,43)" rx="2" ry="2" />
<text  x="74.59" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="85.6" y="373" width="1.4" height="15.0" fill="rgb(219,113,25)" rx="2" ry="2" />
<text  x="88.59" y="383.5" ></text>
</g>
<g >
<title>TracerUtil::ReportChildSpan (101,449,271 samples, 0.83%)</title><rect x="386.5" y="629" width="9.8" height="15.0" fill="rgb(240,97,39)" rx="2" ry="2" />
<text  x="389.54" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;opentelemetry::v1::trace::SpanContext, std::default_delete&lt;opentelemetry::v1::trace::SpanContext&gt; &gt;::~unique_ptr (14,492,753 samples, 0.12%)</title><rect x="518.1" y="469" width="1.4" height="15.0" fill="rgb(246,99,25)" rx="2" ry="2" />
<text  x="521.11" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (28,985,506 samples, 0.24%)</title><rect x="206.0" y="453" width="2.8" height="15.0" fill="rgb(251,0,16)" rx="2" ry="2" />
<text  x="208.97" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="495.7" y="245" width="1.4" height="15.0" fill="rgb(238,188,35)" rx="2" ry="2" />
<text  x="498.72" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="676.3" y="581" width="1.4" height="15.0" fill="rgb(221,64,4)" rx="2" ry="2" />
<text  x="679.29" y="591.5" ></text>
</g>
<g >
<title>std::string::size (14,492,753 samples, 0.12%)</title><rect x="646.9" y="373" width="1.4" height="15.0" fill="rgb(243,192,15)" rx="2" ry="2" />
<text  x="649.89" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (28,985,506 samples, 0.24%)</title><rect x="637.1" y="373" width="2.8" height="15.0" fill="rgb(216,124,35)" rx="2" ry="2" />
<text  x="640.09" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (14,492,753 samples, 0.12%)</title><rect x="590.9" y="437" width="1.4" height="15.0" fill="rgb(245,40,0)" rx="2" ry="2" />
<text  x="593.90" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="12.8" y="693" width="1.4" height="15.0" fill="rgb(252,81,33)" rx="2" ry="2" />
<text  x="15.80" y="703.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="494.3" y="261" width="1.4" height="15.0" fill="rgb(237,189,19)" rx="2" ry="2" />
<text  x="497.32" y="271.5" ></text>
</g>
<g >
<title>msg::ServerPkgHead::descriptor (14,492,753 samples, 0.12%)</title><rect x="134.6" y="565" width="1.4" height="15.0" fill="rgb(215,45,6)" rx="2" ry="2" />
<text  x="137.58" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (14,492,753 samples, 0.12%)</title><rect x="1012.2" y="709" width="1.4" height="15.0" fill="rgb(222,167,51)" rx="2" ry="2" />
<text  x="1015.23" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (43,478,259 samples, 0.36%)</title><rect x="715.5" y="629" width="4.2" height="15.0" fill="rgb(230,68,24)" rx="2" ry="2" />
<text  x="718.48" y="639.5" ></text>
</g>
<g >
<title>msg::Any2Talent_ExternalTalentAddPointReq::~Any2Talent_ExternalTalentAddPointReq (14,492,753 samples, 0.12%)</title><rect x="33.8" y="661" width="1.4" height="15.0" fill="rgb(223,175,30)" rx="2" ry="2" />
<text  x="36.80" y="671.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (28,985,506 samples, 0.24%)</title><rect x="569.9" y="501" width="2.8" height="15.0" fill="rgb(252,21,28)" rx="2" ry="2" />
<text  x="572.91" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::clear_value (14,492,753 samples, 0.12%)</title><rect x="438.3" y="261" width="1.4" height="15.0" fill="rgb(218,202,22)" rx="2" ry="2" />
<text  x="441.33" y="271.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="428.5" y="389" width="1.4" height="15.0" fill="rgb(206,74,42)" rx="2" ry="2" />
<text  x="431.53" y="399.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::CreateThread (28,985,506 samples, 0.24%)</title><rect x="852.7" y="597" width="2.8" height="15.0" fill="rgb(224,198,10)" rx="2" ry="2" />
<text  x="855.66" y="607.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="502.7" y="373" width="1.4" height="15.0" fill="rgb(243,193,17)" rx="2" ry="2" />
<text  x="505.72" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (28,985,506 samples, 0.24%)</title><rect x="604.9" y="373" width="2.8" height="15.0" fill="rgb(244,172,9)" rx="2" ry="2" />
<text  x="607.90" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InlineGreedyStringParser (14,492,753 samples, 0.12%)</title><rect x="1087.8" y="741" width="1.4" height="15.0" fill="rgb(232,214,7)" rx="2" ry="2" />
<text  x="1090.82" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::PrintMaybeWithMarker (14,492,753 samples, 0.12%)</title><rect x="473.3" y="533" width="1.4" height="15.0" fill="rgb(251,114,2)" rx="2" ry="2" />
<text  x="476.32" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::Resource (14,492,753 samples, 0.12%)</title><rect x="501.3" y="437" width="1.4" height="15.0" fill="rgb(251,77,13)" rx="2" ry="2" />
<text  x="504.32" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;AcoLog::ELogPriority, std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="840.1" y="565" width="1.4" height="15.0" fill="rgb(248,140,29)" rx="2" ry="2" />
<text  x="843.06" y="575.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="473.3" y="405" width="1.4" height="15.0" fill="rgb(240,42,45)" rx="2" ry="2" />
<text  x="476.32" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="436.9" y="389" width="1.4" height="15.0" fill="rgb(252,5,31)" rx="2" ry="2" />
<text  x="439.93" y="399.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="169.6" y="469" width="1.4" height="15.0" fill="rgb(241,74,43)" rx="2" ry="2" />
<text  x="172.57" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="199.0" y="485" width="1.4" height="15.0" fill="rgb(232,79,51)" rx="2" ry="2" />
<text  x="201.97" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="616.1" y="421" width="1.4" height="15.0" fill="rgb(211,111,52)" rx="2" ry="2" />
<text  x="619.10" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (28,985,506 samples, 0.24%)</title><rect x="666.5" y="469" width="2.8" height="15.0" fill="rgb(247,175,4)" rx="2" ry="2" />
<text  x="669.49" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TaggedStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="595.1" y="309" width="1.4" height="15.0" fill="rgb(228,56,32)" rx="2" ry="2" />
<text  x="598.10" y="319.5" ></text>
</g>
<g >
<title>MetricsObj&lt;prometheus::Counter&gt;::FindCacheObj (14,492,753 samples, 0.12%)</title><rect x="596.5" y="421" width="1.4" height="15.0" fill="rgb(209,114,14)" rx="2" ry="2" />
<text  x="599.50" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetConstRefAtOffset&lt;int&gt; (14,492,753 samples, 0.12%)</title><rect x="228.4" y="405" width="1.4" height="15.0" fill="rgb(209,228,20)" rx="2" ry="2" />
<text  x="231.36" y="415.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="1069.6" y="741" width="1.4" height="15.0" fill="rgb(215,142,43)" rx="2" ry="2" />
<text  x="1072.62" y="751.5" ></text>
</g>
<g >
<title>std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (28,985,506 samples, 0.24%)</title><rect x="1120.0" y="773" width="2.8" height="15.0" fill="rgb(242,30,38)" rx="2" ry="2" />
<text  x="1123.01" y="783.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Tracer::StartSpan (14,492,753 samples, 0.12%)</title><rect x="443.9" y="565" width="1.4" height="15.0" fill="rgb(205,215,18)" rx="2" ry="2" />
<text  x="446.93" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Add&lt;google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span&gt;::TypeHandler&gt; (14,492,753 samples, 0.12%)</title><rect x="694.5" y="453" width="1.4" height="15.0" fill="rgb(235,61,7)" rx="2" ry="2" />
<text  x="697.48" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::common::KeyValueIterableView&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt;::ForEachKeyValue (43,478,259 samples, 0.36%)</title><rect x="504.1" y="453" width="4.2" height="15.0" fill="rgb(237,14,21)" rx="2" ry="2" />
<text  x="507.12" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::MapFieldBase&gt; (14,492,753 samples, 0.12%)</title><rect x="553.1" y="437" width="1.4" height="15.0" fill="rgb(252,175,31)" rx="2" ry="2" />
<text  x="556.11" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapField&lt;msg::ServerPkgHead_TraceHeaderEntry_DoNotUse, std::string, std::string,  (28,985,506 samples, 0.24%)</title><rect x="1017.8" y="757" width="2.8" height="15.0" fill="rgb(220,22,48)" rx="2" ry="2" />
<text  x="1020.83" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::TracerContext::GetProcessor (14,492,753 samples, 0.12%)</title><rect x="700.1" y="501" width="1.4" height="15.0" fill="rgb(244,168,43)" rx="2" ry="2" />
<text  x="703.08" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::EnumValueDescriptor::number (14,492,753 samples, 0.12%)</title><rect x="947.8" y="533" width="1.4" height="15.0" fill="rgb(210,206,21)" rx="2" ry="2" />
<text  x="950.84" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (14,492,753 samples, 0.12%)</title><rect x="443.9" y="613" width="1.4" height="15.0" fill="rgb(241,179,1)" rx="2" ry="2" />
<text  x="446.93" y="623.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializePartialToArray (28,985,506 samples, 0.24%)</title><rect x="427.1" y="517" width="2.8" height="15.0" fill="rgb(242,89,50)" rx="2" ry="2" />
<text  x="430.13" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::_M_drop_node (14,492,753 samples, 0.12%)</title><rect x="61.8" y="437" width="1.4" height="15.0" fill="rgb(243,148,6)" rx="2" ry="2" />
<text  x="64.79" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::FieldSize (14,492,753 samples, 0.12%)</title><rect x="19.8" y="581" width="1.4" height="15.0" fill="rgb(207,72,12)" rx="2" ry="2" />
<text  x="22.80" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::VarintParseSlow (14,492,753 samples, 0.12%)</title><rect x="1086.4" y="709" width="1.4" height="15.0" fill="rgb(223,45,6)" rx="2" ry="2" />
<text  x="1089.42" y="719.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="695.9" y="469" width="1.4" height="15.0" fill="rgb(234,63,32)" rx="2" ry="2" />
<text  x="698.88" y="479.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="277.4" y="181" width="1.4" height="15.0" fill="rgb(205,56,33)" rx="2" ry="2" />
<text  x="280.35" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Descriptor const*, std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="630.1" y="373" width="1.4" height="15.0" fill="rgb(243,132,47)" rx="2" ry="2" />
<text  x="633.09" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt;, false&gt; &gt;::construct&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;NS_ACO::ThreadID const&amp;&gt;, std::tuple&lt;&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="903.0" y="549" width="1.4" height="15.0" fill="rgb(232,214,8)" rx="2" ry="2" />
<text  x="906.05" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (14,492,753 samples, 0.12%)</title><rect x="691.7" y="309" width="1.4" height="15.0" fill="rgb(225,188,5)" rx="2" ry="2" />
<text  x="694.68" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="652.5" y="405" width="1.4" height="15.0" fill="rgb(248,129,15)" rx="2" ry="2" />
<text  x="655.49" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_internal_has_value (14,492,753 samples, 0.12%)</title><rect x="576.9" y="389" width="1.4" height="15.0" fill="rgb(205,11,18)" rx="2" ry="2" />
<text  x="579.90" y="399.5" ></text>
</g>
<g >
<title>msg::ExternalTalentList::~ExternalTalentList (14,492,753 samples, 0.12%)</title><rect x="1080.8" y="773" width="1.4" height="15.0" fill="rgb(221,166,29)" rx="2" ry="2" />
<text  x="1083.82" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="667.9" y="325" width="1.4" height="15.0" fill="rgb(212,50,34)" rx="2" ry="2" />
<text  x="670.89" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (130,434,777 samples, 1.07%)</title><rect x="491.5" y="533" width="12.6" height="15.0" fill="rgb(207,189,26)" rx="2" ry="2" />
<text  x="494.52" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="614.7" y="437" width="1.4" height="15.0" fill="rgb(228,76,18)" rx="2" ry="2" />
<text  x="617.70" y="447.5" ></text>
</g>
<g >
<title>void fmt::v8::detail::vformat_to&lt;char&gt; (14,492,753 samples, 0.12%)</title><rect x="907.2" y="597" width="1.4" height="15.0" fill="rgb(241,45,38)" rx="2" ry="2" />
<text  x="910.25" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (115,942,024 samples, 0.95%)</title><rect x="19.8" y="629" width="11.2" height="15.0" fill="rgb(226,184,45)" rx="2" ry="2" />
<text  x="22.80" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="487.3" y="437" width="1.4" height="15.0" fill="rgb(235,109,16)" rx="2" ry="2" />
<text  x="490.32" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetRaw&lt;bool&gt; (14,492,753 samples, 0.12%)</title><rect x="338.9" y="501" width="1.4" height="15.0" fill="rgb(254,135,30)" rx="2" ry="2" />
<text  x="341.94" y="511.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (14,492,753 samples, 0.12%)</title><rect x="581.1" y="501" width="1.4" height="15.0" fill="rgb(250,149,53)" rx="2" ry="2" />
<text  x="584.10" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TaggedStringPtr::as_int (14,492,753 samples, 0.12%)</title><rect x="595.1" y="293" width="1.4" height="15.0" fill="rgb(227,164,3)" rx="2" ry="2" />
<text  x="598.10" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="529.3" y="389" width="1.4" height="15.0" fill="rgb(253,18,32)" rx="2" ry="2" />
<text  x="532.31" y="399.5" ></text>
</g>
<g >
<title>tbus2::Endpoint::Update (14,492,753 samples, 0.12%)</title><rect x="729.5" y="677" width="1.4" height="15.0" fill="rgb(242,124,37)" rx="2" ry="2" />
<text  x="732.48" y="687.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="596.5" y="453" width="1.4" height="15.0" fill="rgb(241,86,4)" rx="2" ry="2" />
<text  x="599.50" y="463.5" ></text>
</g>
<g >
<title>AcoLog::AcoLog (14,492,753 samples, 0.12%)</title><rect x="379.5" y="629" width="1.4" height="15.0" fill="rgb(209,24,21)" rx="2" ry="2" />
<text  x="382.54" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::_Variant_base (14,492,753 samples, 0.12%)</title><rect x="894.7" y="405" width="1.3" height="15.0" fill="rgb(231,137,40)" rx="2" ry="2" />
<text  x="897.65" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (1,449,275,300 samples, 11.86%)</title><rect x="192.0" y="581" width="139.9" height="15.0" fill="rgb(208,109,28)" rx="2" ry="2" />
<text  x="194.97" y="591.5" >google::protobuf:..</text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToArray (14,492,753 samples, 0.12%)</title><rect x="491.5" y="453" width="1.4" height="15.0" fill="rgb(207,109,8)" rx="2" ry="2" />
<text  x="494.52" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="530.7" y="405" width="1.4" height="15.0" fill="rgb(217,144,6)" rx="2" ry="2" />
<text  x="533.71" y="415.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::SwitchContext (28,985,506 samples, 0.24%)</title><rect x="544.7" y="517" width="2.8" height="15.0" fill="rgb(239,87,15)" rx="2" ry="2" />
<text  x="547.71" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;NS_ACO::ThreadID const&amp;&gt;, std::tuple&lt;&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="903.0" y="565" width="1.4" height="15.0" fill="rgb(235,120,2)" rx="2" ry="2" />
<text  x="906.05" y="575.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (14,492,753 samples, 0.12%)</title><rect x="677.7" y="597" width="1.4" height="15.0" fill="rgb(236,39,52)" rx="2" ry="2" />
<text  x="680.69" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (14,492,753 samples, 0.12%)</title><rect x="869.5" y="293" width="1.4" height="15.0" fill="rgb(250,82,44)" rx="2" ry="2" />
<text  x="872.45" y="303.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="467.7" y="437" width="1.4" height="15.0" fill="rgb(235,63,35)" rx="2" ry="2" />
<text  x="470.72" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedCtor (14,492,753 samples, 0.12%)</title><rect x="501.3" y="405" width="1.4" height="15.0" fill="rgb(212,167,0)" rx="2" ry="2" />
<text  x="504.32" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_Vector_base (14,492,753 samples, 0.12%)</title><rect x="312.3" y="437" width="1.4" height="15.0" fill="rgb(239,95,1)" rx="2" ry="2" />
<text  x="315.35" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="494.3" y="197" width="1.4" height="15.0" fill="rgb(249,161,53)" rx="2" ry="2" />
<text  x="497.32" y="207.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (43,478,259 samples, 0.36%)</title><rect x="304.0" y="405" width="4.1" height="15.0" fill="rgb(253,192,1)" rx="2" ry="2" />
<text  x="306.95" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsOmitStripped (14,492,753 samples, 0.12%)</title><rect x="446.7" y="533" width="1.4" height="15.0" fill="rgb(243,163,51)" rx="2" ry="2" />
<text  x="449.73" y="543.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;NS_ACO::ThreadID, int, std::hash&lt;NS_ACO::ThreadID&gt;, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="56.2" y="549" width="1.4" height="15.0" fill="rgb(211,156,39)" rx="2" ry="2" />
<text  x="59.19" y="559.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="120.6" y="405" width="1.4" height="15.0" fill="rgb(249,213,1)" rx="2" ry="2" />
<text  x="123.58" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="840.1" y="645" width="1.4" height="15.0" fill="rgb(229,143,1)" rx="2" ry="2" />
<text  x="843.06" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt; &gt; &gt;::find (28,985,506 samples, 0.24%)</title><rect x="187.8" y="597" width="2.8" height="15.0" fill="rgb(213,118,12)" rx="2" ry="2" />
<text  x="190.77" y="607.5" ></text>
</g>
<g >
<title>AcoContext::ReportStatistic (57,971,012 samples, 0.47%)</title><rect x="722.5" y="709" width="5.6" height="15.0" fill="rgb(230,220,14)" rx="2" ry="2" />
<text  x="725.48" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="277.4" y="325" width="1.4" height="15.0" fill="rgb(241,49,32)" rx="2" ry="2" />
<text  x="280.35" y="335.5" ></text>
</g>
<g >
<title>pthread_self@plt (14,492,753 samples, 0.12%)</title><rect x="635.7" y="357" width="1.4" height="15.0" fill="rgb(253,229,7)" rx="2" ry="2" />
<text  x="638.69" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::FieldNumberSorter::operator (14,492,753 samples, 0.12%)</title><rect x="239.6" y="357" width="1.4" height="15.0" fill="rgb(248,16,22)" rx="2" ry="2" />
<text  x="242.56" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="473.3" y="485" width="1.4" height="15.0" fill="rgb(212,43,6)" rx="2" ry="2" />
<text  x="476.32" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ScopeSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="492.9" y="405" width="1.4" height="15.0" fill="rgb(223,48,28)" rx="2" ry="2" />
<text  x="495.92" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (14,492,753 samples, 0.12%)</title><rect x="931.0" y="533" width="1.4" height="15.0" fill="rgb(235,20,47)" rx="2" ry="2" />
<text  x="934.04" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="716.9" y="469" width="1.4" height="15.0" fill="rgb(223,79,4)" rx="2" ry="2" />
<text  x="719.88" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (43,478,259 samples, 0.36%)</title><rect x="439.7" y="549" width="4.2" height="15.0" fill="rgb(245,210,23)" rx="2" ry="2" />
<text  x="442.73" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="842.9" y="549" width="1.4" height="15.0" fill="rgb(205,30,11)" rx="2" ry="2" />
<text  x="845.86" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::UnknownField::Delete (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="661" width="1.4" height="15.0" fill="rgb(218,84,7)" rx="2" ry="2" />
<text  x="1030.63" y="671.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map_message_type (14,492,753 samples, 0.12%)</title><rect x="250.8" y="421" width="1.4" height="15.0" fill="rgb(235,131,14)" rx="2" ry="2" />
<text  x="253.76" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (43,478,259 samples, 0.36%)</title><rect x="392.1" y="597" width="4.2" height="15.0" fill="rgb(249,205,3)" rx="2" ry="2" />
<text  x="395.14" y="607.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="365.5" y="437" width="1.4" height="15.0" fill="rgb(235,12,7)" rx="2" ry="2" />
<text  x="368.54" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::~vector (14,492,753 samples, 0.12%)</title><rect x="466.3" y="517" width="1.4" height="15.0" fill="rgb(231,53,44)" rx="2" ry="2" />
<text  x="469.32" y="527.5" ></text>
</g>
<g >
<title>std::string::operator[] (14,492,753 samples, 0.12%)</title><rect x="424.3" y="597" width="1.4" height="15.0" fill="rgb(224,3,22)" rx="2" ry="2" />
<text  x="427.33" y="607.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="642.7" y="469" width="1.4" height="15.0" fill="rgb(243,37,54)" rx="2" ry="2" />
<text  x="645.69" y="479.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="547.5" y="277" width="1.4" height="15.0" fill="rgb(229,61,4)" rx="2" ry="2" />
<text  x="550.51" y="287.5" ></text>
</g>
<g >
<title>RPC::DB::SetRecord&lt;msg::DBExternalTalentInfo&gt; (942,028,945 samples, 7.71%)</title><rect x="585.3" y="645" width="91.0" height="15.0" fill="rgb(252,135,27)" rx="2" ry="2" />
<text  x="588.30" y="655.5" >RPC::DB::S..</text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::SortMap (14,492,753 samples, 0.12%)</title><rect x="172.4" y="501" width="1.4" height="15.0" fill="rgb(229,137,22)" rx="2" ry="2" />
<text  x="175.37" y="511.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (28,985,506 samples, 0.24%)</title><rect x="243.8" y="373" width="2.8" height="15.0" fill="rgb(223,118,43)" rx="2" ry="2" />
<text  x="246.76" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::TracerProvider::GetTracer (28,985,506 samples, 0.24%)</title><rect x="856.9" y="517" width="2.8" height="15.0" fill="rgb(208,147,0)" rx="2" ry="2" />
<text  x="859.86" y="527.5" ></text>
</g>
<g >
<title>std::string::erase (14,492,753 samples, 0.12%)</title><rect x="330.5" y="485" width="1.4" height="15.0" fill="rgb(218,12,45)" rx="2" ry="2" />
<text  x="333.55" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (28,985,506 samples, 0.24%)</title><rect x="575.5" y="421" width="2.8" height="15.0" fill="rgb(239,92,43)" rx="2" ry="2" />
<text  x="578.50" y="431.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (14,492,753 samples, 0.12%)</title><rect x="602.1" y="453" width="1.4" height="15.0" fill="rgb(242,6,41)" rx="2" ry="2" />
<text  x="605.10" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiSpanProcessor::OnEnd (115,942,024 samples, 0.95%)</title><rect x="687.5" y="565" width="11.2" height="15.0" fill="rgb(241,195,21)" rx="2" ry="2" />
<text  x="690.49" y="575.5" ></text>
</g>
<g >
<title>RPC::RPCCSNotify (405,797,084 samples, 3.32%)</title><rect x="676.3" y="645" width="39.2" height="15.0" fill="rgb(214,130,13)" rx="2" ry="2" />
<text  x="679.29" y="655.5" >RPC..</text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (14,492,753 samples, 0.12%)</title><rect x="171.0" y="405" width="1.4" height="15.0" fill="rgb(228,195,33)" rx="2" ry="2" />
<text  x="173.97" y="415.5" ></text>
</g>
<g >
<title>__GI___rawmemchr (14,492,753 samples, 0.12%)</title><rect x="1034.6" y="773" width="1.4" height="15.0" fill="rgb(207,149,43)" rx="2" ry="2" />
<text  x="1037.63" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::FastUInt64ToBufferLeft (14,492,753 samples, 0.12%)</title><rect x="267.6" y="357" width="1.4" height="15.0" fill="rgb(213,109,14)" rx="2" ry="2" />
<text  x="270.56" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="165.4" y="389" width="1.4" height="15.0" fill="rgb(245,38,18)" rx="2" ry="2" />
<text  x="168.37" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="386.5" y="533" width="1.4" height="15.0" fill="rgb(253,83,23)" rx="2" ry="2" />
<text  x="389.54" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt; (14,492,753 samples, 0.12%)</title><rect x="392.1" y="517" width="1.4" height="15.0" fill="rgb(245,18,52)" rx="2" ry="2" />
<text  x="395.14" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (28,985,506 samples, 0.24%)</title><rect x="959.0" y="565" width="2.8" height="15.0" fill="rgb(229,106,18)" rx="2" ry="2" />
<text  x="962.04" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (14,492,753 samples, 0.12%)</title><rect x="585.3" y="565" width="1.4" height="15.0" fill="rgb(208,198,9)" rx="2" ry="2" />
<text  x="588.30" y="575.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="408.9" y="485" width="1.4" height="15.0" fill="rgb(247,118,24)" rx="2" ry="2" />
<text  x="411.93" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::HasBitIndex (14,492,753 samples, 0.12%)</title><rect x="711.3" y="421" width="1.4" height="15.0" fill="rgb(246,227,28)" rx="2" ry="2" />
<text  x="714.28" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordable::SetAttribute (14,492,753 samples, 0.12%)</title><rect x="672.1" y="389" width="1.4" height="15.0" fill="rgb(221,67,39)" rx="2" ry="2" />
<text  x="675.09" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (72,463,765 samples, 0.59%)</title><rect x="603.5" y="501" width="7.0" height="15.0" fill="rgb(244,166,49)" rx="2" ry="2" />
<text  x="606.50" y="511.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="639.9" y="277" width="1.4" height="15.0" fill="rgb(247,20,50)" rx="2" ry="2" />
<text  x="642.89" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="620.3" y="421" width="1.4" height="15.0" fill="rgb(234,143,32)" rx="2" ry="2" />
<text  x="623.30" y="431.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="171.0" y="437" width="1.4" height="15.0" fill="rgb(235,201,36)" rx="2" ry="2" />
<text  x="173.97" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (14,492,753 samples, 0.12%)</title><rect x="103.8" y="517" width="1.4" height="15.0" fill="rgb(238,145,27)" rx="2" ry="2" />
<text  x="106.78" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::RuntimeContext::GetCurrent (14,492,753 samples, 0.12%)</title><rect x="511.1" y="437" width="1.4" height="15.0" fill="rgb(249,80,51)" rx="2" ry="2" />
<text  x="514.12" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="43.6" y="597" width="2.8" height="15.0" fill="rgb(214,120,29)" rx="2" ry="2" />
<text  x="46.59" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::~unique_ptr (14,492,753 samples, 0.12%)</title><rect x="373.9" y="581" width="1.4" height="15.0" fill="rgb(228,165,23)" rx="2" ry="2" />
<text  x="376.94" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (14,492,753 samples, 0.12%)</title><rect x="263.4" y="405" width="1.4" height="15.0" fill="rgb(208,76,20)" rx="2" ry="2" />
<text  x="266.36" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;::_M_addr (14,492,753 samples, 0.12%)</title><rect x="432.7" y="453" width="1.4" height="15.0" fill="rgb(218,151,3)" rx="2" ry="2" />
<text  x="435.73" y="463.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (28,985,506 samples, 0.24%)</title><rect x="1156.4" y="789" width="2.8" height="15.0" fill="rgb(226,30,7)" rx="2" ry="2" />
<text  x="1159.41" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::UnknownFieldSet::~UnknownFieldSet (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="709" width="1.4" height="15.0" fill="rgb(216,133,52)" rx="2" ry="2" />
<text  x="1030.63" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (43,478,259 samples, 0.36%)</title><rect x="954.8" y="549" width="4.2" height="15.0" fill="rgb(248,196,17)" rx="2" ry="2" />
<text  x="957.84" y="559.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::DaemonRoutine_CheckerOfCheckTimeoutEvent (43,478,259 samples, 0.36%)</title><rect x="793.9" y="645" width="4.2" height="15.0" fill="rgb(231,198,5)" rx="2" ry="2" />
<text  x="796.87" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::Bits::Log2FloorNonZero64 (14,492,753 samples, 0.12%)</title><rect x="429.9" y="373" width="1.4" height="15.0" fill="rgb(226,190,16)" rx="2" ry="2" />
<text  x="432.93" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (43,478,259 samples, 0.36%)</title><rect x="872.3" y="341" width="4.2" height="15.0" fill="rgb(249,117,49)" rx="2" ry="2" />
<text  x="875.25" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="861.1" y="357" width="2.8" height="15.0" fill="rgb(249,47,18)" rx="2" ry="2" />
<text  x="864.06" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32 (14,492,753 samples, 0.12%)</title><rect x="71.6" y="341" width="1.4" height="15.0" fill="rgb(231,178,29)" rx="2" ry="2" />
<text  x="74.59" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="67.4" y="453" width="1.4" height="15.0" fill="rgb(206,30,3)" rx="2" ry="2" />
<text  x="70.39" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="876.5" y="325" width="2.8" height="15.0" fill="rgb(234,228,0)" rx="2" ry="2" />
<text  x="879.45" y="335.5" ></text>
</g>
<g >
<title>NS_ACO::AcoEventManager::GetServiceEp (28,985,506 samples, 0.24%)</title><rect x="481.7" y="533" width="2.8" height="15.0" fill="rgb(234,214,34)" rx="2" ry="2" />
<text  x="484.72" y="543.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="880.7" y="341" width="1.4" height="15.0" fill="rgb(242,136,50)" rx="2" ry="2" />
<text  x="883.65" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::MultiRecordable::SetStartTime (14,492,753 samples, 0.12%)</title><rect x="95.4" y="485" width="1.4" height="15.0" fill="rgb(249,153,29)" rx="2" ry="2" />
<text  x="98.39" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::CEscapedLength (14,492,753 samples, 0.12%)</title><rect x="322.1" y="437" width="1.4" height="15.0" fill="rgb(234,150,12)" rx="2" ry="2" />
<text  x="325.15" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="557.3" y="293" width="1.4" height="15.0" fill="rgb(212,151,19)" rx="2" ry="2" />
<text  x="560.31" y="303.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (14,492,753 samples, 0.12%)</title><rect x="386.5" y="309" width="1.4" height="15.0" fill="rgb(227,55,1)" rx="2" ry="2" />
<text  x="389.54" y="319.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="427.1" y="485" width="2.8" height="15.0" fill="rgb(250,19,36)" rx="2" ry="2" />
<text  x="430.13" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::variant (14,492,753 samples, 0.12%)</title><rect x="894.7" y="421" width="1.3" height="15.0" fill="rgb(245,79,10)" rx="2" ry="2" />
<text  x="897.65" y="431.5" ></text>
</g>
<g >
<title>SExternalTalentAddPointReq::operator (3,130,434,648 samples, 25.62%)</title><rect x="417.3" y="677" width="302.4" height="15.0" fill="rgb(215,189,52)" rx="2" ry="2" />
<text  x="420.33" y="687.5" >SExternalTalentAddPointReq::operator</text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (57,971,012 samples, 0.47%)</title><rect x="22.6" y="597" width="5.6" height="15.0" fill="rgb(251,95,39)" rx="2" ry="2" />
<text  x="25.60" y="607.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (115,942,024 samples, 0.95%)</title><rect x="687.5" y="533" width="11.2" height="15.0" fill="rgb(216,205,5)" rx="2" ry="2" />
<text  x="690.49" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (57,971,012 samples, 0.47%)</title><rect x="82.8" y="469" width="5.6" height="15.0" fill="rgb(213,134,26)" rx="2" ry="2" />
<text  x="85.79" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (43,478,259 samples, 0.36%)</title><rect x="392.1" y="613" width="4.2" height="15.0" fill="rgb(217,92,12)" rx="2" ry="2" />
<text  x="395.14" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;AcoLog::ELogPriority, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="179.4" y="549" width="1.4" height="15.0" fill="rgb(224,46,40)" rx="2" ry="2" />
<text  x="182.37" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::strings::AlphaNum::AlphaNum (14,492,753 samples, 0.12%)</title><rect x="959.0" y="549" width="1.4" height="15.0" fill="rgb(239,211,29)" rx="2" ry="2" />
<text  x="962.04" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="26.8" y="517" width="1.4" height="15.0" fill="rgb(229,34,23)" rx="2" ry="2" />
<text  x="29.80" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="26.8" y="469" width="1.4" height="15.0" fill="rgb(242,81,49)" rx="2" ry="2" />
<text  x="29.80" y="479.5" ></text>
</g>
<g >
<title>talent (12,217,390,779 samples, 100.00%)</title><rect x="10.0" y="805" width="1180.0" height="15.0" fill="rgb(205,164,36)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >talent</text>
</g>
<g >
<title>std::string::_Rep::_S_empty_rep (14,492,753 samples, 0.12%)</title><rect x="1115.8" y="661" width="1.4" height="15.0" fill="rgb(237,194,17)" rx="2" ry="2" />
<text  x="1118.81" y="671.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="502.7" y="277" width="1.4" height="15.0" fill="rgb(250,156,26)" rx="2" ry="2" />
<text  x="505.72" y="287.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::Run (10,318,840,136 samples, 84.46%)</title><rect x="10.0" y="773" width="996.6" height="15.0" fill="rgb(253,120,49)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >NS_ACO::AcoThread::Run</text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="942.2" y="469" width="1.4" height="15.0" fill="rgb(218,210,51)" rx="2" ry="2" />
<text  x="945.24" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum (14,492,753 samples, 0.12%)</title><rect x="362.7" y="517" width="1.4" height="15.0" fill="rgb(224,203,10)" rx="2" ry="2" />
<text  x="365.74" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::vector (14,492,753 samples, 0.12%)</title><rect x="269.0" y="421" width="1.4" height="15.0" fill="rgb(220,177,29)" rx="2" ry="2" />
<text  x="271.96" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;opentelemetry::proto::common::v1::KeyValue&gt;::NewFromPrototype (14,492,753 samples, 0.12%)</title><rect x="884.9" y="277" width="1.4" height="15.0" fill="rgb(244,36,34)" rx="2" ry="2" />
<text  x="887.85" y="287.5" ></text>
</g>
<g >
<title>msg::Deposit2Any_GetSpecifyPropsRes::_InternalParse (14,492,753 samples, 0.12%)</title><rect x="1023.4" y="757" width="1.4" height="15.0" fill="rgb(253,96,26)" rx="2" ry="2" />
<text  x="1026.43" y="767.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (101,449,271 samples, 0.83%)</title><rect x="89.8" y="501" width="9.8" height="15.0" fill="rgb(245,8,20)" rx="2" ry="2" />
<text  x="92.79" y="511.5" ></text>
</g>
<g >
<title>std::__unguarded_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="169.6" y="437" width="1.4" height="15.0" fill="rgb(251,222,19)" rx="2" ry="2" />
<text  x="172.57" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="886.3" y="309" width="1.4" height="15.0" fill="rgb(254,153,41)" rx="2" ry="2" />
<text  x="889.25" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (14,492,753 samples, 0.12%)</title><rect x="19.8" y="597" width="1.4" height="15.0" fill="rgb(226,97,18)" rx="2" ry="2" />
<text  x="22.80" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="904.4" y="549" width="1.4" height="15.0" fill="rgb(242,105,7)" rx="2" ry="2" />
<text  x="907.45" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (43,478,259 samples, 0.36%)</title><rect x="652.5" y="453" width="4.2" height="15.0" fill="rgb(209,57,4)" rx="2" ry="2" />
<text  x="655.49" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::construct&lt;google::protobuf::FieldDescriptor const*, google::protobuf::FieldDescriptor const* const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="399.1" y="501" width="1.4" height="15.0" fill="rgb(205,108,18)" rx="2" ry="2" />
<text  x="402.13" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (14,492,753 samples, 0.12%)</title><rect x="586.7" y="341" width="1.4" height="15.0" fill="rgb(218,227,20)" rx="2" ry="2" />
<text  x="589.70" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="875.1" y="213" width="1.4" height="15.0" fill="rgb(223,20,46)" rx="2" ry="2" />
<text  x="878.05" y="223.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::KeyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="145.8" y="389" width="1.4" height="15.0" fill="rgb(212,131,6)" rx="2" ry="2" />
<text  x="148.78" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MapEnd (14,492,753 samples, 0.12%)</title><rect x="414.5" y="517" width="1.4" height="15.0" fill="rgb(245,200,13)" rx="2" ry="2" />
<text  x="417.53" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;std::string&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="1078.0" y="757" width="1.4" height="15.0" fill="rgb(225,124,32)" rx="2" ry="2" />
<text  x="1081.02" y="767.5" ></text>
</g>
<g >
<title>std::string::append (14,492,753 samples, 0.12%)</title><rect x="473.3" y="421" width="1.4" height="15.0" fill="rgb(235,214,31)" rx="2" ry="2" />
<text  x="476.32" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="52.0" y="661" width="1.4" height="15.0" fill="rgb(227,201,29)" rx="2" ry="2" />
<text  x="54.99" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="586.7" y="469" width="1.4" height="15.0" fill="rgb(248,40,21)" rx="2" ry="2" />
<text  x="589.70" y="479.5" ></text>
</g>
<g >
<title>__gthread_active_p (14,492,753 samples, 0.12%)</title><rect x="516.7" y="405" width="1.4" height="15.0" fill="rgb(219,157,28)" rx="2" ry="2" />
<text  x="519.71" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::StrCat (28,985,506 samples, 0.24%)</title><rect x="621.7" y="421" width="2.8" height="15.0" fill="rgb(238,105,51)" rx="2" ry="2" />
<text  x="624.70" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::push_back (14,492,753 samples, 0.12%)</title><rect x="115.0" y="469" width="1.4" height="15.0" fill="rgb(249,189,38)" rx="2" ry="2" />
<text  x="117.98" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (28,985,506 samples, 0.24%)</title><rect x="694.5" y="517" width="2.8" height="15.0" fill="rgb(235,154,46)" rx="2" ry="2" />
<text  x="697.48" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;std::string const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="880.7" y="405" width="1.4" height="15.0" fill="rgb(218,53,35)" rx="2" ry="2" />
<text  x="883.65" y="415.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_grab (14,492,753 samples, 0.12%)</title><rect x="564.3" y="405" width="1.4" height="15.0" fill="rgb(231,96,14)" rx="2" ry="2" />
<text  x="567.31" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="64.6" y="405" width="2.8" height="15.0" fill="rgb(243,58,24)" rx="2" ry="2" />
<text  x="67.59" y="415.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="942.2" y="325" width="1.4" height="15.0" fill="rgb(211,223,7)" rx="2" ry="2" />
<text  x="945.24" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="586.7" y="325" width="1.4" height="15.0" fill="rgb(228,216,45)" rx="2" ry="2" />
<text  x="589.70" y="335.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (101,449,271 samples, 0.83%)</title><rect x="319.3" y="517" width="9.8" height="15.0" fill="rgb(209,118,26)" rx="2" ry="2" />
<text  x="322.35" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (14,492,753 samples, 0.12%)</title><rect x="487.3" y="453" width="1.4" height="15.0" fill="rgb(218,79,13)" rx="2" ry="2" />
<text  x="490.32" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (14,492,753 samples, 0.12%)</title><rect x="687.5" y="341" width="1.4" height="15.0" fill="rgb(230,65,53)" rx="2" ry="2" />
<text  x="690.49" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="666.5" y="405" width="2.8" height="15.0" fill="rgb(222,182,52)" rx="2" ry="2" />
<text  x="669.49" y="415.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (28,985,506 samples, 0.24%)</title><rect x="621.7" y="389" width="2.8" height="15.0" fill="rgb(234,151,47)" rx="2" ry="2" />
<text  x="624.70" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::CopyValue (14,492,753 samples, 0.12%)</title><rect x="539.1" y="437" width="1.4" height="15.0" fill="rgb(253,164,41)" rx="2" ry="2" />
<text  x="542.11" y="447.5" ></text>
</g>
<g >
<title>std::end&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="505.5" y="437" width="1.4" height="15.0" fill="rgb(234,197,0)" rx="2" ry="2" />
<text  x="508.52" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Message::DebugString (43,478,259 samples, 0.36%)</title><rect x="715.5" y="645" width="4.2" height="15.0" fill="rgb(220,210,20)" rx="2" ry="2" />
<text  x="718.48" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_Vector_base (14,492,753 samples, 0.12%)</title><rect x="632.9" y="437" width="1.4" height="15.0" fill="rgb(254,39,46)" rx="2" ry="2" />
<text  x="635.89" y="447.5" ></text>
</g>
<g >
<title>DataAgentExporter::Export (260,869,554 samples, 2.14%)</title><rect x="64.6" y="517" width="25.2" height="15.0" fill="rgb(205,93,22)" rx="2" ry="2" />
<text  x="67.59" y="527.5" >D..</text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="438.3" y="373" width="1.4" height="15.0" fill="rgb(207,85,16)" rx="2" ry="2" />
<text  x="441.33" y="383.5" ></text>
</g>
<g >
<title>tbuspp_endpoint_t::~tbuspp_endpoint_t (43,478,259 samples, 0.36%)</title><rect x="1132.6" y="773" width="4.2" height="15.0" fill="rgb(232,6,31)" rx="2" ry="2" />
<text  x="1135.61" y="783.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::InstrumentationScope::~InstrumentationScope (14,492,753 samples, 0.12%)</title><rect x="669.3" y="485" width="1.4" height="15.0" fill="rgb(244,61,41)" rx="2" ry="2" />
<text  x="672.29" y="495.5" ></text>
</g>
<g >
<title>AcoLogAutoSelect&lt;true, false&gt;::Log&lt;unsigned long, unsigned long, bool const&amp;, std::string const&amp;&gt; (28,985,506 samples, 0.24%)</title><rect x="17.0" y="709" width="2.8" height="15.0" fill="rgb(213,169,54)" rx="2" ry="2" />
<text  x="20.00" y="719.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (43,478,259 samples, 0.36%)</title><rect x="617.5" y="453" width="4.2" height="15.0" fill="rgb(211,33,33)" rx="2" ry="2" />
<text  x="620.50" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TypeDefinedMapFieldBase&lt;std::string, std::string&gt;::MapEnd (14,492,753 samples, 0.12%)</title><rect x="172.4" y="485" width="1.4" height="15.0" fill="rgb(214,224,45)" rx="2" ry="2" />
<text  x="175.37" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="490.1" y="501" width="1.4" height="15.0" fill="rgb(216,19,38)" rx="2" ry="2" />
<text  x="493.12" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (72,463,765 samples, 0.59%)</title><rect x="166.8" y="533" width="7.0" height="15.0" fill="rgb(254,211,44)" rx="2" ry="2" />
<text  x="169.77" y="543.5" ></text>
</g>
<g >
<title>__memmove_ssse3 (14,492,753 samples, 0.12%)</title><rect x="610.5" y="405" width="1.4" height="15.0" fill="rgb(210,140,7)" rx="2" ry="2" />
<text  x="613.50" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (14,492,753 samples, 0.12%)</title><rect x="155.6" y="437" width="1.4" height="15.0" fill="rgb(234,43,5)" rx="2" ry="2" />
<text  x="158.58" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="651.1" y="421" width="1.4" height="15.0" fill="rgb(213,118,54)" rx="2" ry="2" />
<text  x="654.09" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="362.7" y="469" width="1.4" height="15.0" fill="rgb(243,5,47)" rx="2" ry="2" />
<text  x="365.74" y="479.5" ></text>
</g>
<g >
<title>__gthread_active_p (14,492,753 samples, 0.12%)</title><rect x="134.6" y="485" width="1.4" height="15.0" fill="rgb(253,12,8)" rx="2" ry="2" />
<text  x="137.58" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::Span&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="436.9" y="357" width="1.4" height="15.0" fill="rgb(238,107,51)" rx="2" ry="2" />
<text  x="439.93" y="367.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="561.5" y="229" width="1.4" height="15.0" fill="rgb(237,19,52)" rx="2" ry="2" />
<text  x="564.51" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::emplace_back&lt;google::protobuf::FieldDescriptor const*&gt; (28,985,506 samples, 0.24%)</title><rect x="932.4" y="549" width="2.8" height="15.0" fill="rgb(228,50,4)" rx="2" ry="2" />
<text  x="935.44" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;opentelemetry::v1::sdk::trace::Tracer,  (14,492,753 samples, 0.12%)</title><rect x="858.3" y="501" width="1.4" height="15.0" fill="rgb(233,50,9)" rx="2" ry="2" />
<text  x="861.26" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Symbol, google::protobuf::Symbol, std::allocator&lt;google::protobuf::Symbol&gt;, std::__detail::_Identity, google::protobuf::(anonymous namespace)::FieldsByNumberEq, google::protobuf::(anonymous namespace)::FieldsByNumberHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (14,492,753 samples, 0.12%)</title><rect x="406.1" y="437" width="1.4" height="15.0" fill="rgb(218,85,1)" rx="2" ry="2" />
<text  x="409.13" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasField (57,971,012 samples, 0.47%)</title><rect x="925.4" y="581" width="5.6" height="15.0" fill="rgb(252,222,45)" rx="2" ry="2" />
<text  x="928.44" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="590.9" y="405" width="1.4" height="15.0" fill="rgb(235,52,42)" rx="2" ry="2" />
<text  x="593.90" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="295.6" y="405" width="1.4" height="15.0" fill="rgb(213,76,23)" rx="2" ry="2" />
<text  x="298.55" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="585.3" y="485" width="1.4" height="15.0" fill="rgb(215,190,3)" rx="2" ry="2" />
<text  x="588.30" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="861.1" y="373" width="2.8" height="15.0" fill="rgb(225,79,14)" rx="2" ry="2" />
<text  x="864.06" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::erase (28,985,506 samples, 0.24%)</title><rect x="61.8" y="501" width="2.8" height="15.0" fill="rgb(225,106,46)" rx="2" ry="2" />
<text  x="64.79" y="511.5" ></text>
</g>
<g >
<title>msg::DBBatchGetRes::~DBBatchGetRes (14,492,753 samples, 0.12%)</title><rect x="1079.4" y="773" width="1.4" height="15.0" fill="rgb(254,210,47)" rx="2" ry="2" />
<text  x="1082.42" y="783.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (57,971,012 samples, 0.47%)</title><rect x="1111.6" y="709" width="5.6" height="15.0" fill="rgb(247,185,8)" rx="2" ry="2" />
<text  x="1114.61" y="719.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::_internal_add_attributes (14,492,753 samples, 0.12%)</title><rect x="884.9" y="325" width="1.4" height="15.0" fill="rgb(234,155,36)" rx="2" ry="2" />
<text  x="887.85" y="335.5" ></text>
</g>
<g >
<title>msg::ServerPkg::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="900.2" y="581" width="1.4" height="15.0" fill="rgb(254,223,2)" rx="2" ry="2" />
<text  x="903.25" y="591.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (14,492,753 samples, 0.12%)</title><rect x="206.0" y="421" width="1.4" height="15.0" fill="rgb(247,129,52)" rx="2" ry="2" />
<text  x="208.97" y="431.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="875.1" y="37" width="1.4" height="15.0" fill="rgb(210,211,29)" rx="2" ry="2" />
<text  x="878.05" y="47.5" ></text>
</g>
<g >
<title>void opentelemetry::v1::nostd::function_ref&lt;bool  (14,492,753 samples, 0.12%)</title><rect x="672.1" y="437" width="1.4" height="15.0" fill="rgb(222,47,35)" rx="2" ry="2" />
<text  x="675.09" y="447.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="112.2" y="421" width="1.4" height="15.0" fill="rgb(247,204,5)" rx="2" ry="2" />
<text  x="115.18" y="431.5" ></text>
</g>
<g >
<title>RPC::DB::BatchAsync (840,579,674 samples, 6.88%)</title><rect x="56.2" y="645" width="81.2" height="15.0" fill="rgb(213,25,47)" rx="2" ry="2" />
<text  x="59.19" y="655.5" >RPC::DB::..</text>
</g>
<g >
<title>std::string::compare (14,492,753 samples, 0.12%)</title><rect x="270.4" y="421" width="1.4" height="15.0" fill="rgb(245,166,4)" rx="2" ry="2" />
<text  x="273.36" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpPopulateAttributeUtils::PopulateAttribute (14,492,753 samples, 0.12%)</title><rect x="600.7" y="421" width="1.4" height="15.0" fill="rgb(224,191,39)" rx="2" ry="2" />
<text  x="603.70" y="431.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_service (28,985,506 samples, 0.24%)</title><rect x="485.9" y="549" width="2.8" height="15.0" fill="rgb(239,13,17)" rx="2" ry="2" />
<text  x="488.92" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Write (14,492,753 samples, 0.12%)</title><rect x="639.9" y="357" width="1.4" height="15.0" fill="rgb(236,163,37)" rx="2" ry="2" />
<text  x="642.89" y="367.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="109.4" y="437" width="1.4" height="15.0" fill="rgb(234,102,6)" rx="2" ry="2" />
<text  x="112.38" y="447.5" ></text>
</g>
<g >
<title>std::equal_to&lt;NS_ACO::ThreadID&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="138.8" y="501" width="1.4" height="15.0" fill="rgb(251,94,16)" rx="2" ry="2" />
<text  x="141.78" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::strings::AlphaNum::AlphaNum (14,492,753 samples, 0.12%)</title><rect x="410.3" y="501" width="1.4" height="15.0" fill="rgb(227,154,39)" rx="2" ry="2" />
<text  x="413.33" y="511.5" ></text>
</g>
<g >
<title>msg::TraceDeliverReq::~TraceDeliverReq (14,492,753 samples, 0.12%)</title><rect x="1013.6" y="773" width="1.4" height="15.0" fill="rgb(225,193,35)" rx="2" ry="2" />
<text  x="1016.63" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessage (28,985,506 samples, 0.24%)</title><rect x="427.1" y="469" width="2.8" height="15.0" fill="rgb(238,46,0)" rx="2" ry="2" />
<text  x="430.13" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (173,913,036 samples, 1.42%)</title><rect x="644.1" y="517" width="16.8" height="15.0" fill="rgb(236,16,6)" rx="2" ry="2" />
<text  x="647.09" y="527.5" ></text>
</g>
<g >
<title>AcoLog::~AcoLog (14,492,753 samples, 0.12%)</title><rect x="380.9" y="629" width="1.4" height="15.0" fill="rgb(247,181,29)" rx="2" ry="2" />
<text  x="383.94" y="639.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadManager::ThreadTimer::PopTimeoutThreadID (14,492,753 samples, 0.12%)</title><rect x="1005.2" y="709" width="1.4" height="15.0" fill="rgb(207,39,9)" rx="2" ry="2" />
<text  x="1008.23" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, int&amp;, int&amp;, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&amp;&gt;::operator=&lt;int, int, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&gt; (14,492,753 samples, 0.12%)</title><rect x="81.4" y="389" width="1.4" height="15.0" fill="rgb(232,41,53)" rx="2" ry="2" />
<text  x="84.39" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::_M_lower_bound (14,492,753 samples, 0.12%)</title><rect x="151.4" y="421" width="1.4" height="15.0" fill="rgb(223,2,34)" rx="2" ry="2" />
<text  x="154.38" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~_Move_assign_base (14,492,753 samples, 0.12%)</title><rect x="390.7" y="565" width="1.4" height="15.0" fill="rgb(240,37,35)" rx="2" ry="2" />
<text  x="393.74" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="693.1" y="357" width="1.4" height="15.0" fill="rgb(235,173,11)" rx="2" ry="2" />
<text  x="696.08" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::max_size (14,492,753 samples, 0.12%)</title><rect x="523.7" y="421" width="1.4" height="15.0" fill="rgb(220,10,14)" rx="2" ry="2" />
<text  x="526.71" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::Span (14,492,753 samples, 0.12%)</title><rect x="672.1" y="421" width="1.4" height="15.0" fill="rgb(223,165,35)" rx="2" ry="2" />
<text  x="675.09" y="431.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;NS_ACO::ThreadID, int, std::hash&lt;NS_ACO::ThreadID&gt;, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="138.8" y="581" width="1.4" height="15.0" fill="rgb(242,123,17)" rx="2" ry="2" />
<text  x="141.78" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="484.5" y="517" width="1.4" height="15.0" fill="rgb(227,183,2)" rx="2" ry="2" />
<text  x="487.52" y="527.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (1,898,550,643 samples, 15.54%)</title><rect x="192.0" y="629" width="183.3" height="15.0" fill="rgb(217,8,28)" rx="2" ry="2" />
<text  x="194.97" y="639.5" >operator&lt;&lt;</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt;, std::_Select1st&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt;, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="842.9" y="597" width="1.4" height="15.0" fill="rgb(219,161,35)" rx="2" ry="2" />
<text  x="845.86" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;bool&gt; (14,492,753 samples, 0.12%)</title><rect x="287.2" y="421" width="1.4" height="15.0" fill="rgb(245,90,33)" rx="2" ry="2" />
<text  x="290.15" y="431.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::SimpleSpanProcessor::MakeRecordable (14,492,753 samples, 0.12%)</title><rect x="893.3" y="437" width="1.4" height="15.0" fill="rgb(213,153,20)" rx="2" ry="2" />
<text  x="896.25" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32 (14,492,753 samples, 0.12%)</title><rect x="120.6" y="469" width="1.4" height="15.0" fill="rgb(213,108,5)" rx="2" ry="2" />
<text  x="123.58" y="479.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (14,492,753 samples, 0.12%)</title><rect x="436.9" y="341" width="1.4" height="15.0" fill="rgb(205,138,9)" rx="2" ry="2" />
<text  x="439.93" y="351.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;google::protobuf::(anonymous namespace)::FieldNumberSorter&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="613.3" y="373" width="1.4" height="15.0" fill="rgb(219,62,25)" rx="2" ry="2" />
<text  x="616.30" y="383.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="120.6" y="421" width="1.4" height="15.0" fill="rgb(240,139,54)" rx="2" ry="2" />
<text  x="123.58" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (173,913,036 samples, 1.42%)</title><rect x="644.1" y="485" width="16.8" height="15.0" fill="rgb(226,226,24)" rx="2" ry="2" />
<text  x="647.09" y="495.5" ></text>
</g>
<g >
<title>AcoContext::TriggerService (14,492,753 samples, 0.12%)</title><rect x="908.6" y="645" width="1.4" height="15.0" fill="rgb(249,8,39)" rx="2" ry="2" />
<text  x="911.65" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TaggedStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="492.9" y="309" width="1.4" height="15.0" fill="rgb(236,139,39)" rx="2" ry="2" />
<text  x="495.92" y="319.5" ></text>
</g>
<g >
<title>TracerUtil::SpiltTraceParent (28,985,506 samples, 0.24%)</title><rect x="488.7" y="533" width="2.8" height="15.0" fill="rgb(229,72,36)" rx="2" ry="2" />
<text  x="491.72" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="554.5" y="405" width="1.4" height="15.0" fill="rgb(216,75,18)" rx="2" ry="2" />
<text  x="557.51" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="344.5" y="485" width="1.4" height="15.0" fill="rgb(236,228,28)" rx="2" ry="2" />
<text  x="347.54" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_leak (14,492,753 samples, 0.12%)</title><rect x="588.1" y="501" width="1.4" height="15.0" fill="rgb(209,143,11)" rx="2" ry="2" />
<text  x="591.10" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldName (14,492,753 samples, 0.12%)</title><rect x="165.4" y="485" width="1.4" height="15.0" fill="rgb(208,110,18)" rx="2" ry="2" />
<text  x="168.37" y="495.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="28.2" y="549" width="1.4" height="15.0" fill="rgb(244,73,52)" rx="2" ry="2" />
<text  x="31.20" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (811,594,168 samples, 6.64%)</title><rect x="910.0" y="629" width="78.4" height="15.0" fill="rgb(219,59,13)" rx="2" ry="2" />
<text  x="913.05" y="639.5" >google::p..</text>
</g>
<g >
<title>fmt::v8::detail::default_arg_formatter&lt;char&gt;::operator (14,492,753 samples, 0.12%)</title><rect x="17.0" y="677" width="1.4" height="15.0" fill="rgb(219,71,51)" rx="2" ry="2" />
<text  x="20.00" y="687.5" ></text>
</g>
<g >
<title>std::variant&lt;opentelemetry::v1::trace::SpanContext, opentelemetry::v1::context::Context&gt;::~variant (14,492,753 samples, 0.12%)</title><rect x="390.7" y="597" width="1.4" height="15.0" fill="rgb(242,150,25)" rx="2" ry="2" />
<text  x="393.74" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::Span&gt; (28,985,506 samples, 0.24%)</title><rect x="74.4" y="405" width="2.8" height="15.0" fill="rgb(217,114,51)" rx="2" ry="2" />
<text  x="77.39" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt; (14,492,753 samples, 0.12%)</title><rect x="492.9" y="437" width="1.4" height="15.0" fill="rgb(236,129,9)" rx="2" ry="2" />
<text  x="495.92" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::iterator_base&lt;google::protobuf::MapPair&lt;std::string, std::string&gt; const&gt;::SearchFrom (14,492,753 samples, 0.12%)</title><rect x="1009.4" y="773" width="1.4" height="15.0" fill="rgb(213,106,48)" rx="2" ry="2" />
<text  x="1012.43" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (1,420,289,794 samples, 11.63%)</title><rect x="193.4" y="549" width="137.1" height="15.0" fill="rgb(238,200,51)" rx="2" ry="2" />
<text  x="196.37" y="559.5" >google::protobuf:..</text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintString (28,985,506 samples, 0.24%)</title><rect x="961.8" y="565" width="2.8" height="15.0" fill="rgb(214,229,49)" rx="2" ry="2" />
<text  x="964.84" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="593.7" y="389" width="2.8" height="15.0" fill="rgb(225,35,21)" rx="2" ry="2" />
<text  x="596.70" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::internal::TransparentSupport&lt;std::string&gt;::hash::operator (14,492,753 samples, 0.12%)</title><rect x="896.0" y="485" width="1.4" height="15.0" fill="rgb(241,181,28)" rx="2" ry="2" />
<text  x="899.05" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldBase::IsRepeatedFieldValid (14,492,753 samples, 0.12%)</title><rect x="40.8" y="597" width="1.4" height="15.0" fill="rgb(213,145,5)" rx="2" ry="2" />
<text  x="43.79" y="607.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::~TextGenerator (14,492,753 samples, 0.12%)</title><rect x="330.5" y="549" width="1.4" height="15.0" fill="rgb(220,36,3)" rx="2" ry="2" />
<text  x="333.55" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="614.7" y="405" width="1.4" height="15.0" fill="rgb(224,12,32)" rx="2" ry="2" />
<text  x="617.70" y="415.5" ></text>
</g>
<g >
<title>AcoLogAutoSelect&lt;true, false&gt;::Log&lt;unsigned long&amp;, unsigned long&amp;, int&amp;, int&amp;&gt; (28,985,506 samples, 0.24%)</title><rect x="476.1" y="645" width="2.8" height="15.0" fill="rgb(241,100,40)" rx="2" ry="2" />
<text  x="479.12" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_Vector_impl::_Vector_impl (14,492,753 samples, 0.12%)</title><rect x="312.3" y="421" width="1.4" height="15.0" fill="rgb(244,126,53)" rx="2" ry="2" />
<text  x="315.35" y="431.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;google::protobuf::Message const**, std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt; &gt;, google::protobuf::Message const*&gt;::_Temporary_buffer (57,971,012 samples, 0.47%)</title><rect x="977.2" y="533" width="5.6" height="15.0" fill="rgb(209,75,10)" rx="2" ry="2" />
<text  x="980.24" y="543.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (14,492,753 samples, 0.12%)</title><rect x="639.9" y="229" width="1.4" height="15.0" fill="rgb(239,143,32)" rx="2" ry="2" />
<text  x="642.89" y="239.5" ></text>
</g>
<g >
<title>std::string::_M_data (14,492,753 samples, 0.12%)</title><rect x="297.0" y="389" width="1.4" height="15.0" fill="rgb(231,151,8)" rx="2" ry="2" />
<text  x="299.95" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::string*&gt; (14,492,753 samples, 0.12%)</title><rect x="996.8" y="629" width="1.4" height="15.0" fill="rgb(209,101,34)" rx="2" ry="2" />
<text  x="999.83" y="639.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (43,478,259 samples, 0.36%)</title><rect x="777.1" y="629" width="4.2" height="15.0" fill="rgb(215,180,41)" rx="2" ry="2" />
<text  x="780.07" y="639.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::IsMapFieldInApi (14,492,753 samples, 0.12%)</title><rect x="250.8" y="437" width="1.4" height="15.0" fill="rgb(230,165,17)" rx="2" ry="2" />
<text  x="253.76" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (28,985,506 samples, 0.24%)</title><rect x="436.9" y="501" width="2.8" height="15.0" fill="rgb(238,219,26)" rx="2" ry="2" />
<text  x="439.93" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::Message::MaybeComputeUnknownFieldsSize (28,985,506 samples, 0.24%)</title><rect x="1072.4" y="725" width="2.8" height="15.0" fill="rgb(253,126,31)" rx="2" ry="2" />
<text  x="1075.42" y="735.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="436.9" y="453" width="2.8" height="15.0" fill="rgb(222,210,4)" rx="2" ry="2" />
<text  x="439.93" y="463.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="898.8" y="501" width="1.4" height="15.0" fill="rgb(230,29,6)" rx="2" ry="2" />
<text  x="901.85" y="511.5" ></text>
</g>
<g >
<title>std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (101,449,271 samples, 0.83%)</title><rect x="1170.4" y="789" width="9.8" height="15.0" fill="rgb(242,4,49)" rx="2" ry="2" />
<text  x="1173.40" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="627.3" y="405" width="1.4" height="15.0" fill="rgb(249,79,10)" rx="2" ry="2" />
<text  x="630.30" y="415.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="147.2" y="437" width="2.8" height="15.0" fill="rgb(227,219,49)" rx="2" ry="2" />
<text  x="150.18" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::ByteSizeLong (28,985,506 samples, 0.24%)</title><rect x="575.5" y="501" width="2.8" height="15.0" fill="rgb(213,69,4)" rx="2" ry="2" />
<text  x="578.50" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MergeFromImpl&lt;false&gt; (14,492,753 samples, 0.12%)</title><rect x="988.4" y="629" width="1.4" height="15.0" fill="rgb(236,78,40)" rx="2" ry="2" />
<text  x="991.43" y="639.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::~AnyValue (14,492,753 samples, 0.12%)</title><rect x="495.7" y="229" width="1.4" height="15.0" fill="rgb(252,229,13)" rx="2" ry="2" />
<text  x="498.72" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="691.7" y="453" width="1.4" height="15.0" fill="rgb(207,54,24)" rx="2" ry="2" />
<text  x="694.68" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (14,492,753 samples, 0.12%)</title><rect x="110.8" y="437" width="1.4" height="15.0" fill="rgb(234,130,17)" rx="2" ry="2" />
<text  x="113.78" y="447.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="991.2" y="645" width="1.4" height="15.0" fill="rgb(248,23,9)" rx="2" ry="2" />
<text  x="994.23" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="103.8" y="469" width="1.4" height="15.0" fill="rgb(245,139,31)" rx="2" ry="2" />
<text  x="106.78" y="479.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_service (14,492,753 samples, 0.12%)</title><rect x="567.1" y="565" width="1.4" height="15.0" fill="rgb(247,103,36)" rx="2" ry="2" />
<text  x="570.11" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::HasBit (28,985,506 samples, 0.24%)</title><rect x="110.8" y="469" width="2.8" height="15.0" fill="rgb(210,118,11)" rx="2" ry="2" />
<text  x="113.78" y="479.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::MakeProtection (14,492,753 samples, 0.12%)</title><rect x="546.1" y="485" width="1.4" height="15.0" fill="rgb(245,148,54)" rx="2" ry="2" />
<text  x="549.11" y="495.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintBytes (14,492,753 samples, 0.12%)</title><rect x="361.3" y="517" width="1.4" height="15.0" fill="rgb(215,221,4)" rx="2" ry="2" />
<text  x="364.34" y="527.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="302.6" y="389" width="1.4" height="15.0" fill="rgb(252,57,16)" rx="2" ry="2" />
<text  x="305.55" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="547.5" y="373" width="1.4" height="15.0" fill="rgb(241,91,52)" rx="2" ry="2" />
<text  x="550.51" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="942.2" y="357" width="1.4" height="15.0" fill="rgb(230,6,21)" rx="2" ry="2" />
<text  x="945.24" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::CheckInvalidAccess (14,492,753 samples, 0.12%)</title><rect x="925.4" y="549" width="1.4" height="15.0" fill="rgb(240,156,46)" rx="2" ry="2" />
<text  x="928.44" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::io::StringOutputStream::Next (14,492,753 samples, 0.12%)</title><rect x="277.4" y="341" width="1.4" height="15.0" fill="rgb(220,102,46)" rx="2" ry="2" />
<text  x="280.35" y="351.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;opentelemetry::proto::common::v1::AnyValue&gt; (14,492,753 samples, 0.12%)</title><rect x="442.5" y="437" width="1.4" height="15.0" fill="rgb(218,189,7)" rx="2" ry="2" />
<text  x="445.53" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;opentelemetry::proto::common::v1::InstrumentationScope&gt; (14,492,753 samples, 0.12%)</title><rect x="593.7" y="373" width="1.4" height="15.0" fill="rgb(220,82,3)" rx="2" ry="2" />
<text  x="596.70" y="383.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (14,492,753 samples, 0.12%)</title><rect x="334.7" y="533" width="1.4" height="15.0" fill="rgb(224,125,20)" rx="2" ry="2" />
<text  x="337.74" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::~RepeatedPtrField (28,985,506 samples, 0.24%)</title><rect x="495.7" y="309" width="2.8" height="15.0" fill="rgb(216,13,40)" rx="2" ry="2" />
<text  x="498.72" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::FindHelper&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="896.0" y="517" width="1.4" height="15.0" fill="rgb(235,51,38)" rx="2" ry="2" />
<text  x="899.05" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::~Printer (14,492,753 samples, 0.12%)</title><rect x="373.9" y="597" width="1.4" height="15.0" fill="rgb(235,72,8)" rx="2" ry="2" />
<text  x="376.94" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::~vector (14,492,753 samples, 0.12%)</title><rect x="329.1" y="517" width="1.4" height="15.0" fill="rgb(246,145,4)" rx="2" ry="2" />
<text  x="332.15" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14,492,753 samples, 0.12%)</title><rect x="557.3" y="325" width="1.4" height="15.0" fill="rgb(222,55,16)" rx="2" ry="2" />
<text  x="560.31" y="335.5" ></text>
</g>
<g >
<title>operator&lt;&lt; (115,942,024 samples, 0.95%)</title><rect x="702.9" y="597" width="11.2" height="15.0" fill="rgb(222,72,17)" rx="2" ry="2" />
<text  x="705.88" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::Span::_internal_trace_state (14,492,753 samples, 0.12%)</title><rect x="595.1" y="341" width="1.4" height="15.0" fill="rgb(218,208,39)" rx="2" ry="2" />
<text  x="598.10" y="351.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::~KeyValue (28,985,506 samples, 0.24%)</title><rect x="495.7" y="277" width="2.8" height="15.0" fill="rgb(214,58,40)" rx="2" ry="2" />
<text  x="498.72" y="287.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="875.1" y="133" width="1.4" height="15.0" fill="rgb(207,163,52)" rx="2" ry="2" />
<text  x="878.05" y="143.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="408.9" y="501" width="1.4" height="15.0" fill="rgb(238,58,52)" rx="2" ry="2" />
<text  x="411.93" y="511.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (14,492,753 samples, 0.12%)</title><rect x="586.7" y="517" width="1.4" height="15.0" fill="rgb(224,23,19)" rx="2" ry="2" />
<text  x="589.70" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::~ScopeSpans (14,492,753 samples, 0.12%)</title><rect x="494.3" y="309" width="1.4" height="15.0" fill="rgb(234,179,47)" rx="2" ry="2" />
<text  x="497.32" y="319.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::Container&lt;google::protobuf::UnknownFieldSet&gt;::~Container (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="725" width="1.4" height="15.0" fill="rgb(215,114,29)" rx="2" ry="2" />
<text  x="1030.63" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::Map&lt;std::string, std::string&gt;::InnerMap::FindHelper&lt;std::string&gt; (14,492,753 samples, 0.12%)</title><rect x="896.0" y="533" width="1.4" height="15.0" fill="rgb(217,54,46)" rx="2" ry="2" />
<text  x="899.05" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::is_map_message_type (14,492,753 samples, 0.12%)</title><rect x="19.8" y="533" width="1.4" height="15.0" fill="rgb(228,34,25)" rx="2" ry="2" />
<text  x="22.80" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::Context::Context (14,492,753 samples, 0.12%)</title><rect x="511.1" y="405" width="1.4" height="15.0" fill="rgb(228,42,43)" rx="2" ry="2" />
<text  x="514.12" y="415.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="639.9" y="389" width="1.4" height="15.0" fill="rgb(225,59,2)" rx="2" ry="2" />
<text  x="642.89" y="399.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_service (14,492,753 samples, 0.12%)</title><rect x="586.7" y="533" width="1.4" height="15.0" fill="rgb(251,86,22)" rx="2" ry="2" />
<text  x="589.70" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32SignExtended (14,492,753 samples, 0.12%)</title><rect x="429.9" y="405" width="1.4" height="15.0" fill="rgb(211,205,3)" rx="2" ry="2" />
<text  x="432.93" y="415.5" ></text>
</g>
<g >
<title>RPC::Wait&lt;EventParam&gt; (2,043,478,173 samples, 16.73%)</title><rect x="178.0" y="645" width="197.3" height="15.0" fill="rgb(220,210,35)" rx="2" ry="2" />
<text  x="180.97" y="655.5" >RPC::Wait&lt;EventParam&gt;</text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="568.5" y="501" width="1.4" height="15.0" fill="rgb(228,163,33)" rx="2" ry="2" />
<text  x="571.51" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintFieldValue (14,492,753 samples, 0.12%)</title><rect x="171.0" y="469" width="1.4" height="15.0" fill="rgb(241,183,22)" rx="2" ry="2" />
<text  x="173.97" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::set&lt;NS_ACO::EventID, std::less&lt;NS_ACO::EventID&gt;, std::allocator&lt;NS_ACO::EventID&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (14,492,753 samples, 0.12%)</title><rect x="189.2" y="549" width="1.4" height="15.0" fill="rgb(221,105,41)" rx="2" ry="2" />
<text  x="192.17" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::~_Move_assign_base (14,492,753 samples, 0.12%)</title><rect x="513.9" y="421" width="1.4" height="15.0" fill="rgb(208,202,42)" rx="2" ry="2" />
<text  x="516.91" y="431.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (14,492,753 samples, 0.12%)</title><rect x="568.5" y="517" width="1.4" height="15.0" fill="rgb(237,71,0)" rx="2" ry="2" />
<text  x="571.51" y="527.5" ></text>
</g>
<g >
<title>std::__lexicographical_compare_aux&lt;std::string const*, std::string const*&gt; (14,492,753 samples, 0.12%)</title><rect x="77.2" y="341" width="1.4" height="15.0" fill="rgb(230,167,8)" rx="2" ry="2" />
<text  x="80.19" y="351.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="438.3" y="229" width="1.4" height="15.0" fill="rgb(250,117,9)" rx="2" ry="2" />
<text  x="441.33" y="239.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (28,985,506 samples, 0.24%)</title><rect x="397.7" y="533" width="2.8" height="15.0" fill="rgb(231,184,14)" rx="2" ry="2" />
<text  x="400.73" y="543.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetStringReference (14,492,753 samples, 0.12%)</title><rect x="652.5" y="437" width="1.4" height="15.0" fill="rgb(253,105,35)" rx="2" ry="2" />
<text  x="655.49" y="447.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="879.3" y="389" width="1.4" height="15.0" fill="rgb(244,95,18)" rx="2" ry="2" />
<text  x="882.25" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::MapEnd (14,492,753 samples, 0.12%)</title><rect x="659.5" y="437" width="1.4" height="15.0" fill="rgb(244,214,19)" rx="2" ry="2" />
<text  x="662.49" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::v1::context::RuntimeContext::GetValue (14,492,753 samples, 0.12%)</title><rect x="511.1" y="453" width="1.4" height="15.0" fill="rgb(208,155,5)" rx="2" ry="2" />
<text  x="514.12" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;NS_ACO::EventID&gt; &gt; &gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="186.4" y="517" width="1.4" height="15.0" fill="rgb(228,116,7)" rx="2" ry="2" />
<text  x="189.37" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::EnumDescriptor::FindValueByNumber (14,492,753 samples, 0.12%)</title><rect x="947.8" y="565" width="1.4" height="15.0" fill="rgb(237,206,48)" rx="2" ry="2" />
<text  x="950.84" y="575.5" ></text>
</g>
<g >
<title>[q_0.dat] (72,463,765 samples, 0.59%)</title><rect x="1136.8" y="757" width="7.0" height="15.0" fill="rgb(221,130,4)" rx="2" ry="2" />
<text  x="1139.81" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::GetField&lt;google::protobuf::internal::ArenaStringPtr&gt; (14,492,753 samples, 0.12%)</title><rect x="652.5" y="421" width="1.4" height="15.0" fill="rgb(234,127,28)" rx="2" ry="2" />
<text  x="655.49" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::Message::ShortDebugString (811,594,168 samples, 6.64%)</title><rect x="910.0" y="661" width="78.4" height="15.0" fill="rgb(207,192,21)" rx="2" ry="2" />
<text  x="913.05" y="671.5" >google::p..</text>
</g>
<g >
<title>std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;::operator (14,492,753 samples, 0.12%)</title><rect x="586.7" y="437" width="1.4" height="15.0" fill="rgb(216,169,29)" rx="2" ry="2" />
<text  x="589.70" y="447.5" ></text>
</g>
<g >
<title>tbus2::client::EndpointMsg::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="1129.8" y="741" width="1.4" height="15.0" fill="rgb(208,104,17)" rx="2" ry="2" />
<text  x="1132.81" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (159,420,283 samples, 1.30%)</title><rect x="551.7" y="485" width="15.4" height="15.0" fill="rgb(205,223,28)" rx="2" ry="2" />
<text  x="554.71" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="859.7" y="485" width="1.4" height="15.0" fill="rgb(208,164,4)" rx="2" ry="2" />
<text  x="862.66" y="495.5" ></text>
</g>
<g >
<title>pthread_self (14,492,753 samples, 0.12%)</title><rect x="497.1" y="261" width="1.4" height="15.0" fill="rgb(225,218,27)" rx="2" ry="2" />
<text  x="500.12" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="639.9" y="373" width="1.4" height="15.0" fill="rgb(234,72,22)" rx="2" ry="2" />
<text  x="642.89" y="383.5" ></text>
</g>
<g >
<title>prometheus::Histogram::Observe (14,492,753 samples, 0.12%)</title><rect x="180.8" y="597" width="1.4" height="15.0" fill="rgb(245,42,52)" rx="2" ry="2" />
<text  x="183.77" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::~ExportTraceServiceRequest (14,492,753 samples, 0.12%)</title><rect x="386.5" y="549" width="1.4" height="15.0" fill="rgb(245,113,46)" rx="2" ry="2" />
<text  x="389.54" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64 (57,971,012 samples, 0.47%)</title><rect x="558.7" y="437" width="5.6" height="15.0" fill="rgb(212,7,50)" rx="2" ry="2" />
<text  x="561.71" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (14,492,753 samples, 0.12%)</title><rect x="337.5" y="501" width="1.4" height="15.0" fill="rgb(223,205,10)" rx="2" ry="2" />
<text  x="340.54" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (14,492,753 samples, 0.12%)</title><rect x="515.3" y="421" width="1.4" height="15.0" fill="rgb(232,81,37)" rx="2" ry="2" />
<text  x="518.31" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::stringpiece_internal::StringPiece::data (14,492,753 samples, 0.12%)</title><rect x="371.1" y="533" width="1.4" height="15.0" fill="rgb(245,46,3)" rx="2" ry="2" />
<text  x="374.14" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;std::string const, std::string&gt;::~pair (14,492,753 samples, 0.12%)</title><rect x="897.4" y="565" width="1.4" height="15.0" fill="rgb(251,166,11)" rx="2" ry="2" />
<text  x="900.45" y="575.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::KeyValue::_InternalSerialize (14,492,753 samples, 0.12%)</title><rect x="662.3" y="341" width="1.4" height="15.0" fill="rgb(234,218,15)" rx="2" ry="2" />
<text  x="665.29" y="351.5" ></text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="586.7" y="277" width="1.4" height="15.0" fill="rgb(236,4,46)" rx="2" ry="2" />
<text  x="589.70" y="287.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::DestroyProtos (28,985,506 samples, 0.24%)</title><rect x="873.7" y="261" width="2.8" height="15.0" fill="rgb(231,179,37)" rx="2" ry="2" />
<text  x="876.65" y="271.5" ></text>
</g>
<g >
<title>google::protobuf::STLStringResizeUninitialized (14,492,753 samples, 0.12%)</title><rect x="655.3" y="357" width="1.4" height="15.0" fill="rgb(253,203,8)" rx="2" ry="2" />
<text  x="658.29" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;google::protobuf::FieldDescriptor const*, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt;, std::less&lt;google::protobuf::FieldDescriptor const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::FieldDescriptor const* const, std::unique_ptr&lt;google::protobuf::TextFormat::FastFieldValuePrinter const, std::default_delete&lt;google::protobuf::TextFormat::FastFieldValuePrinter const&gt; &gt; &gt; &gt; &gt;::find (43,478,259 samples, 0.36%)</title><rect x="278.8" y="421" width="4.2" height="15.0" fill="rgb(228,117,42)" rx="2" ry="2" />
<text  x="281.75" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (188,405,789 samples, 1.54%)</title><rect x="397.7" y="581" width="18.2" height="15.0" fill="rgb(254,142,20)" rx="2" ry="2" />
<text  x="400.73" y="591.5" ></text>
</g>
<g >
<title>TBusppDriver::ProcTBusppMsg (1,637,681,089 samples, 13.40%)</title><rect x="840.1" y="677" width="158.1" height="15.0" fill="rgb(252,86,50)" rx="2" ry="2" />
<text  x="843.06" y="687.5" >TBusppDriver::ProcTB..</text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (57,971,012 samples, 0.47%)</title><rect x="273.2" y="405" width="5.6" height="15.0" fill="rgb(234,184,39)" rx="2" ry="2" />
<text  x="276.16" y="415.5" ></text>
</g>
<g >
<title>all (12,217,390,779 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(249,204,23)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt;::find (14,492,753 samples, 0.12%)</title><rect x="681.9" y="517" width="1.4" height="15.0" fill="rgb(226,182,6)" rx="2" ry="2" />
<text  x="684.89" y="527.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::~Resource (14,492,753 samples, 0.12%)</title><rect x="438.3" y="437" width="1.4" height="15.0" fill="rgb(217,159,9)" rx="2" ry="2" />
<text  x="441.33" y="447.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="590.9" y="357" width="1.4" height="15.0" fill="rgb(246,43,48)" rx="2" ry="2" />
<text  x="593.90" y="367.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="176.6" y="517" width="1.4" height="15.0" fill="rgb(224,25,0)" rx="2" ry="2" />
<text  x="179.57" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (14,492,753 samples, 0.12%)</title><rect x="1115.8" y="677" width="1.4" height="15.0" fill="rgb(245,131,47)" rx="2" ry="2" />
<text  x="1118.81" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (14,492,753 samples, 0.12%)</title><rect x="1027.6" y="597" width="1.4" height="15.0" fill="rgb(228,118,4)" rx="2" ry="2" />
<text  x="1030.63" y="607.5" ></text>
</g>
<g >
<title>opentelemetry::v1::exporter::otlp::OtlpRecordableUtils::PopulateRequest (72,463,765 samples, 0.59%)</title><rect x="81.4" y="501" width="7.0" height="15.0" fill="rgb(252,170,14)" rx="2" ry="2" />
<text  x="84.39" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_is_leaked (14,492,753 samples, 0.12%)</title><rect x="424.3" y="565" width="1.4" height="15.0" fill="rgb(210,45,29)" rx="2" ry="2" />
<text  x="427.33" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::clear (14,492,753 samples, 0.12%)</title><rect x="456.5" y="517" width="1.4" height="15.0" fill="rgb(242,2,14)" rx="2" ry="2" />
<text  x="459.52" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;opentelemetry::v1::trace::TraceState&gt;::~shared_ptr (14,492,753 samples, 0.12%)</title><rect x="516.7" y="469" width="1.4" height="15.0" fill="rgb(223,131,14)" rx="2" ry="2" />
<text  x="519.71" y="479.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="693.1" y="373" width="1.4" height="15.0" fill="rgb(244,160,0)" rx="2" ry="2" />
<text  x="696.08" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::BaseTextGenerator::PrintString (14,492,753 samples, 0.12%)</title><rect x="651.1" y="405" width="1.4" height="15.0" fill="rgb(208,172,3)" rx="2" ry="2" />
<text  x="654.09" y="415.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (14,492,753 samples, 0.12%)</title><rect x="707.1" y="389" width="1.4" height="15.0" fill="rgb(222,4,15)" rx="2" ry="2" />
<text  x="710.08" y="399.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (14,492,753 samples, 0.12%)</title><rect x="875.1" y="101" width="1.4" height="15.0" fill="rgb(209,104,17)" rx="2" ry="2" />
<text  x="878.05" y="111.5" ></text>
</g>
<g >
<title>operator delete (14,492,753 samples, 0.12%)</title><rect x="963.2" y="485" width="1.4" height="15.0" fill="rgb(251,11,6)" rx="2" ry="2" />
<text  x="966.24" y="495.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="873.7" y="293" width="2.8" height="15.0" fill="rgb(246,155,3)" rx="2" ry="2" />
<text  x="876.65" y="303.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**&gt; (14,492,753 samples, 0.12%)</title><rect x="704.3" y="437" width="1.4" height="15.0" fill="rgb(225,197,3)" rx="2" ry="2" />
<text  x="707.28" y="447.5" ></text>
</g>
<g >
<title>RPC::RPCAsync (420,289,837 samples, 3.44%)</title><rect x="137.4" y="629" width="40.6" height="15.0" fill="rgb(242,200,26)" rx="2" ry="2" />
<text  x="140.38" y="639.5" >RPC..</text>
</g>
<g >
<title>std::_Rb_tree&lt;AcoLog::ELogPriority, std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;AcoLog::ELogPriority&gt;, std::allocator&lt;std::pair&lt;AcoLog::ELogPriority const, std::list&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_S_key (14,492,753 samples, 0.12%)</title><rect x="840.1" y="533" width="1.4" height="15.0" fill="rgb(208,124,24)" rx="2" ry="2" />
<text  x="843.06" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt; &gt;::_S_key (14,492,753 samples, 0.12%)</title><rect x="572.7" y="389" width="1.4" height="15.0" fill="rgb(227,6,44)" rx="2" ry="2" />
<text  x="575.70" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::_InternalSerialize (28,985,506 samples, 0.24%)</title><rect x="687.5" y="453" width="2.8" height="15.0" fill="rgb(231,163,7)" rx="2" ry="2" />
<text  x="690.49" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;google::protobuf::Descriptor const*, std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt;, std::allocator&lt;std::pair&lt;google::protobuf::Descriptor const* const, google::protobuf::Message const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;google::protobuf::Descriptor const*&gt;, std::hash&lt;google::protobuf::Descriptor const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (14,492,753 samples, 0.12%)</title><rect x="968.8" y="517" width="1.4" height="15.0" fill="rgb(225,226,26)" rx="2" ry="2" />
<text  x="971.84" y="527.5" ></text>
</g>
<g >
<title>GetPbBytesVolatile (43,478,259 samples, 0.36%)</title><rect x="861.1" y="469" width="4.2" height="15.0" fill="rgb(236,118,40)" rx="2" ry="2" />
<text  x="864.06" y="479.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThreadPool::Alloc (14,492,753 samples, 0.12%)</title><rect x="852.7" y="581" width="1.4" height="15.0" fill="rgb(223,79,2)" rx="2" ry="2" />
<text  x="855.66" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (14,492,753 samples, 0.12%)</title><rect x="259.2" y="389" width="1.4" height="15.0" fill="rgb(213,3,51)" rx="2" ry="2" />
<text  x="262.16" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="599.3" y="453" width="1.4" height="15.0" fill="rgb(220,191,35)" rx="2" ry="2" />
<text  x="602.30" y="463.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (28,985,506 samples, 0.24%)</title><rect x="305.3" y="389" width="2.8" height="15.0" fill="rgb(207,13,14)" rx="2" ry="2" />
<text  x="308.35" y="399.5" ></text>
</g>
<g >
<title>prometheus::Counter::Increment (14,492,753 samples, 0.12%)</title><rect x="485.9" y="501" width="1.4" height="15.0" fill="rgb(209,11,26)" rx="2" ry="2" />
<text  x="488.92" y="511.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (14,492,753 samples, 0.12%)</title><rect x="599.3" y="437" width="1.4" height="15.0" fill="rgb(206,0,45)" rx="2" ry="2" />
<text  x="602.30" y="447.5" ></text>
</g>
<g >
<title>TBusppDriver::send_pkg_to_service (14,492,753 samples, 0.12%)</title><rect x="586.7" y="549" width="1.4" height="15.0" fill="rgb(205,162,41)" rx="2" ry="2" />
<text  x="589.70" y="559.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadata::have_unknown_fields (14,492,753 samples, 0.12%)</title><rect x="1075.2" y="725" width="1.4" height="15.0" fill="rgb(239,86,40)" rx="2" ry="2" />
<text  x="1078.22" y="735.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolCounter (28,985,506 samples, 0.24%)</title><rect x="382.3" y="581" width="2.8" height="15.0" fill="rgb(216,21,52)" rx="2" ry="2" />
<text  x="385.34" y="591.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="651.1" y="389" width="1.4" height="15.0" fill="rgb(250,208,32)" rx="2" ry="2" />
<text  x="654.09" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;google::protobuf::Arena*&amp;, int&amp;, int&amp;, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&amp;&gt;::operator=&lt;google::protobuf::Arena*, int, int, google::protobuf::internal::RepeatedPtrFieldBase::Rep*&gt; (14,492,753 samples, 0.12%)</title><rect x="81.4" y="421" width="1.4" height="15.0" fill="rgb(226,76,12)" rx="2" ry="2" />
<text  x="84.39" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::GetFieldPrinter (14,492,753 samples, 0.12%)</title><rect x="471.9" y="517" width="1.4" height="15.0" fill="rgb(231,157,51)" rx="2" ry="2" />
<text  x="474.92" y="527.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::SetString (14,492,753 samples, 0.12%)</title><rect x="539.1" y="421" width="1.4" height="15.0" fill="rgb(235,200,18)" rx="2" ry="2" />
<text  x="542.11" y="431.5" ></text>
</g>
<g >
<title>std::string::reserve (14,492,753 samples, 0.12%)</title><rect x="942.2" y="405" width="1.4" height="15.0" fill="rgb(232,140,40)" rx="2" ry="2" />
<text  x="945.24" y="415.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="942.2" y="341" width="1.4" height="15.0" fill="rgb(253,224,9)" rx="2" ry="2" />
<text  x="945.24" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;google::protobuf::Message const*, std::allocator&lt;google::protobuf::Message const*&gt; &gt;::_Vector_impl::~_Vector_impl (14,492,753 samples, 0.12%)</title><rect x="329.1" y="485" width="1.4" height="15.0" fill="rgb(244,178,52)" rx="2" ry="2" />
<text  x="332.15" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, std::unique_ptr&lt;NS_ACO::AcoThread::AnyParamBase, std::default_delete&lt;NS_ACO::AcoThread::AnyParamBase&gt; &gt; &gt; &gt;::_M_valptr (14,492,753 samples, 0.12%)</title><rect x="676.3" y="565" width="1.4" height="15.0" fill="rgb(212,59,41)" rx="2" ry="2" />
<text  x="679.29" y="575.5" ></text>
</g>
<g >
<title>__strrchr_sse42 (14,492,753 samples, 0.12%)</title><rect x="998.2" y="677" width="1.4" height="15.0" fill="rgb(217,106,17)" rx="2" ry="2" />
<text  x="1001.23" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Get (14,492,753 samples, 0.12%)</title><rect x="492.9" y="325" width="1.4" height="15.0" fill="rgb(246,222,22)" rx="2" ry="2" />
<text  x="495.92" y="335.5" ></text>
</g>
<g >
<title>std::string::_M_check_length (14,492,753 samples, 0.12%)</title><rect x="533.5" y="277" width="1.4" height="15.0" fill="rgb(233,64,7)" rx="2" ry="2" />
<text  x="536.51" y="287.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (14,492,753 samples, 0.12%)</title><rect x="1033.2" y="773" width="1.4" height="15.0" fill="rgb(230,21,24)" rx="2" ry="2" />
<text  x="1036.23" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName (28,985,506 samples, 0.24%)</title><rect x="43.6" y="581" width="2.8" height="15.0" fill="rgb(251,110,35)" rx="2" ry="2" />
<text  x="46.59" y="591.5" ></text>
</g>
<g >
<title>opentelemetry::proto::common::v1::AnyValue::set_string_value&lt;std::string const&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="441.1" y="485" width="1.4" height="15.0" fill="rgb(248,149,23)" rx="2" ry="2" />
<text  x="444.13" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (14,492,753 samples, 0.12%)</title><rect x="473.3" y="389" width="1.4" height="15.0" fill="rgb(227,206,23)" rx="2" ry="2" />
<text  x="476.32" y="399.5" ></text>
</g>
<g >
<title>google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased (14,492,753 samples, 0.12%)</title><rect x="1031.8" y="709" width="1.4" height="15.0" fill="rgb(216,124,2)" rx="2" ry="2" />
<text  x="1034.83" y="719.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="666.5" y="485" width="2.8" height="15.0" fill="rgb(235,21,3)" rx="2" ry="2" />
<text  x="669.49" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::string const, std::string&gt;::~pair (14,492,753 samples, 0.12%)</title><rect x="635.7" y="437" width="1.4" height="15.0" fill="rgb(217,15,44)" rx="2" ry="2" />
<text  x="638.69" y="447.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::trace::v1::ResourceSpans&gt;::~RepeatedPtrField (28,985,506 samples, 0.24%)</title><rect x="436.9" y="517" width="2.8" height="15.0" fill="rgb(212,163,12)" rx="2" ry="2" />
<text  x="439.93" y="527.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="441.1" y="437" width="1.4" height="15.0" fill="rgb(217,166,13)" rx="2" ry="2" />
<text  x="444.13" y="447.5" ></text>
</g>
<g >
<title>[shm_talent_1.1.83.1_heap] (86,956,518 samples, 0.71%)</title><rect x="1006.6" y="789" width="8.4" height="15.0" fill="rgb(254,169,47)" rx="2" ry="2" />
<text  x="1009.63" y="799.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;NS_ACO::ThreadID, int, std::hash&lt;NS_ACO::ThreadID&gt;, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::allocator&lt;std::pair&lt;NS_ACO::ThreadID const, int&gt; &gt; &gt;::operator[] (14,492,753 samples, 0.12%)</title><rect x="903.0" y="613" width="1.4" height="15.0" fill="rgb(212,128,29)" rx="2" ry="2" />
<text  x="906.05" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::~_Copy_ctor_base (14,492,753 samples, 0.12%)</title><rect x="513.9" y="373" width="1.4" height="15.0" fill="rgb(249,221,45)" rx="2" ry="2" />
<text  x="516.91" y="383.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::PrintToString (159,420,283 samples, 1.30%)</title><rect x="551.7" y="517" width="15.4" height="15.0" fill="rgb(254,79,23)" rx="2" ry="2" />
<text  x="554.71" y="527.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="102.4" y="533" width="1.4" height="15.0" fill="rgb(239,100,43)" rx="2" ry="2" />
<text  x="105.38" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::collector::trace::v1::ExportTraceServiceRequest::SharedDtor (28,985,506 samples, 0.24%)</title><rect x="436.9" y="533" width="2.8" height="15.0" fill="rgb(233,65,44)" rx="2" ry="2" />
<text  x="439.93" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6,898,550,428 samples, 56.47%)</title><rect x="53.4" y="693" width="666.3" height="15.0" fill="rgb(231,14,16)" rx="2" ry="2" />
<text  x="56.39" y="703.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt;, google::protobuf::FieldDescriptor const**, google::protobuf::FieldDescriptor const*&gt; (14,492,753 samples, 0.12%)</title><rect x="39.4" y="565" width="1.4" height="15.0" fill="rgb(212,200,3)" rx="2" ry="2" />
<text  x="42.40" y="575.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14,492,753 samples, 0.12%)</title><rect x="487.3" y="517" width="1.4" height="15.0" fill="rgb(229,162,24)" rx="2" ry="2" />
<text  x="490.32" y="527.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="509.7" y="389" width="1.4" height="15.0" fill="rgb(206,190,21)" rx="2" ry="2" />
<text  x="512.72" y="399.5" ></text>
</g>
<g >
<title>operator new (14,492,753 samples, 0.12%)</title><rect x="600.7" y="309" width="1.4" height="15.0" fill="rgb(214,38,48)" rx="2" ry="2" />
<text  x="603.70" y="319.5" ></text>
</g>
<g >
<title>TBusppUtil::send_pkg_to_instance (28,985,506 samples, 0.24%)</title><rect x="421.5" y="613" width="2.8" height="15.0" fill="rgb(216,224,4)" rx="2" ry="2" />
<text  x="424.53" y="623.5" ></text>
</g>
<g >
<title>MetricsUtil::ReportProtocolMetrics (28,985,506 samples, 0.24%)</title><rect x="572.7" y="485" width="2.8" height="15.0" fill="rgb(229,152,44)" rx="2" ry="2" />
<text  x="575.70" y="495.5" ></text>
</g>
<g >
<title>NS_ACO::AcoThread::SwitchContext (826,086,921 samples, 6.76%)</title><rect x="749.1" y="677" width="79.8" height="15.0" fill="rgb(226,26,16)" rx="2" ry="2" />
<text  x="752.07" y="687.5" >NS_ACO::A..</text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ScopeSpans::ByteSizeLong (14,492,753 samples, 0.12%)</title><rect x="492.9" y="389" width="1.4" height="15.0" fill="rgb(210,50,2)" rx="2" ry="2" />
<text  x="495.92" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::(anonymous namespace)::NowOr (14,492,753 samples, 0.12%)</title><rect x="508.3" y="453" width="1.4" height="15.0" fill="rgb(236,5,35)" rx="2" ry="2" />
<text  x="511.32" y="463.5" ></text>
</g>
<g >
<title>opentelemetry::v1::sdk::trace::Span::End (115,942,024 samples, 0.95%)</title><rect x="569.9" y="565" width="11.2" height="15.0" fill="rgb(208,132,2)" rx="2" ry="2" />
<text  x="572.91" y="575.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (43,478,259 samples, 0.36%)</title><rect x="931.0" y="581" width="4.2" height="15.0" fill="rgb(219,131,33)" rx="2" ry="2" />
<text  x="934.04" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;google::protobuf::FieldDescriptor const**&gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="343.1" y="501" width="1.4" height="15.0" fill="rgb(240,100,20)" rx="2" ry="2" />
<text  x="346.14" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct_aux&lt;char const*&gt; (28,985,506 samples, 0.24%)</title><rect x="305.3" y="373" width="2.8" height="15.0" fill="rgb(235,130,30)" rx="2" ry="2" />
<text  x="308.35" y="383.5" ></text>
</g>
<g >
<title>opentelemetry::v1::trace::Tracer::StartSpan&lt;std::unordered_map&lt;std::string, std::string, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;,  (28,985,506 samples, 0.24%)</title><rect x="581.1" y="549" width="2.8" height="15.0" fill="rgb(249,73,49)" rx="2" ry="2" />
<text  x="584.10" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;google::protobuf::FieldDescriptor const**, std::vector&lt;google::protobuf::FieldDescriptor const*, std::allocator&lt;google::protobuf::FieldDescriptor const*&gt; &gt; &gt; (14,492,753 samples, 0.12%)</title><rect x="603.5" y="453" width="1.4" height="15.0" fill="rgb(212,19,54)" rx="2" ry="2" />
<text  x="606.50" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;opentelemetry::proto::common::v1::KeyValue&gt;::Get (14,492,753 samples, 0.12%)</title><rect x="427.1" y="389" width="1.4" height="15.0" fill="rgb(224,29,35)" rx="2" ry="2" />
<text  x="430.13" y="399.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::ByteSizeLong (43,478,259 samples, 0.36%)</title><rect x="866.7" y="437" width="4.2" height="15.0" fill="rgb(251,177,14)" rx="2" ry="2" />
<text  x="869.65" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, std::unique_ptr&lt;opentelemetry::v1::sdk::trace::Recordable, std::default_delete&lt;opentelemetry::v1::sdk::trace::Recordable&gt; &gt; &gt; &gt; &gt;::_M_erase_aux (14,492,753 samples, 0.12%)</title><rect x="61.8" y="485" width="1.4" height="15.0" fill="rgb(235,110,19)" rx="2" ry="2" />
<text  x="64.79" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (14,492,753 samples, 0.12%)</title><rect x="10.0" y="725" width="1.4" height="15.0" fill="rgb(239,216,40)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>google::protobuf::internal::MapFieldPrinterHelper::CopyKey (28,985,506 samples, 0.24%)</title><rect x="971.6" y="565" width="2.8" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="974.64" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, std::map&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, prometheus::Counter*, std::less&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const, prometheus::Counter*&gt; &gt; &gt; &gt; &gt;::_M_ptr (14,492,753 samples, 0.12%)</title><rect x="572.7" y="373" width="1.4" height="15.0" fill="rgb(223,116,12)" rx="2" ry="2" />
<text  x="575.70" y="383.5" ></text>
</g>
<g >
<title>AcoContext::CreateService (565,217,367 samples, 4.63%)</title><rect x="849.9" y="645" width="54.5" height="15.0" fill="rgb(234,92,30)" rx="2" ry="2" />
<text  x="852.86" y="655.5" >AcoCo..</text>
</g>
<g >
<title>std::string::_M_rep (14,492,753 samples, 0.12%)</title><rect x="863.9" y="277" width="1.4" height="15.0" fill="rgb(251,11,15)" rx="2" ry="2" />
<text  x="866.86" y="287.5" ></text>
</g>
<g >
<title>AcoLog::AcoLog (14,492,753 samples, 0.12%)</title><rect x="14.2" y="709" width="1.4" height="15.0" fill="rgb(214,36,25)" rx="2" ry="2" />
<text  x="17.20" y="719.5" ></text>
</g>
<g >
<title>__dynamic_cast (28,985,506 samples, 0.24%)</title><rect x="1162.0" y="789" width="2.8" height="15.0" fill="rgb(251,174,37)" rx="2" ry="2" />
<text  x="1165.00" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::TextGenerator::Print (14,492,753 samples, 0.12%)</title><rect x="327.7" y="453" width="1.4" height="15.0" fill="rgb(227,228,27)" rx="2" ry="2" />
<text  x="330.75" y="463.5" ></text>
</g>
<g >
<title>google::protobuf::Reflection::ListFieldsMayFailOnStripped (130,434,777 samples, 1.07%)</title><rect x="448.1" y="533" width="12.6" height="15.0" fill="rgb(228,211,28)" rx="2" ry="2" />
<text  x="451.13" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;std::monostate, bool, long, unsigned long, double, std::shared_ptr&lt;opentelemetry::v1::trace::Span&gt;, std::shared_ptr&lt;opentelemetry::v1::trace::SpanContext&gt;, std::shared_ptr&lt;opentelemetry::v1::baggage::Baggage&gt; &gt;::~_Variant_base (14,492,753 samples, 0.12%)</title><rect x="513.9" y="437" width="1.4" height="15.0" fill="rgb(243,229,29)" rx="2" ry="2" />
<text  x="516.91" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;NS_ACO::ThreadID, std::pair&lt;NS_ACO::ThreadID const, int&gt;, std::__detail::_Select1st, std::equal_to&lt;NS_ACO::ThreadID&gt;, std::hash&lt;NS_ACO::ThreadID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (14,492,753 samples, 0.12%)</title><rect x="585.3" y="533" width="1.4" height="15.0" fill="rgb(216,84,48)" rx="2" ry="2" />
<text  x="588.30" y="543.5" ></text>
</g>
<g >
<title>opentelemetry::proto::resource::v1::Resource::SharedDtor (14,492,753 samples, 0.12%)</title><rect x="599.3" y="325" width="1.4" height="15.0" fill="rgb(224,209,11)" rx="2" ry="2" />
<text  x="602.30" y="335.5" ></text>
</g>
<g >
<title>opentelemetry::proto::trace::v1::ResourceSpans::~ResourceSpans (14,492,753 samples, 0.12%)</title><rect x="599.3" y="405" width="1.4" height="15.0" fill="rgb(249,146,12)" rx="2" ry="2" />
<text  x="602.30" y="415.5" ></text>
</g>
<g >
<title>std::string::assign (14,492,753 samples, 0.12%)</title><rect x="1181.6" y="789" width="1.4" height="15.0" fill="rgb(235,169,52)" rx="2" ry="2" />
<text  x="1184.60" y="799.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::type (14,492,753 samples, 0.12%)</title><rect x="638.5" y="357" width="1.4" height="15.0" fill="rgb(254,96,29)" rx="2" ry="2" />
<text  x="641.49" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::once_flag&amp;&gt; (14,492,753 samples, 0.12%)</title><rect x="207.4" y="421" width="1.4" height="15.0" fill="rgb(232,145,23)" rx="2" ry="2" />
<text  x="210.37" y="431.5" ></text>
</g>
<g >
<title>google::protobuf::TextFormat::Printer::Print (173,913,036 samples, 1.42%)</title><rect x="35.2" y="645" width="16.8" height="15.0" fill="rgb(207,31,27)" rx="2" ry="2" />
<text  x="38.20" y="655.5" ></text>
</g>
<g >
<title>google::protobuf::FieldDescriptor::cpp_type (28,985,506 samples, 0.24%)</title><rect x="203.2" y="485" width="2.8" height="15.0" fill="rgb(238,131,20)" rx="2" ry="2" />
<text  x="206.17" y="495.5" ></text>
</g>
</g>
</svg>
